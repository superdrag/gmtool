// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: LocalData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LocalData {

  /// <summary>Holder for reflection information generated from LocalData.proto</summary>
  public static partial class LocalDataReflection {

    #region Descriptor
    /// <summary>File descriptor for LocalData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LocalDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9Mb2NhbERhdGEucHJvdG8SCUxvY2FsRGF0YSJ8CgVMb2dpbhIPCgdhY2Nv",
            "dW50GAEgASgJEg4KBnBhc3N3ZBgCIAEoCRIPCgd2ZXJzaW9uGAMgASgJEhAK",
            "CGhlYWRpY29uGAQgASgJEg0KBWd1ZXN0GAUgASgFEg4KBnJlY29ubhgGIAEo",
            "BRIQCghwbGF0Zm9ybRgLIAEoCSIoCghNYWluVGFzaxIKCgJpZBgBIAEoBRIQ",
            "Cghwcm9ncmVzcxgCIAEoBSJYCghSb2xlSXRlbRIKCgJpZBgBIAEoBRIOCgZj",
            "dXJudW0YAiABKAUSDgoGZXh0bnVtGAMgASgFEhEKCWNvdW50ZG93bhgEIAEo",
            "BRINCgVzdGF0ZRgFIAEoBSItCgRSb2xlEiUKCHJvbGVMaXN0GAEgAygLMhMu",
            "TG9jYWxEYXRhLlJvbGVJdGVtImQKCEN1cnJlbmN5EisKBGxpc3QYASADKAsy",
            "HS5Mb2NhbERhdGEuQ3VycmVuY3kuTGlzdEVudHJ5GisKCUxpc3RFbnRyeRIL",
            "CgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAU6AjgBImwKDEJvc3NSb2xlVGFz",
            "axIvCgRsaXN0GAEgAygLMiEuTG9jYWxEYXRhLkJvc3NSb2xlVGFzay5MaXN0",
            "RW50cnkaKwoJTGlzdEVudHJ5EgsKA2tleRgBIAEoBRINCgV2YWx1ZRgCIAEo",
            "BToCOAEiagoLQm9zc1JvbGVBZHMSLgoEbGlzdBgBIAMoCzIgLkxvY2FsRGF0",
            "YS5Cb3NzUm9sZUFkcy5MaXN0RW50cnkaKwoJTGlzdEVudHJ5EgsKA2tleRgB",
            "IAEoBRINCgV2YWx1ZRgCIAEoBToCOAEiTQoKQmFsbGVySXRlbRINCgVsZXZl",
            "bBgBIAEoBRIQCghwcm9ncmVzcxgCIAEoBRINCgVlcXVpcBgDIAMoBRIPCgdz",
            "dGFyTnVtGAQgASgFIncKBkJhbGxlchIpCgRsaXN0GAEgAygLMhsuTG9jYWxE",
            "YXRhLkJhbGxlci5MaXN0RW50cnkaQgoJTGlzdEVudHJ5EgsKA2tleRgBIAEo",
            "BRIkCgV2YWx1ZRgCIAEoCzIVLkxvY2FsRGF0YS5CYWxsZXJJdGVtOgI4ASJ4",
            "CgxHaWZ0UGFja0l0ZW0SEAoIaXNBY3RpdmUYASABKAgSDgoGYnV5TnVtGAIg",
            "ASgFEhAKCG92ZXJUaW1lGAMgASgDEhEKCXBvcHVwVGltZRgEIAEoAxISCgph",
            "Y3RpdmVUaW1lGAUgASgDEg0KBWFkTnVtGAYgASgFIn0KCEdpZnRQYWNrEisK",
            "BGxpc3QYASADKAsyHS5Mb2NhbERhdGEuR2lmdFBhY2suTGlzdEVudHJ5GkQK",
            "CUxpc3RFbnRyeRILCgNrZXkYASABKAUSJgoFdmFsdWUYAiABKAsyFy5Mb2Nh",
            "bERhdGEuR2lmdFBhY2tJdGVtOgI4ASI/CgxGYWNpbGl0eUl0ZW0SEAoIY3Vy",
            "TGV2ZWwYASABKAUSDAoEdGltZRgCIAEoBRIPCgdpc0JyZWFrGAMgASgIInUK",
            "BFJvb20SJwoEbGlzdBgBIAMoCzIZLkxvY2FsRGF0YS5Sb29tLkxpc3RFbnRy",
            "eRpECglMaXN0RW50cnkSCwoDa2V5GAEgASgFEiYKBXZhbHVlGAIgASgLMhcu",
            "TG9jYWxEYXRhLkZhY2lsaXR5SXRlbToCOAEiJwoJRGFpbHlUYXNrEgoKAmlk",
            "GAEgASgFEg4KBmN1ck51bRgCIAEoBSKRAQoMQWxsRGFpbHlUYXNrEg0KBWlz",
            "R2V0GAEgAygIEi8KBGxpc3QYAiADKAsyIS5Mb2NhbERhdGEuQWxsRGFpbHlU",
            "YXNrLkxpc3RFbnRyeRpBCglMaXN0RW50cnkSCwoDa2V5GAEgASgFEiMKBXZh",
            "bHVlGAIgASgLMhQuTG9jYWxEYXRhLkRhaWx5VGFzazoCOAEiHgoOUmVjcnVp",
            "dFRvdXJpc3QSDAoEbGlzdBgBIAMoBSIaCgpEb3VibGVUaW1lEgwKBHRpbWUY",
            "ASABKAUiLwoIQXJlYUluZm8SDQoFbGV2ZWwYASABKAUSFAoMdXBncmFkZV90",
            "aW1lGAIgASgFIn8KC0FsbEFyZWFJbmZvEi4KBGxpc3QYASADKAsyIC5Mb2Nh",
            "bERhdGEuQWxsQXJlYUluZm8uTGlzdEVudHJ5GkAKCUxpc3RFbnRyeRILCgNr",
            "ZXkYASABKAUSIgoFdmFsdWUYAiABKAsyEy5Mb2NhbERhdGEuQXJlYUluZm86",
            "AjgBIi8KCFJvb21JbmZvEg0KBWxldmVsGAEgASgFEhQKDHVwZ3JhZGVfdGlt",
            "ZRgCIAEoBSJ/CgtBbGxSb29tSW5mbxIuCgRsaXN0GAEgAygLMiAuTG9jYWxE",
            "YXRhLkFsbFJvb21JbmZvLkxpc3RFbnRyeRpACglMaXN0RW50cnkSCwoDa2V5",
            "GAEgASgFEiIKBXZhbHVlGAIgASgLMhMuTG9jYWxEYXRhLkFyZWFJbmZvOgI4",
            "ASIhChFCdWlsZGVyRmluaXNoVGltZRIMCgRsaXN0GAEgAygFIjAKCVlpZWxk",
            "VGltZRISCgp1cGRhdGVUaW1lGAEgASgFEg8KB2N1clRpbWUYAiABKAUiKgoP",
            "WWllbGRTaW5nbGVJbmZvEgoKAmlkGAEgASgJEgsKA251bRgCIAEoBSI1CglZ",
            "aWVsZEluZm8SKAoEbGlzdBgBIAMoCzIaLkxvY2FsRGF0YS5ZaWVsZFNpbmds",
            "ZUluZm8iKAoOVGltZUJlQXR0YWNrZWQSFgoOdGltZUJlQXR0YWNrZWQYASAB",
            "KAUiNwoLVG91cmlzdEluZm8SEQoJdG91cmlzdElEGAEgASgFEhUKDWlzVW5j",
            "b25maXJtZWQYAiABKAUiOgoSVW5jb25maXJtZWRUb3VyaXN0EiQKBGxpc3QY",
            "ASADKAsyFi5Mb2NhbERhdGEuVG91cmlzdEluZm8iNQoLU2V0dGluZ0luZm8S",
            "EAoIbGFuZ3VhZ2UYASABKAkSFAoMaXNTaG93QnViYmxlGAIgASgIImwKDlNp",
            "bmdsZUhvb2tJbmZvEg4KBnJvb21JRBgBIAEoBRIMCgR0aW1lGAIgASgFEg4K",
            "BmlzSG9vaxgDIAEoCBINCgV5aWVsZBgEIAEoBRINCgVhZE51bRgFIAEoBRIO",
            "CgZiYWxsZXIYBiADKAUihQEKC0FsbEhvb2tJbmZvEi4KBGxpc3QYASADKAsy",
            "IC5Mb2NhbERhdGEuQWxsSG9va0luZm8uTGlzdEVudHJ5GkYKCUxpc3RFbnRy",
            "eRILCgNrZXkYASABKAUSKAoFdmFsdWUYAiABKAsyGS5Mb2NhbERhdGEuU2lu",
            "Z2xlSG9va0luZm86AjgBImgKEVNpbmdsZVByb2R1Y3RJbmZvEgoKAmlkGAEg",
            "ASgFEhEKCW1pbGVzdG9uZRgCIAEoBRIMCgRzdGFyGAMgASgFEhEKCWlzQ29s",
            "bGVjdBgEIAEoCBITCgtwcm9kdWN0VGltZRgFIAEoBSKOAQoOQWxsUHJvZHVj",
            "dEluZm8SMQoEbGlzdBgBIAMoCzIjLkxvY2FsRGF0YS5BbGxQcm9kdWN0SW5m",
            "by5MaXN0RW50cnkaSQoJTGlzdEVudHJ5EgsKA2tleRgBIAEoBRIrCgV2YWx1",
            "ZRgCIAEoCzIcLkxvY2FsRGF0YS5TaW5nbGVQcm9kdWN0SW5mbzoCOAEiLwoP",
            "U2luZ2xlRXF1aXBJbmZvEgoKAmlkGAEgASgFEhAKCGNvbmZpZ0lEGAIgASgF",
            "IogBCgxPd25FcXVpcEluZm8SLwoEbGlzdBgBIAMoCzIhLkxvY2FsRGF0YS5P",
            "d25FcXVpcEluZm8uTGlzdEVudHJ5GkcKCUxpc3RFbnRyeRILCgNrZXkYASAB",
            "KAUSKQoFdmFsdWUYAiABKAsyGi5Mb2NhbERhdGEuU2luZ2xlRXF1aXBJbmZv",
            "OgI4ASJqCgtFcXVpcElzTG9jaxIuCgRsaXN0GAEgAygLMiAuTG9jYWxEYXRh",
            "LkVxdWlwSXNMb2NrLkxpc3RFbnRyeRorCglMaXN0RW50cnkSCwoDa2V5GAEg",
            "ASgFEg0KBXZhbHVlGAIgASgIOgI4ASIYCgpFcXVpcElETnVtEgoKAmlkGAEg",
            "ASgFIkIKElNpbmdsZUVxdWlwUHJvZHVjdBIQCghjb25maWdJRBgBIAEoBRIM",
            "CgR0aW1lGAIgASgFEgwKBHR5cGUYAyABKAUikQEKD0FsbEVxdWlwUHJvZHVj",
            "dBIyCgRsaXN0GAEgAygLMiQuTG9jYWxEYXRhLkFsbEVxdWlwUHJvZHVjdC5M",
            "aXN0RW50cnkaSgoJTGlzdEVudHJ5EgsKA2tleRgBIAEoBRIsCgV2YWx1ZRgC",
            "IAEoCzIdLkxvY2FsRGF0YS5TaW5nbGVFcXVpcFByb2R1Y3Q6AjgBIjoKC1By",
            "b2R1Y3RJbmZvEhUKDWNhblByb2R1Y3ROdW0YASABKAUSFAoMcHJvZHVjdElE",
            "TnVtGAIgASgFImIKB1Jlc1RpbWUSKgoEbGlzdBgBIAMoCzIcLkxvY2FsRGF0",
            "YS5SZXNUaW1lLkxpc3RFbnRyeRorCglMaXN0RW50cnkSCwoDa2V5GAEgASgJ",
            "Eg0KBXZhbHVlGAIgASgFOgI4ASJXCg1QYXNzVGFza1N0YXRlEgoKAmlkGAEg",
            "ASgFEhMKC2N1clByb2dyZXNzGAIgASgFEhYKDnRhcmdldFByb2dyZXNzGAMg",
            "ASgFEg0KBWlzR2V0GAQgASgFIqMBCgllbmVteUl0ZW0SCgoCaWQYASABKAUS",
            "DAoEbmFtZRgCIAEoCRIQCghmaWdodE51bRgDIAEoBRIVCg1ydW5lX2p1ZGdt",
            "ZW50GAQgASgFEhQKDHJ1bmVfdGFjdGljcxgFIAEoBRIYChBydW5lX2Nvb3Bl",
            "cmF0aW9uGAYgASgFEhUKDXJ1bmVfY29oZXNpdmUYByABKAUSDAoEaGVhZBgI",
            "IAEoCSI2CglSYW5rVG9wMTASKQoLcmFua2luZ0xpc3QYASADKAsyFC5Mb2Nh",
            "bERhdGEuZW5lbXlJdGVtIjgKCVJhbmtFbmVteRIrCg1yYW5rRW5hbXlMaXN0",
            "GAEgAygLMhQuTG9jYWxEYXRhLmVuZW15SXRlbSIcCgpSYW5rUmVjb3JkEg4K",
            "BnJlY29yZBgBIAEoBSIoCglnb29kc0l0ZW0SDAoEbmFtZRgBIAEoCRINCgVz",
            "dGF0ZRgCIAEoBSI1CgpHb29kc1N0YXRlEicKCWdvb2RzTGlzdBgBIAMoCzIU",
            "LkxvY2FsRGF0YS5nb29kc0l0ZW0iOwoQdW5sb2NrZWROZXdzSXRlbRIKCgJp",
            "ZBgBIAEoBRINCgVzdGF0ZRgCIAEoBRIMCgR0aW1lGAMgASgFIkUKDFVubG9j",
            "a2VkTmV3cxI1ChB1bmxvY2tlZE5ld3NMaXN0GAEgAygLMhsuTG9jYWxEYXRh",
            "LnVubG9ja2VkTmV3c0l0ZW0iJgoLTG9ja2luZ05ld3MSFwoPbG9ja2luZ05l",
            "d3NMaXN0GAEgAygFIk4KB1Bhc3NFeHASDwoHcGFzc0V4cBgBIAEoBRIPCgd3",
            "ZWVrRXhwGAIgASgFEgwKBHdlZWsYAyABKAUSEwoLc2Vhc29uQ291bnQYBCAB",
            "KAUiFQoFR3VpZGUSDAoEbGlzdBgBIAMoBSKfAQoJQXJlbmFJbmZvEhEKCWN1",
            "ckdhbWVJRBgBIAEoBRIRCgljdXJSYW5rSUQYAiABKAUSDwoHcmFua051bRgD",
            "IAEoBRISCgpyYW5rQWRkTnVtGAQgASgFEg8KB2hlbHBOdW0YBSABKAUSDwoH",
            "aGVscFN1bRgGIAEoBRISCgpwZW9wbGVUaW1lGAcgASgCEhEKCXBlb3BsZU51",
            "bRgIIAEoAiItCgtOb3JtYWxDb3VudBINCgVjb3VudBgBIAEoBRIPCgdjdXJU",
            "aW1lGAIgASgFIi4KDFNwZWVkVXBQb3dlchINCgVwb3dlchgBIAEoAhIPCgdj",
            "dXJUaW1lGAIgASgFIhgKBkhlYWRJRBIOCgZoZWFkSUQYASABKAkiGQoJU3BV",
            "c2VUaW1lEgwKBHRpbWUYASABKAUiHwoOTm9ybWFsQWRzQ291bnQSDQoFY291",
            "bnQYASABKAViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.Login), global::LocalData.Login.Parser, new[]{ "Account", "Passwd", "Version", "Headicon", "Guest", "Reconn", "Platform" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.MainTask), global::LocalData.MainTask.Parser, new[]{ "Id", "Progress" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.RoleItem), global::LocalData.RoleItem.Parser, new[]{ "Id", "Curnum", "Extnum", "Countdown", "State" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.Role), global::LocalData.Role.Parser, new[]{ "RoleList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.Currency), global::LocalData.Currency.Parser, new[]{ "List" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.BossRoleTask), global::LocalData.BossRoleTask.Parser, new[]{ "List" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.BossRoleAds), global::LocalData.BossRoleAds.Parser, new[]{ "List" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.BallerItem), global::LocalData.BallerItem.Parser, new[]{ "Level", "Progress", "Equip", "StarNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.Baller), global::LocalData.Baller.Parser, new[]{ "List" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.GiftPackItem), global::LocalData.GiftPackItem.Parser, new[]{ "IsActive", "BuyNum", "OverTime", "PopupTime", "ActiveTime", "AdNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.GiftPack), global::LocalData.GiftPack.Parser, new[]{ "List" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.FacilityItem), global::LocalData.FacilityItem.Parser, new[]{ "CurLevel", "Time", "IsBreak" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.Room), global::LocalData.Room.Parser, new[]{ "List" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.DailyTask), global::LocalData.DailyTask.Parser, new[]{ "Id", "CurNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.AllDailyTask), global::LocalData.AllDailyTask.Parser, new[]{ "IsGet", "List" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.RecruitTourist), global::LocalData.RecruitTourist.Parser, new[]{ "List" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.DoubleTime), global::LocalData.DoubleTime.Parser, new[]{ "Time" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.AreaInfo), global::LocalData.AreaInfo.Parser, new[]{ "Level", "UpgradeTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.AllAreaInfo), global::LocalData.AllAreaInfo.Parser, new[]{ "List" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.RoomInfo), global::LocalData.RoomInfo.Parser, new[]{ "Level", "UpgradeTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.AllRoomInfo), global::LocalData.AllRoomInfo.Parser, new[]{ "List" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.BuilderFinishTime), global::LocalData.BuilderFinishTime.Parser, new[]{ "List" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.YieldTime), global::LocalData.YieldTime.Parser, new[]{ "UpdateTime", "CurTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.YieldSingleInfo), global::LocalData.YieldSingleInfo.Parser, new[]{ "Id", "Num" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.YieldInfo), global::LocalData.YieldInfo.Parser, new[]{ "List" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.TimeBeAttacked), global::LocalData.TimeBeAttacked.Parser, new[]{ "TimeBeAttacked_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.TouristInfo), global::LocalData.TouristInfo.Parser, new[]{ "TouristID", "IsUnconfirmed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.UnconfirmedTourist), global::LocalData.UnconfirmedTourist.Parser, new[]{ "List" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.SettingInfo), global::LocalData.SettingInfo.Parser, new[]{ "Language", "IsShowBubble" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.SingleHookInfo), global::LocalData.SingleHookInfo.Parser, new[]{ "RoomID", "Time", "IsHook", "Yield", "AdNum", "Baller" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.AllHookInfo), global::LocalData.AllHookInfo.Parser, new[]{ "List" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.SingleProductInfo), global::LocalData.SingleProductInfo.Parser, new[]{ "Id", "Milestone", "Star", "IsCollect", "ProductTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.AllProductInfo), global::LocalData.AllProductInfo.Parser, new[]{ "List" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.SingleEquipInfo), global::LocalData.SingleEquipInfo.Parser, new[]{ "Id", "ConfigID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.OwnEquipInfo), global::LocalData.OwnEquipInfo.Parser, new[]{ "List" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.EquipIsLock), global::LocalData.EquipIsLock.Parser, new[]{ "List" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.EquipIDNum), global::LocalData.EquipIDNum.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.SingleEquipProduct), global::LocalData.SingleEquipProduct.Parser, new[]{ "ConfigID", "Time", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.AllEquipProduct), global::LocalData.AllEquipProduct.Parser, new[]{ "List" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.ProductInfo), global::LocalData.ProductInfo.Parser, new[]{ "CanProductNum", "ProductIDNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.ResTime), global::LocalData.ResTime.Parser, new[]{ "List" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.PassTaskState), global::LocalData.PassTaskState.Parser, new[]{ "Id", "CurProgress", "TargetProgress", "IsGet" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.enemyItem), global::LocalData.enemyItem.Parser, new[]{ "Id", "Name", "FightNum", "RuneJudgment", "RuneTactics", "RuneCooperation", "RuneCohesive", "Head" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.RankTop10), global::LocalData.RankTop10.Parser, new[]{ "RankingList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.RankEnemy), global::LocalData.RankEnemy.Parser, new[]{ "RankEnamyList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.RankRecord), global::LocalData.RankRecord.Parser, new[]{ "Record" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.goodsItem), global::LocalData.goodsItem.Parser, new[]{ "Name", "State" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.GoodsState), global::LocalData.GoodsState.Parser, new[]{ "GoodsList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.unlockedNewsItem), global::LocalData.unlockedNewsItem.Parser, new[]{ "Id", "State", "Time" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.UnlockedNews), global::LocalData.UnlockedNews.Parser, new[]{ "UnlockedNewsList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.LockingNews), global::LocalData.LockingNews.Parser, new[]{ "LockingNewsList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.PassExp), global::LocalData.PassExp.Parser, new[]{ "PassExp_", "WeekExp", "Week", "SeasonCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.Guide), global::LocalData.Guide.Parser, new[]{ "List" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.ArenaInfo), global::LocalData.ArenaInfo.Parser, new[]{ "CurGameID", "CurRankID", "RankNum", "RankAddNum", "HelpNum", "HelpSum", "PeopleTime", "PeopleNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.NormalCount), global::LocalData.NormalCount.Parser, new[]{ "Count", "CurTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.SpeedUpPower), global::LocalData.SpeedUpPower.Parser, new[]{ "Power", "CurTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.HeadID), global::LocalData.HeadID.Parser, new[]{ "HeadID_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.SpUseTime), global::LocalData.SpUseTime.Parser, new[]{ "Time" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LocalData.NormalAdsCount), global::LocalData.NormalAdsCount.Parser, new[]{ "Count" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///登录信息
  /// </summary>
  public sealed partial class Login : pb::IMessage<Login> {
    private static readonly pb::MessageParser<Login> _parser = new pb::MessageParser<Login>(() => new Login());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Login> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Login() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Login(Login other) : this() {
      account_ = other.account_;
      passwd_ = other.passwd_;
      version_ = other.version_;
      headicon_ = other.headicon_;
      guest_ = other.guest_;
      reconn_ = other.reconn_;
      platform_ = other.platform_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Login Clone() {
      return new Login(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    /// <summary>
    ///账号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "passwd" field.</summary>
    public const int PasswdFieldNumber = 2;
    private string passwd_ = "";
    /// <summary>
    ///用户密码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Passwd {
      get { return passwd_; }
      set {
        passwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 3;
    private string version_ = "";
    /// <summary>
    ///版本号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "headicon" field.</summary>
    public const int HeadiconFieldNumber = 4;
    private string headicon_ = "";
    /// <summary>
    ///用户头像Url
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Headicon {
      get { return headicon_; }
      set {
        headicon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "guest" field.</summary>
    public const int GuestFieldNumber = 5;
    private int guest_;
    /// <summary>
    ///1游客 0非游客 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Guest {
      get { return guest_; }
      set {
        guest_ = value;
      }
    }

    /// <summary>Field number for the "reconn" field.</summary>
    public const int ReconnFieldNumber = 6;
    private int reconn_;
    /// <summary>
    ///断线重连
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Reconn {
      get { return reconn_; }
      set {
        reconn_ = value;
      }
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 11;
    private string platform_ = "";
    /// <summary>
    ///平台id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Platform {
      get { return platform_; }
      set {
        platform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Login);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Login other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (Passwd != other.Passwd) return false;
      if (Version != other.Version) return false;
      if (Headicon != other.Headicon) return false;
      if (Guest != other.Guest) return false;
      if (Reconn != other.Reconn) return false;
      if (Platform != other.Platform) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (Passwd.Length != 0) hash ^= Passwd.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (Headicon.Length != 0) hash ^= Headicon.GetHashCode();
      if (Guest != 0) hash ^= Guest.GetHashCode();
      if (Reconn != 0) hash ^= Reconn.GetHashCode();
      if (Platform.Length != 0) hash ^= Platform.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (Passwd.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Passwd);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Version);
      }
      if (Headicon.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Headicon);
      }
      if (Guest != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Guest);
      }
      if (Reconn != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Reconn);
      }
      if (Platform.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Platform);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (Passwd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Passwd);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (Headicon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Headicon);
      }
      if (Guest != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Guest);
      }
      if (Reconn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Reconn);
      }
      if (Platform.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Platform);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Login other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.Passwd.Length != 0) {
        Passwd = other.Passwd;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.Headicon.Length != 0) {
        Headicon = other.Headicon;
      }
      if (other.Guest != 0) {
        Guest = other.Guest;
      }
      if (other.Reconn != 0) {
        Reconn = other.Reconn;
      }
      if (other.Platform.Length != 0) {
        Platform = other.Platform;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            Passwd = input.ReadString();
            break;
          }
          case 26: {
            Version = input.ReadString();
            break;
          }
          case 34: {
            Headicon = input.ReadString();
            break;
          }
          case 40: {
            Guest = input.ReadInt32();
            break;
          }
          case 48: {
            Reconn = input.ReadInt32();
            break;
          }
          case 90: {
            Platform = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///主线任务
  /// </summary>
  public sealed partial class MainTask : pb::IMessage<MainTask> {
    private static readonly pb::MessageParser<MainTask> _parser = new pb::MessageParser<MainTask>(() => new MainTask());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MainTask> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainTask() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainTask(MainTask other) : this() {
      id_ = other.id_;
      progress_ = other.progress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainTask Clone() {
      return new MainTask(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 2;
    private int progress_;
    /// <summary>
    ///进度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Progress {
      get { return progress_; }
      set {
        progress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MainTask);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MainTask other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Progress != other.Progress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Progress != 0) hash ^= Progress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Progress != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Progress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Progress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Progress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MainTask other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Progress != 0) {
        Progress = other.Progress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Progress = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoleItem : pb::IMessage<RoleItem> {
    private static readonly pb::MessageParser<RoleItem> _parser = new pb::MessageParser<RoleItem>(() => new RoleItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleItem(RoleItem other) : this() {
      id_ = other.id_;
      curnum_ = other.curnum_;
      extnum_ = other.extnum_;
      countdown_ = other.countdown_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleItem Clone() {
      return new RoleItem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "curnum" field.</summary>
    public const int CurnumFieldNumber = 2;
    private int curnum_;
    /// <summary>
    ///当前数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Curnum {
      get { return curnum_; }
      set {
        curnum_ = value;
      }
    }

    /// <summary>Field number for the "extnum" field.</summary>
    public const int ExtnumFieldNumber = 3;
    private int extnum_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Extnum {
      get { return extnum_; }
      set {
        extnum_ = value;
      }
    }

    /// <summary>Field number for the "countdown" field.</summary>
    public const int CountdownFieldNumber = 4;
    private int countdown_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Countdown {
      get { return countdown_; }
      set {
        countdown_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 5;
    private int state_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoleItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoleItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Curnum != other.Curnum) return false;
      if (Extnum != other.Extnum) return false;
      if (Countdown != other.Countdown) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Curnum != 0) hash ^= Curnum.GetHashCode();
      if (Extnum != 0) hash ^= Extnum.GetHashCode();
      if (Countdown != 0) hash ^= Countdown.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Curnum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Curnum);
      }
      if (Extnum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Extnum);
      }
      if (Countdown != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Countdown);
      }
      if (State != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Curnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Curnum);
      }
      if (Extnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Extnum);
      }
      if (Countdown != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Countdown);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoleItem other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Curnum != 0) {
        Curnum = other.Curnum;
      }
      if (other.Extnum != 0) {
        Extnum = other.Extnum;
      }
      if (other.Countdown != 0) {
        Countdown = other.Countdown;
      }
      if (other.State != 0) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Curnum = input.ReadInt32();
            break;
          }
          case 24: {
            Extnum = input.ReadInt32();
            break;
          }
          case 32: {
            Countdown = input.ReadInt32();
            break;
          }
          case 40: {
            State = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///员工,角色数据
  /// </summary>
  public sealed partial class Role : pb::IMessage<Role> {
    private static readonly pb::MessageParser<Role> _parser = new pb::MessageParser<Role>(() => new Role());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Role> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Role() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Role(Role other) : this() {
      roleList_ = other.roleList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Role Clone() {
      return new Role(this);
    }

    /// <summary>Field number for the "roleList" field.</summary>
    public const int RoleListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LocalData.RoleItem> _repeated_roleList_codec
        = pb::FieldCodec.ForMessage(10, global::LocalData.RoleItem.Parser);
    private readonly pbc::RepeatedField<global::LocalData.RoleItem> roleList_ = new pbc::RepeatedField<global::LocalData.RoleItem>();
    /// <summary>
    ///全部角色信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LocalData.RoleItem> RoleList {
      get { return roleList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Role);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Role other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!roleList_.Equals(other.roleList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= roleList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      roleList_.WriteTo(output, _repeated_roleList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += roleList_.CalculateSize(_repeated_roleList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Role other) {
      if (other == null) {
        return;
      }
      roleList_.Add(other.roleList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            roleList_.AddEntriesFrom(input, _repeated_roleList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///货币
  /// </summary>
  public sealed partial class Currency : pb::IMessage<Currency> {
    private static readonly pb::MessageParser<Currency> _parser = new pb::MessageParser<Currency>(() => new Currency());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Currency> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Currency() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Currency(Currency other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Currency Clone() {
      return new Currency(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pbc::MapField<string, int>.Codec _map_list_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForInt32(16), 10);
    private readonly pbc::MapField<string, int> list_ = new pbc::MapField<string, int>();
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, int> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Currency);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Currency other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!List.Equals(other.List)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= List.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _map_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_map_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Currency other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _map_list_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///老板类角色关联任务
  /// </summary>
  public sealed partial class BossRoleTask : pb::IMessage<BossRoleTask> {
    private static readonly pb::MessageParser<BossRoleTask> _parser = new pb::MessageParser<BossRoleTask>(() => new BossRoleTask());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BossRoleTask> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BossRoleTask() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BossRoleTask(BossRoleTask other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BossRoleTask Clone() {
      return new BossRoleTask(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pbc::MapField<int, int>.Codec _map_list_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 10);
    private readonly pbc::MapField<int, int> list_ = new pbc::MapField<int, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BossRoleTask);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BossRoleTask other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!List.Equals(other.List)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= List.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _map_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_map_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BossRoleTask other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _map_list_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///老板类角色广告解锁
  /// </summary>
  public sealed partial class BossRoleAds : pb::IMessage<BossRoleAds> {
    private static readonly pb::MessageParser<BossRoleAds> _parser = new pb::MessageParser<BossRoleAds>(() => new BossRoleAds());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BossRoleAds> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BossRoleAds() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BossRoleAds(BossRoleAds other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BossRoleAds Clone() {
      return new BossRoleAds(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pbc::MapField<int, int>.Codec _map_list_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 10);
    private readonly pbc::MapField<int, int> list_ = new pbc::MapField<int, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BossRoleAds);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BossRoleAds other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!List.Equals(other.List)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= List.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _map_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_map_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BossRoleAds other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _map_list_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 每个球员信息
  /// </summary>
  public sealed partial class BallerItem : pb::IMessage<BallerItem> {
    private static readonly pb::MessageParser<BallerItem> _parser = new pb::MessageParser<BallerItem>(() => new BallerItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BallerItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BallerItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BallerItem(BallerItem other) : this() {
      level_ = other.level_;
      progress_ = other.progress_;
      equip_ = other.equip_.Clone();
      starNum_ = other.starNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BallerItem Clone() {
      return new BallerItem(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 1;
    private int level_;
    /// <summary>
    /// 等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 2;
    private int progress_;
    /// <summary>
    /// 进度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Progress {
      get { return progress_; }
      set {
        progress_ = value;
      }
    }

    /// <summary>Field number for the "equip" field.</summary>
    public const int EquipFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_equip_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> equip_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 装备
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Equip {
      get { return equip_; }
    }

    /// <summary>Field number for the "starNum" field.</summary>
    public const int StarNumFieldNumber = 4;
    private int starNum_;
    /// <summary>
    /// 卡牌数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StarNum {
      get { return starNum_; }
      set {
        starNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BallerItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BallerItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      if (Progress != other.Progress) return false;
      if(!equip_.Equals(other.equip_)) return false;
      if (StarNum != other.StarNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Progress != 0) hash ^= Progress.GetHashCode();
      hash ^= equip_.GetHashCode();
      if (StarNum != 0) hash ^= StarNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Level != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Level);
      }
      if (Progress != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Progress);
      }
      equip_.WriteTo(output, _repeated_equip_codec);
      if (StarNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(StarNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (Progress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Progress);
      }
      size += equip_.CalculateSize(_repeated_equip_codec);
      if (StarNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StarNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BallerItem other) {
      if (other == null) {
        return;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Progress != 0) {
        Progress = other.Progress;
      }
      equip_.Add(other.equip_);
      if (other.StarNum != 0) {
        StarNum = other.StarNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Level = input.ReadInt32();
            break;
          }
          case 16: {
            Progress = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            equip_.AddEntriesFrom(input, _repeated_equip_codec);
            break;
          }
          case 32: {
            StarNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 所有球员信息
  /// </summary>
  public sealed partial class Baller : pb::IMessage<Baller> {
    private static readonly pb::MessageParser<Baller> _parser = new pb::MessageParser<Baller>(() => new Baller());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Baller> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Baller() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Baller(Baller other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Baller Clone() {
      return new Baller(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pbc::MapField<int, global::LocalData.BallerItem>.Codec _map_list_codec
        = new pbc::MapField<int, global::LocalData.BallerItem>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::LocalData.BallerItem.Parser), 10);
    private readonly pbc::MapField<int, global::LocalData.BallerItem> list_ = new pbc::MapField<int, global::LocalData.BallerItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::LocalData.BallerItem> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Baller);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Baller other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!List.Equals(other.List)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= List.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _map_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_map_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Baller other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _map_list_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///单个礼包信息
  /// </summary>
  public sealed partial class GiftPackItem : pb::IMessage<GiftPackItem> {
    private static readonly pb::MessageParser<GiftPackItem> _parser = new pb::MessageParser<GiftPackItem>(() => new GiftPackItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GiftPackItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GiftPackItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GiftPackItem(GiftPackItem other) : this() {
      isActive_ = other.isActive_;
      buyNum_ = other.buyNum_;
      overTime_ = other.overTime_;
      popupTime_ = other.popupTime_;
      activeTime_ = other.activeTime_;
      adNum_ = other.adNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GiftPackItem Clone() {
      return new GiftPackItem(this);
    }

    /// <summary>Field number for the "isActive" field.</summary>
    public const int IsActiveFieldNumber = 1;
    private bool isActive_;
    /// <summary>
    ///是否激活
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsActive {
      get { return isActive_; }
      set {
        isActive_ = value;
      }
    }

    /// <summary>Field number for the "buyNum" field.</summary>
    public const int BuyNumFieldNumber = 2;
    private int buyNum_;
    /// <summary>
    ///礼包可以购买的次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuyNum {
      get { return buyNum_; }
      set {
        buyNum_ = value;
      }
    }

    /// <summary>Field number for the "overTime" field.</summary>
    public const int OverTimeFieldNumber = 3;
    private long overTime_;
    /// <summary>
    ///礼包关闭时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OverTime {
      get { return overTime_; }
      set {
        overTime_ = value;
      }
    }

    /// <summary>Field number for the "popupTime" field.</summary>
    public const int PopupTimeFieldNumber = 4;
    private long popupTime_;
    /// <summary>
    ///礼包下次弹出时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PopupTime {
      get { return popupTime_; }
      set {
        popupTime_ = value;
      }
    }

    /// <summary>Field number for the "activeTime" field.</summary>
    public const int ActiveTimeFieldNumber = 5;
    private long activeTime_;
    /// <summary>
    ///礼包下次自动激活时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ActiveTime {
      get { return activeTime_; }
      set {
        activeTime_ = value;
      }
    }

    /// <summary>Field number for the "adNum" field.</summary>
    public const int AdNumFieldNumber = 6;
    private int adNum_;
    /// <summary>
    ///广告次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AdNum {
      get { return adNum_; }
      set {
        adNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GiftPackItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GiftPackItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsActive != other.IsActive) return false;
      if (BuyNum != other.BuyNum) return false;
      if (OverTime != other.OverTime) return false;
      if (PopupTime != other.PopupTime) return false;
      if (ActiveTime != other.ActiveTime) return false;
      if (AdNum != other.AdNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsActive != false) hash ^= IsActive.GetHashCode();
      if (BuyNum != 0) hash ^= BuyNum.GetHashCode();
      if (OverTime != 0L) hash ^= OverTime.GetHashCode();
      if (PopupTime != 0L) hash ^= PopupTime.GetHashCode();
      if (ActiveTime != 0L) hash ^= ActiveTime.GetHashCode();
      if (AdNum != 0) hash ^= AdNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsActive != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsActive);
      }
      if (BuyNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BuyNum);
      }
      if (OverTime != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(OverTime);
      }
      if (PopupTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(PopupTime);
      }
      if (ActiveTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(ActiveTime);
      }
      if (AdNum != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AdNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsActive != false) {
        size += 1 + 1;
      }
      if (BuyNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuyNum);
      }
      if (OverTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OverTime);
      }
      if (PopupTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PopupTime);
      }
      if (ActiveTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ActiveTime);
      }
      if (AdNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AdNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GiftPackItem other) {
      if (other == null) {
        return;
      }
      if (other.IsActive != false) {
        IsActive = other.IsActive;
      }
      if (other.BuyNum != 0) {
        BuyNum = other.BuyNum;
      }
      if (other.OverTime != 0L) {
        OverTime = other.OverTime;
      }
      if (other.PopupTime != 0L) {
        PopupTime = other.PopupTime;
      }
      if (other.ActiveTime != 0L) {
        ActiveTime = other.ActiveTime;
      }
      if (other.AdNum != 0) {
        AdNum = other.AdNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsActive = input.ReadBool();
            break;
          }
          case 16: {
            BuyNum = input.ReadInt32();
            break;
          }
          case 24: {
            OverTime = input.ReadInt64();
            break;
          }
          case 32: {
            PopupTime = input.ReadInt64();
            break;
          }
          case 40: {
            ActiveTime = input.ReadInt64();
            break;
          }
          case 48: {
            AdNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///所有礼包信息
  /// </summary>
  public sealed partial class GiftPack : pb::IMessage<GiftPack> {
    private static readonly pb::MessageParser<GiftPack> _parser = new pb::MessageParser<GiftPack>(() => new GiftPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GiftPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GiftPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GiftPack(GiftPack other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GiftPack Clone() {
      return new GiftPack(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pbc::MapField<int, global::LocalData.GiftPackItem>.Codec _map_list_codec
        = new pbc::MapField<int, global::LocalData.GiftPackItem>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::LocalData.GiftPackItem.Parser), 10);
    private readonly pbc::MapField<int, global::LocalData.GiftPackItem> list_ = new pbc::MapField<int, global::LocalData.GiftPackItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::LocalData.GiftPackItem> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GiftPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GiftPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!List.Equals(other.List)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= List.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _map_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_map_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GiftPack other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _map_list_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///单个设备信息
  /// </summary>
  public sealed partial class FacilityItem : pb::IMessage<FacilityItem> {
    private static readonly pb::MessageParser<FacilityItem> _parser = new pb::MessageParser<FacilityItem>(() => new FacilityItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FacilityItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FacilityItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FacilityItem(FacilityItem other) : this() {
      curLevel_ = other.curLevel_;
      time_ = other.time_;
      isBreak_ = other.isBreak_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FacilityItem Clone() {
      return new FacilityItem(this);
    }

    /// <summary>Field number for the "curLevel" field.</summary>
    public const int CurLevelFieldNumber = 1;
    private int curLevel_;
    /// <summary>
    ///设备当前等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurLevel {
      get { return curLevel_; }
      set {
        curLevel_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 2;
    private int time_;
    /// <summary>
    ///设备升级完成时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "isBreak" field.</summary>
    public const int IsBreakFieldNumber = 3;
    private bool isBreak_;
    /// <summary>
    ///设备是否损坏
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBreak {
      get { return isBreak_; }
      set {
        isBreak_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FacilityItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FacilityItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurLevel != other.CurLevel) return false;
      if (Time != other.Time) return false;
      if (IsBreak != other.IsBreak) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurLevel != 0) hash ^= CurLevel.GetHashCode();
      if (Time != 0) hash ^= Time.GetHashCode();
      if (IsBreak != false) hash ^= IsBreak.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CurLevel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurLevel);
      }
      if (Time != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Time);
      }
      if (IsBreak != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsBreak);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurLevel);
      }
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (IsBreak != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FacilityItem other) {
      if (other == null) {
        return;
      }
      if (other.CurLevel != 0) {
        CurLevel = other.CurLevel;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      if (other.IsBreak != false) {
        IsBreak = other.IsBreak;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurLevel = input.ReadInt32();
            break;
          }
          case 16: {
            Time = input.ReadInt32();
            break;
          }
          case 24: {
            IsBreak = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///所有房间设备
  /// </summary>
  public sealed partial class Room : pb::IMessage<Room> {
    private static readonly pb::MessageParser<Room> _parser = new pb::MessageParser<Room>(() => new Room());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Room> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Room() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Room(Room other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Room Clone() {
      return new Room(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pbc::MapField<int, global::LocalData.FacilityItem>.Codec _map_list_codec
        = new pbc::MapField<int, global::LocalData.FacilityItem>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::LocalData.FacilityItem.Parser), 10);
    private readonly pbc::MapField<int, global::LocalData.FacilityItem> list_ = new pbc::MapField<int, global::LocalData.FacilityItem>();
    /// <summary>
    ///全部设备信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::LocalData.FacilityItem> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Room);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Room other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!List.Equals(other.List)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= List.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _map_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_map_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Room other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _map_list_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///单个每日任务信息
  /// </summary>
  public sealed partial class DailyTask : pb::IMessage<DailyTask> {
    private static readonly pb::MessageParser<DailyTask> _parser = new pb::MessageParser<DailyTask>(() => new DailyTask());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DailyTask> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyTask() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyTask(DailyTask other) : this() {
      id_ = other.id_;
      curNum_ = other.curNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyTask Clone() {
      return new DailyTask(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///任务ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "curNum" field.</summary>
    public const int CurNumFieldNumber = 2;
    private int curNum_;
    /// <summary>
    ///当前任务进度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurNum {
      get { return curNum_; }
      set {
        curNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DailyTask);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DailyTask other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (CurNum != other.CurNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (CurNum != 0) hash ^= CurNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (CurNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (CurNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DailyTask other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.CurNum != 0) {
        CurNum = other.CurNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            CurNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///所有每日任务
  /// </summary>
  public sealed partial class AllDailyTask : pb::IMessage<AllDailyTask> {
    private static readonly pb::MessageParser<AllDailyTask> _parser = new pb::MessageParser<AllDailyTask>(() => new AllDailyTask());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AllDailyTask> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllDailyTask() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllDailyTask(AllDailyTask other) : this() {
      isGet_ = other.isGet_.Clone();
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllDailyTask Clone() {
      return new AllDailyTask(this);
    }

    /// <summary>Field number for the "isGet" field.</summary>
    public const int IsGetFieldNumber = 1;
    private static readonly pb::FieldCodec<bool> _repeated_isGet_codec
        = pb::FieldCodec.ForBool(10);
    private readonly pbc::RepeatedField<bool> isGet_ = new pbc::RepeatedField<bool>();
    /// <summary>
    ///任务奖励是否领取
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool> IsGet {
      get { return isGet_; }
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 2;
    private static readonly pbc::MapField<int, global::LocalData.DailyTask>.Codec _map_list_codec
        = new pbc::MapField<int, global::LocalData.DailyTask>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::LocalData.DailyTask.Parser), 18);
    private readonly pbc::MapField<int, global::LocalData.DailyTask> list_ = new pbc::MapField<int, global::LocalData.DailyTask>();
    /// <summary>
    ///所有每日任务信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::LocalData.DailyTask> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AllDailyTask);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AllDailyTask other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!isGet_.Equals(other.isGet_)) return false;
      if (!List.Equals(other.List)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= isGet_.GetHashCode();
      hash ^= List.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      isGet_.WriteTo(output, _repeated_isGet_codec);
      list_.WriteTo(output, _map_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += isGet_.CalculateSize(_repeated_isGet_codec);
      size += list_.CalculateSize(_map_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AllDailyTask other) {
      if (other == null) {
        return;
      }
      isGet_.Add(other.isGet_);
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            isGet_.AddEntriesFrom(input, _repeated_isGet_codec);
            break;
          }
          case 18: {
            list_.AddEntriesFrom(input, _map_list_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///已招揽过的游客
  /// </summary>
  public sealed partial class RecruitTourist : pb::IMessage<RecruitTourist> {
    private static readonly pb::MessageParser<RecruitTourist> _parser = new pb::MessageParser<RecruitTourist>(() => new RecruitTourist());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecruitTourist> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecruitTourist() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecruitTourist(RecruitTourist other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecruitTourist Clone() {
      return new RecruitTourist(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_list_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> list_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 装备
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecruitTourist);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecruitTourist other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!list_.Equals(other.list_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= list_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _repeated_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_repeated_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecruitTourist other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///双倍收益时间信息
  /// </summary>
  public sealed partial class DoubleTime : pb::IMessage<DoubleTime> {
    private static readonly pb::MessageParser<DoubleTime> _parser = new pb::MessageParser<DoubleTime>(() => new DoubleTime());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DoubleTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoubleTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoubleTime(DoubleTime other) : this() {
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoubleTime Clone() {
      return new DoubleTime(this);
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 1;
    private int time_;
    /// <summary>
    ///双倍收益时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DoubleTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DoubleTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Time != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Time != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DoubleTime other) {
      if (other == null) {
        return;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Time = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///区域信息
  /// </summary>
  public sealed partial class AreaInfo : pb::IMessage<AreaInfo> {
    private static readonly pb::MessageParser<AreaInfo> _parser = new pb::MessageParser<AreaInfo>(() => new AreaInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AreaInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaInfo(AreaInfo other) : this() {
      level_ = other.level_;
      upgradeTime_ = other.upgradeTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaInfo Clone() {
      return new AreaInfo(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 1;
    private int level_;
    /// <summary>
    ///区域等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "upgrade_time" field.</summary>
    public const int UpgradeTimeFieldNumber = 2;
    private int upgradeTime_;
    /// <summary>
    ///开始升级的时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UpgradeTime {
      get { return upgradeTime_; }
      set {
        upgradeTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AreaInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AreaInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      if (UpgradeTime != other.UpgradeTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Level != 0) hash ^= Level.GetHashCode();
      if (UpgradeTime != 0) hash ^= UpgradeTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Level != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Level);
      }
      if (UpgradeTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UpgradeTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (UpgradeTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UpgradeTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AreaInfo other) {
      if (other == null) {
        return;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.UpgradeTime != 0) {
        UpgradeTime = other.UpgradeTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Level = input.ReadInt32();
            break;
          }
          case 16: {
            UpgradeTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///所有区域信息
  /// </summary>
  public sealed partial class AllAreaInfo : pb::IMessage<AllAreaInfo> {
    private static readonly pb::MessageParser<AllAreaInfo> _parser = new pb::MessageParser<AllAreaInfo>(() => new AllAreaInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AllAreaInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllAreaInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllAreaInfo(AllAreaInfo other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllAreaInfo Clone() {
      return new AllAreaInfo(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pbc::MapField<int, global::LocalData.AreaInfo>.Codec _map_list_codec
        = new pbc::MapField<int, global::LocalData.AreaInfo>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::LocalData.AreaInfo.Parser), 10);
    private readonly pbc::MapField<int, global::LocalData.AreaInfo> list_ = new pbc::MapField<int, global::LocalData.AreaInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::LocalData.AreaInfo> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AllAreaInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AllAreaInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!List.Equals(other.List)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= List.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _map_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_map_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AllAreaInfo other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _map_list_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///房间信息
  /// </summary>
  public sealed partial class RoomInfo : pb::IMessage<RoomInfo> {
    private static readonly pb::MessageParser<RoomInfo> _parser = new pb::MessageParser<RoomInfo>(() => new RoomInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo(RoomInfo other) : this() {
      level_ = other.level_;
      upgradeTime_ = other.upgradeTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo Clone() {
      return new RoomInfo(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 1;
    private int level_;
    /// <summary>
    ///房间等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "upgrade_time" field.</summary>
    public const int UpgradeTimeFieldNumber = 2;
    private int upgradeTime_;
    /// <summary>
    ///开始升级的时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UpgradeTime {
      get { return upgradeTime_; }
      set {
        upgradeTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      if (UpgradeTime != other.UpgradeTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Level != 0) hash ^= Level.GetHashCode();
      if (UpgradeTime != 0) hash ^= UpgradeTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Level != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Level);
      }
      if (UpgradeTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UpgradeTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (UpgradeTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UpgradeTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomInfo other) {
      if (other == null) {
        return;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.UpgradeTime != 0) {
        UpgradeTime = other.UpgradeTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Level = input.ReadInt32();
            break;
          }
          case 16: {
            UpgradeTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///所有房间信息
  /// </summary>
  public sealed partial class AllRoomInfo : pb::IMessage<AllRoomInfo> {
    private static readonly pb::MessageParser<AllRoomInfo> _parser = new pb::MessageParser<AllRoomInfo>(() => new AllRoomInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AllRoomInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllRoomInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllRoomInfo(AllRoomInfo other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllRoomInfo Clone() {
      return new AllRoomInfo(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pbc::MapField<int, global::LocalData.AreaInfo>.Codec _map_list_codec
        = new pbc::MapField<int, global::LocalData.AreaInfo>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::LocalData.AreaInfo.Parser), 10);
    private readonly pbc::MapField<int, global::LocalData.AreaInfo> list_ = new pbc::MapField<int, global::LocalData.AreaInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::LocalData.AreaInfo> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AllRoomInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AllRoomInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!List.Equals(other.List)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= List.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _map_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_map_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AllRoomInfo other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _map_list_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///所有建造工完成时间
  /// </summary>
  public sealed partial class BuilderFinishTime : pb::IMessage<BuilderFinishTime> {
    private static readonly pb::MessageParser<BuilderFinishTime> _parser = new pb::MessageParser<BuilderFinishTime>(() => new BuilderFinishTime());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuilderFinishTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuilderFinishTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuilderFinishTime(BuilderFinishTime other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuilderFinishTime Clone() {
      return new BuilderFinishTime(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_list_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> list_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuilderFinishTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuilderFinishTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!list_.Equals(other.list_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= list_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _repeated_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_repeated_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuilderFinishTime other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///挂机奖励时间
  /// </summary>
  public sealed partial class YieldTime : pb::IMessage<YieldTime> {
    private static readonly pb::MessageParser<YieldTime> _parser = new pb::MessageParser<YieldTime>(() => new YieldTime());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<YieldTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YieldTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YieldTime(YieldTime other) : this() {
      updateTime_ = other.updateTime_;
      curTime_ = other.curTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YieldTime Clone() {
      return new YieldTime(this);
    }

    /// <summary>Field number for the "updateTime" field.</summary>
    public const int UpdateTimeFieldNumber = 1;
    private int updateTime_;
    /// <summary>
    ///上一次更新时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "curTime" field.</summary>
    public const int CurTimeFieldNumber = 2;
    private int curTime_;
    /// <summary>
    ///当前挂机时间（分）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurTime {
      get { return curTime_; }
      set {
        curTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as YieldTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(YieldTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UpdateTime != other.UpdateTime) return false;
      if (CurTime != other.CurTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UpdateTime != 0) hash ^= UpdateTime.GetHashCode();
      if (CurTime != 0) hash ^= CurTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UpdateTime != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UpdateTime);
      }
      if (CurTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UpdateTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UpdateTime);
      }
      if (CurTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(YieldTime other) {
      if (other == null) {
        return;
      }
      if (other.UpdateTime != 0) {
        UpdateTime = other.UpdateTime;
      }
      if (other.CurTime != 0) {
        CurTime = other.CurTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UpdateTime = input.ReadInt32();
            break;
          }
          case 16: {
            CurTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///单个挂机信息
  /// </summary>
  public sealed partial class YieldSingleInfo : pb::IMessage<YieldSingleInfo> {
    private static readonly pb::MessageParser<YieldSingleInfo> _parser = new pb::MessageParser<YieldSingleInfo>(() => new YieldSingleInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<YieldSingleInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YieldSingleInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YieldSingleInfo(YieldSingleInfo other) : this() {
      id_ = other.id_;
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YieldSingleInfo Clone() {
      return new YieldSingleInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///货币ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 2;
    private int num_;
    /// <summary>
    ///挂机数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as YieldSingleInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(YieldSingleInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Num != other.Num) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Num != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(YieldSingleInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///挂机信息
  /// </summary>
  public sealed partial class YieldInfo : pb::IMessage<YieldInfo> {
    private static readonly pb::MessageParser<YieldInfo> _parser = new pb::MessageParser<YieldInfo>(() => new YieldInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<YieldInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YieldInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YieldInfo(YieldInfo other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YieldInfo Clone() {
      return new YieldInfo(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LocalData.YieldSingleInfo> _repeated_list_codec
        = pb::FieldCodec.ForMessage(10, global::LocalData.YieldSingleInfo.Parser);
    private readonly pbc::RepeatedField<global::LocalData.YieldSingleInfo> list_ = new pbc::RepeatedField<global::LocalData.YieldSingleInfo>();
    /// <summary>
    ///所有挂机信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LocalData.YieldSingleInfo> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as YieldInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(YieldInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!list_.Equals(other.list_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= list_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _repeated_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_repeated_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(YieldInfo other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TimeBeAttacked : pb::IMessage<TimeBeAttacked> {
    private static readonly pb::MessageParser<TimeBeAttacked> _parser = new pb::MessageParser<TimeBeAttacked>(() => new TimeBeAttacked());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimeBeAttacked> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeBeAttacked() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeBeAttacked(TimeBeAttacked other) : this() {
      timeBeAttacked_ = other.timeBeAttacked_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeBeAttacked Clone() {
      return new TimeBeAttacked(this);
    }

    /// <summary>Field number for the "timeBeAttacked" field.</summary>
    public const int TimeBeAttacked_FieldNumber = 1;
    private int timeBeAttacked_;
    /// <summary>
    ///上次被挑战时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TimeBeAttacked_ {
      get { return timeBeAttacked_; }
      set {
        timeBeAttacked_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimeBeAttacked);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimeBeAttacked other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimeBeAttacked_ != other.TimeBeAttacked_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TimeBeAttacked_ != 0) hash ^= TimeBeAttacked_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TimeBeAttacked_ != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TimeBeAttacked_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TimeBeAttacked_ != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeBeAttacked_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimeBeAttacked other) {
      if (other == null) {
        return;
      }
      if (other.TimeBeAttacked_ != 0) {
        TimeBeAttacked_ = other.TimeBeAttacked_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TimeBeAttacked_ = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TouristInfo : pb::IMessage<TouristInfo> {
    private static readonly pb::MessageParser<TouristInfo> _parser = new pb::MessageParser<TouristInfo>(() => new TouristInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TouristInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TouristInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TouristInfo(TouristInfo other) : this() {
      touristID_ = other.touristID_;
      isUnconfirmed_ = other.isUnconfirmed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TouristInfo Clone() {
      return new TouristInfo(this);
    }

    /// <summary>Field number for the "touristID" field.</summary>
    public const int TouristIDFieldNumber = 1;
    private int touristID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TouristID {
      get { return touristID_; }
      set {
        touristID_ = value;
      }
    }

    /// <summary>Field number for the "isUnconfirmed" field.</summary>
    public const int IsUnconfirmedFieldNumber = 2;
    private int isUnconfirmed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IsUnconfirmed {
      get { return isUnconfirmed_; }
      set {
        isUnconfirmed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TouristInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TouristInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TouristID != other.TouristID) return false;
      if (IsUnconfirmed != other.IsUnconfirmed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TouristID != 0) hash ^= TouristID.GetHashCode();
      if (IsUnconfirmed != 0) hash ^= IsUnconfirmed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TouristID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TouristID);
      }
      if (IsUnconfirmed != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(IsUnconfirmed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TouristID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TouristID);
      }
      if (IsUnconfirmed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsUnconfirmed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TouristInfo other) {
      if (other == null) {
        return;
      }
      if (other.TouristID != 0) {
        TouristID = other.TouristID;
      }
      if (other.IsUnconfirmed != 0) {
        IsUnconfirmed = other.IsUnconfirmed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TouristID = input.ReadInt32();
            break;
          }
          case 16: {
            IsUnconfirmed = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnconfirmedTourist : pb::IMessage<UnconfirmedTourist> {
    private static readonly pb::MessageParser<UnconfirmedTourist> _parser = new pb::MessageParser<UnconfirmedTourist>(() => new UnconfirmedTourist());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnconfirmedTourist> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnconfirmedTourist() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnconfirmedTourist(UnconfirmedTourist other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnconfirmedTourist Clone() {
      return new UnconfirmedTourist(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LocalData.TouristInfo> _repeated_list_codec
        = pb::FieldCodec.ForMessage(10, global::LocalData.TouristInfo.Parser);
    private readonly pbc::RepeatedField<global::LocalData.TouristInfo> list_ = new pbc::RepeatedField<global::LocalData.TouristInfo>();
    /// <summary>
    ///未点击的游客图鉴
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LocalData.TouristInfo> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnconfirmedTourist);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnconfirmedTourist other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!list_.Equals(other.list_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= list_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _repeated_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_repeated_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnconfirmedTourist other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///设置信息
  /// </summary>
  public sealed partial class SettingInfo : pb::IMessage<SettingInfo> {
    private static readonly pb::MessageParser<SettingInfo> _parser = new pb::MessageParser<SettingInfo>(() => new SettingInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SettingInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SettingInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SettingInfo(SettingInfo other) : this() {
      language_ = other.language_;
      isShowBubble_ = other.isShowBubble_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SettingInfo Clone() {
      return new SettingInfo(this);
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 1;
    private string language_ = "";
    /// <summary>
    ///语言
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Language {
      get { return language_; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isShowBubble" field.</summary>
    public const int IsShowBubbleFieldNumber = 2;
    private bool isShowBubble_;
    /// <summary>
    ///是否显示气泡
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsShowBubble {
      get { return isShowBubble_; }
      set {
        isShowBubble_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SettingInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SettingInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Language != other.Language) return false;
      if (IsShowBubble != other.IsShowBubble) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Language.Length != 0) hash ^= Language.GetHashCode();
      if (IsShowBubble != false) hash ^= IsShowBubble.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Language.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Language);
      }
      if (IsShowBubble != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsShowBubble);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Language.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (IsShowBubble != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SettingInfo other) {
      if (other == null) {
        return;
      }
      if (other.Language.Length != 0) {
        Language = other.Language;
      }
      if (other.IsShowBubble != false) {
        IsShowBubble = other.IsShowBubble;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Language = input.ReadString();
            break;
          }
          case 16: {
            IsShowBubble = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///单个房间挂机收益信息
  /// </summary>
  public sealed partial class SingleHookInfo : pb::IMessage<SingleHookInfo> {
    private static readonly pb::MessageParser<SingleHookInfo> _parser = new pb::MessageParser<SingleHookInfo>(() => new SingleHookInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleHookInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleHookInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleHookInfo(SingleHookInfo other) : this() {
      roomID_ = other.roomID_;
      time_ = other.time_;
      isHook_ = other.isHook_;
      yield_ = other.yield_;
      adNum_ = other.adNum_;
      baller_ = other.baller_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleHookInfo Clone() {
      return new SingleHookInfo(this);
    }

    /// <summary>Field number for the "roomID" field.</summary>
    public const int RoomIDFieldNumber = 1;
    private int roomID_;
    /// <summary>
    ///房间ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomID {
      get { return roomID_; }
      set {
        roomID_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 2;
    private int time_;
    /// <summary>
    ///挂机至时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "isHook" field.</summary>
    public const int IsHookFieldNumber = 3;
    private bool isHook_;
    /// <summary>
    ///是否在挂机
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsHook {
      get { return isHook_; }
      set {
        isHook_ = value;
      }
    }

    /// <summary>Field number for the "yield" field.</summary>
    public const int YieldFieldNumber = 4;
    private int yield_;
    /// <summary>
    ///挂机收益
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Yield {
      get { return yield_; }
      set {
        yield_ = value;
      }
    }

    /// <summary>Field number for the "adNum" field.</summary>
    public const int AdNumFieldNumber = 5;
    private int adNum_;
    /// <summary>
    ///广告次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AdNum {
      get { return adNum_; }
      set {
        adNum_ = value;
      }
    }

    /// <summary>Field number for the "baller" field.</summary>
    public const int BallerFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_baller_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> baller_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///挂机球员ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Baller {
      get { return baller_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleHookInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleHookInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomID != other.RoomID) return false;
      if (Time != other.Time) return false;
      if (IsHook != other.IsHook) return false;
      if (Yield != other.Yield) return false;
      if (AdNum != other.AdNum) return false;
      if(!baller_.Equals(other.baller_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomID != 0) hash ^= RoomID.GetHashCode();
      if (Time != 0) hash ^= Time.GetHashCode();
      if (IsHook != false) hash ^= IsHook.GetHashCode();
      if (Yield != 0) hash ^= Yield.GetHashCode();
      if (AdNum != 0) hash ^= AdNum.GetHashCode();
      hash ^= baller_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomID);
      }
      if (Time != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Time);
      }
      if (IsHook != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsHook);
      }
      if (Yield != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Yield);
      }
      if (AdNum != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AdNum);
      }
      baller_.WriteTo(output, _repeated_baller_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomID);
      }
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (IsHook != false) {
        size += 1 + 1;
      }
      if (Yield != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Yield);
      }
      if (AdNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AdNum);
      }
      size += baller_.CalculateSize(_repeated_baller_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleHookInfo other) {
      if (other == null) {
        return;
      }
      if (other.RoomID != 0) {
        RoomID = other.RoomID;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      if (other.IsHook != false) {
        IsHook = other.IsHook;
      }
      if (other.Yield != 0) {
        Yield = other.Yield;
      }
      if (other.AdNum != 0) {
        AdNum = other.AdNum;
      }
      baller_.Add(other.baller_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomID = input.ReadInt32();
            break;
          }
          case 16: {
            Time = input.ReadInt32();
            break;
          }
          case 24: {
            IsHook = input.ReadBool();
            break;
          }
          case 32: {
            Yield = input.ReadInt32();
            break;
          }
          case 40: {
            AdNum = input.ReadInt32();
            break;
          }
          case 50:
          case 48: {
            baller_.AddEntriesFrom(input, _repeated_baller_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///所有房间挂机收益信息
  /// </summary>
  public sealed partial class AllHookInfo : pb::IMessage<AllHookInfo> {
    private static readonly pb::MessageParser<AllHookInfo> _parser = new pb::MessageParser<AllHookInfo>(() => new AllHookInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AllHookInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllHookInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllHookInfo(AllHookInfo other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllHookInfo Clone() {
      return new AllHookInfo(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pbc::MapField<int, global::LocalData.SingleHookInfo>.Codec _map_list_codec
        = new pbc::MapField<int, global::LocalData.SingleHookInfo>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::LocalData.SingleHookInfo.Parser), 10);
    private readonly pbc::MapField<int, global::LocalData.SingleHookInfo> list_ = new pbc::MapField<int, global::LocalData.SingleHookInfo>();
    /// <summary>
    ///所有房间挂机收益信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::LocalData.SingleHookInfo> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AllHookInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AllHookInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!List.Equals(other.List)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= List.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _map_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_map_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AllHookInfo other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _map_list_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///单张制作图纸信息
  /// </summary>
  public sealed partial class SingleProductInfo : pb::IMessage<SingleProductInfo> {
    private static readonly pb::MessageParser<SingleProductInfo> _parser = new pb::MessageParser<SingleProductInfo>(() => new SingleProductInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleProductInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleProductInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleProductInfo(SingleProductInfo other) : this() {
      id_ = other.id_;
      milestone_ = other.milestone_;
      star_ = other.star_;
      isCollect_ = other.isCollect_;
      productTime_ = other.productTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleProductInfo Clone() {
      return new SingleProductInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///图纸ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "milestone" field.</summary>
    public const int MilestoneFieldNumber = 2;
    private int milestone_;
    /// <summary>
    ///制作里程碑数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Milestone {
      get { return milestone_; }
      set {
        milestone_ = value;
      }
    }

    /// <summary>Field number for the "star" field.</summary>
    public const int StarFieldNumber = 3;
    private int star_;
    /// <summary>
    ///星级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Star {
      get { return star_; }
      set {
        star_ = value;
      }
    }

    /// <summary>Field number for the "isCollect" field.</summary>
    public const int IsCollectFieldNumber = 4;
    private bool isCollect_;
    /// <summary>
    ///图纸是否收藏
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCollect {
      get { return isCollect_; }
      set {
        isCollect_ = value;
      }
    }

    /// <summary>Field number for the "productTime" field.</summary>
    public const int ProductTimeFieldNumber = 5;
    private int productTime_;
    /// <summary>
    ///上一次制作时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProductTime {
      get { return productTime_; }
      set {
        productTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleProductInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleProductInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Milestone != other.Milestone) return false;
      if (Star != other.Star) return false;
      if (IsCollect != other.IsCollect) return false;
      if (ProductTime != other.ProductTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Milestone != 0) hash ^= Milestone.GetHashCode();
      if (Star != 0) hash ^= Star.GetHashCode();
      if (IsCollect != false) hash ^= IsCollect.GetHashCode();
      if (ProductTime != 0) hash ^= ProductTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Milestone != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Milestone);
      }
      if (Star != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Star);
      }
      if (IsCollect != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsCollect);
      }
      if (ProductTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ProductTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Milestone != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Milestone);
      }
      if (Star != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Star);
      }
      if (IsCollect != false) {
        size += 1 + 1;
      }
      if (ProductTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProductTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleProductInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Milestone != 0) {
        Milestone = other.Milestone;
      }
      if (other.Star != 0) {
        Star = other.Star;
      }
      if (other.IsCollect != false) {
        IsCollect = other.IsCollect;
      }
      if (other.ProductTime != 0) {
        ProductTime = other.ProductTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Milestone = input.ReadInt32();
            break;
          }
          case 24: {
            Star = input.ReadInt32();
            break;
          }
          case 32: {
            IsCollect = input.ReadBool();
            break;
          }
          case 40: {
            ProductTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///所有制作图纸信息
  /// </summary>
  public sealed partial class AllProductInfo : pb::IMessage<AllProductInfo> {
    private static readonly pb::MessageParser<AllProductInfo> _parser = new pb::MessageParser<AllProductInfo>(() => new AllProductInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AllProductInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllProductInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllProductInfo(AllProductInfo other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllProductInfo Clone() {
      return new AllProductInfo(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pbc::MapField<int, global::LocalData.SingleProductInfo>.Codec _map_list_codec
        = new pbc::MapField<int, global::LocalData.SingleProductInfo>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::LocalData.SingleProductInfo.Parser), 10);
    private readonly pbc::MapField<int, global::LocalData.SingleProductInfo> list_ = new pbc::MapField<int, global::LocalData.SingleProductInfo>();
    /// <summary>
    ///所有图纸信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::LocalData.SingleProductInfo> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AllProductInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AllProductInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!List.Equals(other.List)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= List.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _map_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_map_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AllProductInfo other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _map_list_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///单件装备信息
  /// </summary>
  public sealed partial class SingleEquipInfo : pb::IMessage<SingleEquipInfo> {
    private static readonly pb::MessageParser<SingleEquipInfo> _parser = new pb::MessageParser<SingleEquipInfo>(() => new SingleEquipInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleEquipInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleEquipInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleEquipInfo(SingleEquipInfo other) : this() {
      id_ = other.id_;
      configID_ = other.configID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleEquipInfo Clone() {
      return new SingleEquipInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///装备唯一ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "configID" field.</summary>
    public const int ConfigIDFieldNumber = 2;
    private int configID_;
    /// <summary>
    ///装备配置ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ConfigID {
      get { return configID_; }
      set {
        configID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleEquipInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleEquipInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ConfigID != other.ConfigID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ConfigID != 0) hash ^= ConfigID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ConfigID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ConfigID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ConfigID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConfigID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleEquipInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ConfigID != 0) {
        ConfigID = other.ConfigID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            ConfigID = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///自己所有装备的信息
  /// </summary>
  public sealed partial class OwnEquipInfo : pb::IMessage<OwnEquipInfo> {
    private static readonly pb::MessageParser<OwnEquipInfo> _parser = new pb::MessageParser<OwnEquipInfo>(() => new OwnEquipInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OwnEquipInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OwnEquipInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OwnEquipInfo(OwnEquipInfo other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OwnEquipInfo Clone() {
      return new OwnEquipInfo(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pbc::MapField<int, global::LocalData.SingleEquipInfo>.Codec _map_list_codec
        = new pbc::MapField<int, global::LocalData.SingleEquipInfo>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::LocalData.SingleEquipInfo.Parser), 10);
    private readonly pbc::MapField<int, global::LocalData.SingleEquipInfo> list_ = new pbc::MapField<int, global::LocalData.SingleEquipInfo>();
    /// <summary>
    ///所有装备信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::LocalData.SingleEquipInfo> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OwnEquipInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OwnEquipInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!List.Equals(other.List)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= List.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _map_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_map_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OwnEquipInfo other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _map_list_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///装备是否被锁定
  /// </summary>
  public sealed partial class EquipIsLock : pb::IMessage<EquipIsLock> {
    private static readonly pb::MessageParser<EquipIsLock> _parser = new pb::MessageParser<EquipIsLock>(() => new EquipIsLock());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EquipIsLock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipIsLock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipIsLock(EquipIsLock other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipIsLock Clone() {
      return new EquipIsLock(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pbc::MapField<int, bool>.Codec _map_list_codec
        = new pbc::MapField<int, bool>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForBool(16), 10);
    private readonly pbc::MapField<int, bool> list_ = new pbc::MapField<int, bool>();
    /// <summary>
    ///是否被锁定
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, bool> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EquipIsLock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EquipIsLock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!List.Equals(other.List)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= List.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _map_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_map_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EquipIsLock other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _map_list_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///当前装备唯一ID
  /// </summary>
  public sealed partial class EquipIDNum : pb::IMessage<EquipIDNum> {
    private static readonly pb::MessageParser<EquipIDNum> _parser = new pb::MessageParser<EquipIDNum>(() => new EquipIDNum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EquipIDNum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipIDNum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipIDNum(EquipIDNum other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipIDNum Clone() {
      return new EquipIDNum(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EquipIDNum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EquipIDNum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EquipIDNum other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///单个制作中的装备
  /// </summary>
  public sealed partial class SingleEquipProduct : pb::IMessage<SingleEquipProduct> {
    private static readonly pb::MessageParser<SingleEquipProduct> _parser = new pb::MessageParser<SingleEquipProduct>(() => new SingleEquipProduct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleEquipProduct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleEquipProduct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleEquipProduct(SingleEquipProduct other) : this() {
      configID_ = other.configID_;
      time_ = other.time_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleEquipProduct Clone() {
      return new SingleEquipProduct(this);
    }

    /// <summary>Field number for the "configID" field.</summary>
    public const int ConfigIDFieldNumber = 1;
    private int configID_;
    /// <summary>
    ///装备配置ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ConfigID {
      get { return configID_; }
      set {
        configID_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 2;
    private int time_;
    /// <summary>
    ///制作完成时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private int type_;
    /// <summary>
    ///制作类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleEquipProduct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleEquipProduct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConfigID != other.ConfigID) return false;
      if (Time != other.Time) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConfigID != 0) hash ^= ConfigID.GetHashCode();
      if (Time != 0) hash ^= Time.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConfigID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ConfigID);
      }
      if (Time != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Time);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConfigID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConfigID);
      }
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleEquipProduct other) {
      if (other == null) {
        return;
      }
      if (other.ConfigID != 0) {
        ConfigID = other.ConfigID;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConfigID = input.ReadInt32();
            break;
          }
          case 16: {
            Time = input.ReadInt32();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///所有制作中装备信息
  /// </summary>
  public sealed partial class AllEquipProduct : pb::IMessage<AllEquipProduct> {
    private static readonly pb::MessageParser<AllEquipProduct> _parser = new pb::MessageParser<AllEquipProduct>(() => new AllEquipProduct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AllEquipProduct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllEquipProduct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllEquipProduct(AllEquipProduct other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllEquipProduct Clone() {
      return new AllEquipProduct(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pbc::MapField<int, global::LocalData.SingleEquipProduct>.Codec _map_list_codec
        = new pbc::MapField<int, global::LocalData.SingleEquipProduct>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::LocalData.SingleEquipProduct.Parser), 10);
    private readonly pbc::MapField<int, global::LocalData.SingleEquipProduct> list_ = new pbc::MapField<int, global::LocalData.SingleEquipProduct>();
    /// <summary>
    ///所有制作中装备信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::LocalData.SingleEquipProduct> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AllEquipProduct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AllEquipProduct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!List.Equals(other.List)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= List.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _map_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_map_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AllEquipProduct other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _map_list_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///制作信息
  /// </summary>
  public sealed partial class ProductInfo : pb::IMessage<ProductInfo> {
    private static readonly pb::MessageParser<ProductInfo> _parser = new pb::MessageParser<ProductInfo>(() => new ProductInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProductInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductInfo(ProductInfo other) : this() {
      canProductNum_ = other.canProductNum_;
      productIDNum_ = other.productIDNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductInfo Clone() {
      return new ProductInfo(this);
    }

    /// <summary>Field number for the "canProductNum" field.</summary>
    public const int CanProductNumFieldNumber = 1;
    private int canProductNum_;
    /// <summary>
    ///能够同时制作的最大数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CanProductNum {
      get { return canProductNum_; }
      set {
        canProductNum_ = value;
      }
    }

    /// <summary>Field number for the "productIDNum" field.</summary>
    public const int ProductIDNumFieldNumber = 2;
    private int productIDNum_;
    /// <summary>
    ///当前制作唯一ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProductIDNum {
      get { return productIDNum_; }
      set {
        productIDNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProductInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProductInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CanProductNum != other.CanProductNum) return false;
      if (ProductIDNum != other.ProductIDNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CanProductNum != 0) hash ^= CanProductNum.GetHashCode();
      if (ProductIDNum != 0) hash ^= ProductIDNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CanProductNum != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CanProductNum);
      }
      if (ProductIDNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ProductIDNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CanProductNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CanProductNum);
      }
      if (ProductIDNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProductIDNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProductInfo other) {
      if (other == null) {
        return;
      }
      if (other.CanProductNum != 0) {
        CanProductNum = other.CanProductNum;
      }
      if (other.ProductIDNum != 0) {
        ProductIDNum = other.ProductIDNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CanProductNum = input.ReadInt32();
            break;
          }
          case 16: {
            ProductIDNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///材料增加时间
  /// </summary>
  public sealed partial class ResTime : pb::IMessage<ResTime> {
    private static readonly pb::MessageParser<ResTime> _parser = new pb::MessageParser<ResTime>(() => new ResTime());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResTime(ResTime other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResTime Clone() {
      return new ResTime(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pbc::MapField<string, int>.Codec _map_list_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForInt32(16), 10);
    private readonly pbc::MapField<string, int> list_ = new pbc::MapField<string, int>();
    /// <summary>
    ///制作材料增加的时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, int> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!List.Equals(other.List)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= List.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _map_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_map_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResTime other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _map_list_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///通行证任务信息
  /// </summary>
  public sealed partial class PassTaskState : pb::IMessage<PassTaskState> {
    private static readonly pb::MessageParser<PassTaskState> _parser = new pb::MessageParser<PassTaskState>(() => new PassTaskState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PassTaskState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PassTaskState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PassTaskState(PassTaskState other) : this() {
      id_ = other.id_;
      curProgress_ = other.curProgress_;
      targetProgress_ = other.targetProgress_;
      isGet_ = other.isGet_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PassTaskState Clone() {
      return new PassTaskState(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///任务id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "curProgress" field.</summary>
    public const int CurProgressFieldNumber = 2;
    private int curProgress_;
    /// <summary>
    ///任务进度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurProgress {
      get { return curProgress_; }
      set {
        curProgress_ = value;
      }
    }

    /// <summary>Field number for the "targetProgress" field.</summary>
    public const int TargetProgressFieldNumber = 3;
    private int targetProgress_;
    /// <summary>
    ///任务目标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetProgress {
      get { return targetProgress_; }
      set {
        targetProgress_ = value;
      }
    }

    /// <summary>Field number for the "isGet" field.</summary>
    public const int IsGetFieldNumber = 4;
    private int isGet_;
    /// <summary>
    ///奖励是否领取
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IsGet {
      get { return isGet_; }
      set {
        isGet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PassTaskState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PassTaskState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (CurProgress != other.CurProgress) return false;
      if (TargetProgress != other.TargetProgress) return false;
      if (IsGet != other.IsGet) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (CurProgress != 0) hash ^= CurProgress.GetHashCode();
      if (TargetProgress != 0) hash ^= TargetProgress.GetHashCode();
      if (IsGet != 0) hash ^= IsGet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (CurProgress != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurProgress);
      }
      if (TargetProgress != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TargetProgress);
      }
      if (IsGet != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(IsGet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (CurProgress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurProgress);
      }
      if (TargetProgress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetProgress);
      }
      if (IsGet != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsGet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PassTaskState other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.CurProgress != 0) {
        CurProgress = other.CurProgress;
      }
      if (other.TargetProgress != 0) {
        TargetProgress = other.TargetProgress;
      }
      if (other.IsGet != 0) {
        IsGet = other.IsGet;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            CurProgress = input.ReadInt32();
            break;
          }
          case 24: {
            TargetProgress = input.ReadInt32();
            break;
          }
          case 32: {
            IsGet = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class enemyItem : pb::IMessage<enemyItem> {
    private static readonly pb::MessageParser<enemyItem> _parser = new pb::MessageParser<enemyItem>(() => new enemyItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<enemyItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public enemyItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public enemyItem(enemyItem other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      fightNum_ = other.fightNum_;
      runeJudgment_ = other.runeJudgment_;
      runeTactics_ = other.runeTactics_;
      runeCooperation_ = other.runeCooperation_;
      runeCohesive_ = other.runeCohesive_;
      head_ = other.head_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public enemyItem Clone() {
      return new enemyItem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///排名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    ///姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fightNum" field.</summary>
    public const int FightNumFieldNumber = 3;
    private int fightNum_;
    /// <summary>
    ///战力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FightNum {
      get { return fightNum_; }
      set {
        fightNum_ = value;
      }
    }

    /// <summary>Field number for the "rune_judgment" field.</summary>
    public const int RuneJudgmentFieldNumber = 4;
    private int runeJudgment_;
    /// <summary>
    ///符文1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RuneJudgment {
      get { return runeJudgment_; }
      set {
        runeJudgment_ = value;
      }
    }

    /// <summary>Field number for the "rune_tactics" field.</summary>
    public const int RuneTacticsFieldNumber = 5;
    private int runeTactics_;
    /// <summary>
    ///符文2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RuneTactics {
      get { return runeTactics_; }
      set {
        runeTactics_ = value;
      }
    }

    /// <summary>Field number for the "rune_cooperation" field.</summary>
    public const int RuneCooperationFieldNumber = 6;
    private int runeCooperation_;
    /// <summary>
    ///符文3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RuneCooperation {
      get { return runeCooperation_; }
      set {
        runeCooperation_ = value;
      }
    }

    /// <summary>Field number for the "rune_cohesive" field.</summary>
    public const int RuneCohesiveFieldNumber = 7;
    private int runeCohesive_;
    /// <summary>
    ///符文4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RuneCohesive {
      get { return runeCohesive_; }
      set {
        runeCohesive_ = value;
      }
    }

    /// <summary>Field number for the "head" field.</summary>
    public const int HeadFieldNumber = 8;
    private string head_ = "";
    /// <summary>
    ///头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Head {
      get { return head_; }
      set {
        head_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as enemyItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(enemyItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (FightNum != other.FightNum) return false;
      if (RuneJudgment != other.RuneJudgment) return false;
      if (RuneTactics != other.RuneTactics) return false;
      if (RuneCooperation != other.RuneCooperation) return false;
      if (RuneCohesive != other.RuneCohesive) return false;
      if (Head != other.Head) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (FightNum != 0) hash ^= FightNum.GetHashCode();
      if (RuneJudgment != 0) hash ^= RuneJudgment.GetHashCode();
      if (RuneTactics != 0) hash ^= RuneTactics.GetHashCode();
      if (RuneCooperation != 0) hash ^= RuneCooperation.GetHashCode();
      if (RuneCohesive != 0) hash ^= RuneCohesive.GetHashCode();
      if (Head.Length != 0) hash ^= Head.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (FightNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FightNum);
      }
      if (RuneJudgment != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RuneJudgment);
      }
      if (RuneTactics != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RuneTactics);
      }
      if (RuneCooperation != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(RuneCooperation);
      }
      if (RuneCohesive != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RuneCohesive);
      }
      if (Head.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Head);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (FightNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FightNum);
      }
      if (RuneJudgment != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RuneJudgment);
      }
      if (RuneTactics != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RuneTactics);
      }
      if (RuneCooperation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RuneCooperation);
      }
      if (RuneCohesive != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RuneCohesive);
      }
      if (Head.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Head);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(enemyItem other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.FightNum != 0) {
        FightNum = other.FightNum;
      }
      if (other.RuneJudgment != 0) {
        RuneJudgment = other.RuneJudgment;
      }
      if (other.RuneTactics != 0) {
        RuneTactics = other.RuneTactics;
      }
      if (other.RuneCooperation != 0) {
        RuneCooperation = other.RuneCooperation;
      }
      if (other.RuneCohesive != 0) {
        RuneCohesive = other.RuneCohesive;
      }
      if (other.Head.Length != 0) {
        Head = other.Head;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            FightNum = input.ReadInt32();
            break;
          }
          case 32: {
            RuneJudgment = input.ReadInt32();
            break;
          }
          case 40: {
            RuneTactics = input.ReadInt32();
            break;
          }
          case 48: {
            RuneCooperation = input.ReadInt32();
            break;
          }
          case 56: {
            RuneCohesive = input.ReadInt32();
            break;
          }
          case 66: {
            Head = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RankTop10 : pb::IMessage<RankTop10> {
    private static readonly pb::MessageParser<RankTop10> _parser = new pb::MessageParser<RankTop10>(() => new RankTop10());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RankTop10> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankTop10() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankTop10(RankTop10 other) : this() {
      rankingList_ = other.rankingList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankTop10 Clone() {
      return new RankTop10(this);
    }

    /// <summary>Field number for the "rankingList" field.</summary>
    public const int RankingListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LocalData.enemyItem> _repeated_rankingList_codec
        = pb::FieldCodec.ForMessage(10, global::LocalData.enemyItem.Parser);
    private readonly pbc::RepeatedField<global::LocalData.enemyItem> rankingList_ = new pbc::RepeatedField<global::LocalData.enemyItem>();
    /// <summary>
    ///排行榜信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LocalData.enemyItem> RankingList {
      get { return rankingList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RankTop10);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RankTop10 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rankingList_.Equals(other.rankingList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rankingList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      rankingList_.WriteTo(output, _repeated_rankingList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rankingList_.CalculateSize(_repeated_rankingList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RankTop10 other) {
      if (other == null) {
        return;
      }
      rankingList_.Add(other.rankingList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            rankingList_.AddEntriesFrom(input, _repeated_rankingList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RankEnemy : pb::IMessage<RankEnemy> {
    private static readonly pb::MessageParser<RankEnemy> _parser = new pb::MessageParser<RankEnemy>(() => new RankEnemy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RankEnemy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankEnemy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankEnemy(RankEnemy other) : this() {
      rankEnamyList_ = other.rankEnamyList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankEnemy Clone() {
      return new RankEnemy(this);
    }

    /// <summary>Field number for the "rankEnamyList" field.</summary>
    public const int RankEnamyListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LocalData.enemyItem> _repeated_rankEnamyList_codec
        = pb::FieldCodec.ForMessage(10, global::LocalData.enemyItem.Parser);
    private readonly pbc::RepeatedField<global::LocalData.enemyItem> rankEnamyList_ = new pbc::RepeatedField<global::LocalData.enemyItem>();
    /// <summary>
    ///挑战赛对手信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LocalData.enemyItem> RankEnamyList {
      get { return rankEnamyList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RankEnemy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RankEnemy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rankEnamyList_.Equals(other.rankEnamyList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rankEnamyList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      rankEnamyList_.WriteTo(output, _repeated_rankEnamyList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rankEnamyList_.CalculateSize(_repeated_rankEnamyList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RankEnemy other) {
      if (other == null) {
        return;
      }
      rankEnamyList_.Add(other.rankEnamyList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            rankEnamyList_.AddEntriesFrom(input, _repeated_rankEnamyList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RankRecord : pb::IMessage<RankRecord> {
    private static readonly pb::MessageParser<RankRecord> _parser = new pb::MessageParser<RankRecord>(() => new RankRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RankRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankRecord(RankRecord other) : this() {
      record_ = other.record_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankRecord Clone() {
      return new RankRecord(this);
    }

    /// <summary>Field number for the "record" field.</summary>
    public const int RecordFieldNumber = 1;
    private int record_;
    /// <summary>
    ///rank记录
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Record {
      get { return record_; }
      set {
        record_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RankRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RankRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Record != other.Record) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Record != 0) hash ^= Record.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Record != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Record);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Record != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Record);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RankRecord other) {
      if (other == null) {
        return;
      }
      if (other.Record != 0) {
        Record = other.Record;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Record = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class goodsItem : pb::IMessage<goodsItem> {
    private static readonly pb::MessageParser<goodsItem> _parser = new pb::MessageParser<goodsItem>(() => new goodsItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<goodsItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public goodsItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public goodsItem(goodsItem other) : this() {
      name_ = other.name_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public goodsItem Clone() {
      return new goodsItem(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private int state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as goodsItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(goodsItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (State != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(goodsItem other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.State != 0) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            State = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GoodsState : pb::IMessage<GoodsState> {
    private static readonly pb::MessageParser<GoodsState> _parser = new pb::MessageParser<GoodsState>(() => new GoodsState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GoodsState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoodsState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoodsState(GoodsState other) : this() {
      goodsList_ = other.goodsList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoodsState Clone() {
      return new GoodsState(this);
    }

    /// <summary>Field number for the "goodsList" field.</summary>
    public const int GoodsListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LocalData.goodsItem> _repeated_goodsList_codec
        = pb::FieldCodec.ForMessage(10, global::LocalData.goodsItem.Parser);
    private readonly pbc::RepeatedField<global::LocalData.goodsItem> goodsList_ = new pbc::RepeatedField<global::LocalData.goodsItem>();
    /// <summary>
    ///基金通行证购买状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LocalData.goodsItem> GoodsList {
      get { return goodsList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GoodsState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GoodsState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!goodsList_.Equals(other.goodsList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= goodsList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      goodsList_.WriteTo(output, _repeated_goodsList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += goodsList_.CalculateSize(_repeated_goodsList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GoodsState other) {
      if (other == null) {
        return;
      }
      goodsList_.Add(other.goodsList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            goodsList_.AddEntriesFrom(input, _repeated_goodsList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class unlockedNewsItem : pb::IMessage<unlockedNewsItem> {
    private static readonly pb::MessageParser<unlockedNewsItem> _parser = new pb::MessageParser<unlockedNewsItem>(() => new unlockedNewsItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<unlockedNewsItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public unlockedNewsItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public unlockedNewsItem(unlockedNewsItem other) : this() {
      id_ = other.id_;
      state_ = other.state_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public unlockedNewsItem Clone() {
      return new unlockedNewsItem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///信息id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private int state_;
    /// <summary>
    ///是否已弹窗
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private int time_;
    /// <summary>
    ///1解锁时间/2弹窗时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as unlockedNewsItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(unlockedNewsItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (State != other.State) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (Time != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (State != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(State);
      }
      if (Time != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(unlockedNewsItem other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            State = input.ReadInt32();
            break;
          }
          case 24: {
            Time = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnlockedNews : pb::IMessage<UnlockedNews> {
    private static readonly pb::MessageParser<UnlockedNews> _parser = new pb::MessageParser<UnlockedNews>(() => new UnlockedNews());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnlockedNews> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnlockedNews() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnlockedNews(UnlockedNews other) : this() {
      unlockedNewsList_ = other.unlockedNewsList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnlockedNews Clone() {
      return new UnlockedNews(this);
    }

    /// <summary>Field number for the "unlockedNewsList" field.</summary>
    public const int UnlockedNewsListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LocalData.unlockedNewsItem> _repeated_unlockedNewsList_codec
        = pb::FieldCodec.ForMessage(10, global::LocalData.unlockedNewsItem.Parser);
    private readonly pbc::RepeatedField<global::LocalData.unlockedNewsItem> unlockedNewsList_ = new pbc::RepeatedField<global::LocalData.unlockedNewsItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LocalData.unlockedNewsItem> UnlockedNewsList {
      get { return unlockedNewsList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnlockedNews);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnlockedNews other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!unlockedNewsList_.Equals(other.unlockedNewsList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= unlockedNewsList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      unlockedNewsList_.WriteTo(output, _repeated_unlockedNewsList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += unlockedNewsList_.CalculateSize(_repeated_unlockedNewsList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnlockedNews other) {
      if (other == null) {
        return;
      }
      unlockedNewsList_.Add(other.unlockedNewsList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            unlockedNewsList_.AddEntriesFrom(input, _repeated_unlockedNewsList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LockingNews : pb::IMessage<LockingNews> {
    private static readonly pb::MessageParser<LockingNews> _parser = new pb::MessageParser<LockingNews>(() => new LockingNews());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LockingNews> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LockingNews() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LockingNews(LockingNews other) : this() {
      lockingNewsList_ = other.lockingNewsList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LockingNews Clone() {
      return new LockingNews(this);
    }

    /// <summary>Field number for the "lockingNewsList" field.</summary>
    public const int LockingNewsListFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_lockingNewsList_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> lockingNewsList_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> LockingNewsList {
      get { return lockingNewsList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LockingNews);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LockingNews other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lockingNewsList_.Equals(other.lockingNewsList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lockingNewsList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lockingNewsList_.WriteTo(output, _repeated_lockingNewsList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lockingNewsList_.CalculateSize(_repeated_lockingNewsList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LockingNews other) {
      if (other == null) {
        return;
      }
      lockingNewsList_.Add(other.lockingNewsList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            lockingNewsList_.AddEntriesFrom(input, _repeated_lockingNewsList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PassExp : pb::IMessage<PassExp> {
    private static readonly pb::MessageParser<PassExp> _parser = new pb::MessageParser<PassExp>(() => new PassExp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PassExp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PassExp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PassExp(PassExp other) : this() {
      passExp_ = other.passExp_;
      weekExp_ = other.weekExp_;
      week_ = other.week_;
      seasonCount_ = other.seasonCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PassExp Clone() {
      return new PassExp(this);
    }

    /// <summary>Field number for the "passExp" field.</summary>
    public const int PassExp_FieldNumber = 1;
    private int passExp_;
    /// <summary>
    ///当前总经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PassExp_ {
      get { return passExp_; }
      set {
        passExp_ = value;
      }
    }

    /// <summary>Field number for the "weekExp" field.</summary>
    public const int WeekExpFieldNumber = 2;
    private int weekExp_;
    /// <summary>
    ///本周获得经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WeekExp {
      get { return weekExp_; }
      set {
        weekExp_ = value;
      }
    }

    /// <summary>Field number for the "week" field.</summary>
    public const int WeekFieldNumber = 3;
    private int week_;
    /// <summary>
    ///第几周
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Week {
      get { return week_; }
      set {
        week_ = value;
      }
    }

    /// <summary>Field number for the "seasonCount" field.</summary>
    public const int SeasonCountFieldNumber = 4;
    private int seasonCount_;
    /// <summary>
    ///第几赛季
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SeasonCount {
      get { return seasonCount_; }
      set {
        seasonCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PassExp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PassExp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PassExp_ != other.PassExp_) return false;
      if (WeekExp != other.WeekExp) return false;
      if (Week != other.Week) return false;
      if (SeasonCount != other.SeasonCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PassExp_ != 0) hash ^= PassExp_.GetHashCode();
      if (WeekExp != 0) hash ^= WeekExp.GetHashCode();
      if (Week != 0) hash ^= Week.GetHashCode();
      if (SeasonCount != 0) hash ^= SeasonCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PassExp_ != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PassExp_);
      }
      if (WeekExp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(WeekExp);
      }
      if (Week != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Week);
      }
      if (SeasonCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SeasonCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PassExp_ != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PassExp_);
      }
      if (WeekExp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WeekExp);
      }
      if (Week != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Week);
      }
      if (SeasonCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SeasonCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PassExp other) {
      if (other == null) {
        return;
      }
      if (other.PassExp_ != 0) {
        PassExp_ = other.PassExp_;
      }
      if (other.WeekExp != 0) {
        WeekExp = other.WeekExp;
      }
      if (other.Week != 0) {
        Week = other.Week;
      }
      if (other.SeasonCount != 0) {
        SeasonCount = other.SeasonCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PassExp_ = input.ReadInt32();
            break;
          }
          case 16: {
            WeekExp = input.ReadInt32();
            break;
          }
          case 24: {
            Week = input.ReadInt32();
            break;
          }
          case 32: {
            SeasonCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Guide : pb::IMessage<Guide> {
    private static readonly pb::MessageParser<Guide> _parser = new pb::MessageParser<Guide>(() => new Guide());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Guide> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Guide() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Guide(Guide other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Guide Clone() {
      return new Guide(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_list_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> list_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///已完成的引导id列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Guide);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Guide other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!list_.Equals(other.list_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= list_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _repeated_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_repeated_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Guide other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///竞技场信息
  /// </summary>
  public sealed partial class ArenaInfo : pb::IMessage<ArenaInfo> {
    private static readonly pb::MessageParser<ArenaInfo> _parser = new pb::MessageParser<ArenaInfo>(() => new ArenaInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArenaInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArenaInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArenaInfo(ArenaInfo other) : this() {
      curGameID_ = other.curGameID_;
      curRankID_ = other.curRankID_;
      rankNum_ = other.rankNum_;
      rankAddNum_ = other.rankAddNum_;
      helpNum_ = other.helpNum_;
      helpSum_ = other.helpSum_;
      peopleTime_ = other.peopleTime_;
      peopleNum_ = other.peopleNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArenaInfo Clone() {
      return new ArenaInfo(this);
    }

    /// <summary>Field number for the "curGameID" field.</summary>
    public const int CurGameIDFieldNumber = 1;
    private int curGameID_;
    /// <summary>
    ///联赛ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurGameID {
      get { return curGameID_; }
      set {
        curGameID_ = value;
      }
    }

    /// <summary>Field number for the "curRankID" field.</summary>
    public const int CurRankIDFieldNumber = 2;
    private int curRankID_;
    /// <summary>
    ///挑战赛ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurRankID {
      get { return curRankID_; }
      set {
        curRankID_ = value;
      }
    }

    /// <summary>Field number for the "rankNum" field.</summary>
    public const int RankNumFieldNumber = 3;
    private int rankNum_;
    /// <summary>
    ///挑战次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RankNum {
      get { return rankNum_; }
      set {
        rankNum_ = value;
      }
    }

    /// <summary>Field number for the "rankAddNum" field.</summary>
    public const int RankAddNumFieldNumber = 4;
    private int rankAddNum_;
    /// <summary>
    ///挑战增加次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RankAddNum {
      get { return rankAddNum_; }
      set {
        rankAddNum_ = value;
      }
    }

    /// <summary>Field number for the "helpNum" field.</summary>
    public const int HelpNumFieldNumber = 5;
    private int helpNum_;
    /// <summary>
    ///赞助次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HelpNum {
      get { return helpNum_; }
      set {
        helpNum_ = value;
      }
    }

    /// <summary>Field number for the "helpSum" field.</summary>
    public const int HelpSumFieldNumber = 6;
    private int helpSum_;
    /// <summary>
    ///赞助总次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HelpSum {
      get { return helpSum_; }
      set {
        helpSum_ = value;
      }
    }

    /// <summary>Field number for the "peopleTime" field.</summary>
    public const int PeopleTimeFieldNumber = 7;
    private float peopleTime_;
    /// <summary>
    ///观众更新时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PeopleTime {
      get { return peopleTime_; }
      set {
        peopleTime_ = value;
      }
    }

    /// <summary>Field number for the "peopleNum" field.</summary>
    public const int PeopleNumFieldNumber = 8;
    private float peopleNum_;
    /// <summary>
    ///当前观众数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PeopleNum {
      get { return peopleNum_; }
      set {
        peopleNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArenaInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArenaInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurGameID != other.CurGameID) return false;
      if (CurRankID != other.CurRankID) return false;
      if (RankNum != other.RankNum) return false;
      if (RankAddNum != other.RankAddNum) return false;
      if (HelpNum != other.HelpNum) return false;
      if (HelpSum != other.HelpSum) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PeopleTime, other.PeopleTime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PeopleNum, other.PeopleNum)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurGameID != 0) hash ^= CurGameID.GetHashCode();
      if (CurRankID != 0) hash ^= CurRankID.GetHashCode();
      if (RankNum != 0) hash ^= RankNum.GetHashCode();
      if (RankAddNum != 0) hash ^= RankAddNum.GetHashCode();
      if (HelpNum != 0) hash ^= HelpNum.GetHashCode();
      if (HelpSum != 0) hash ^= HelpSum.GetHashCode();
      if (PeopleTime != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PeopleTime);
      if (PeopleNum != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PeopleNum);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CurGameID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurGameID);
      }
      if (CurRankID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurRankID);
      }
      if (RankNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RankNum);
      }
      if (RankAddNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RankAddNum);
      }
      if (HelpNum != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(HelpNum);
      }
      if (HelpSum != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(HelpSum);
      }
      if (PeopleTime != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(PeopleTime);
      }
      if (PeopleNum != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(PeopleNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurGameID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurGameID);
      }
      if (CurRankID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurRankID);
      }
      if (RankNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RankNum);
      }
      if (RankAddNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RankAddNum);
      }
      if (HelpNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HelpNum);
      }
      if (HelpSum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HelpSum);
      }
      if (PeopleTime != 0F) {
        size += 1 + 4;
      }
      if (PeopleNum != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArenaInfo other) {
      if (other == null) {
        return;
      }
      if (other.CurGameID != 0) {
        CurGameID = other.CurGameID;
      }
      if (other.CurRankID != 0) {
        CurRankID = other.CurRankID;
      }
      if (other.RankNum != 0) {
        RankNum = other.RankNum;
      }
      if (other.RankAddNum != 0) {
        RankAddNum = other.RankAddNum;
      }
      if (other.HelpNum != 0) {
        HelpNum = other.HelpNum;
      }
      if (other.HelpSum != 0) {
        HelpSum = other.HelpSum;
      }
      if (other.PeopleTime != 0F) {
        PeopleTime = other.PeopleTime;
      }
      if (other.PeopleNum != 0F) {
        PeopleNum = other.PeopleNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurGameID = input.ReadInt32();
            break;
          }
          case 16: {
            CurRankID = input.ReadInt32();
            break;
          }
          case 24: {
            RankNum = input.ReadInt32();
            break;
          }
          case 32: {
            RankAddNum = input.ReadInt32();
            break;
          }
          case 40: {
            HelpNum = input.ReadInt32();
            break;
          }
          case 48: {
            HelpSum = input.ReadInt32();
            break;
          }
          case 61: {
            PeopleTime = input.ReadFloat();
            break;
          }
          case 69: {
            PeopleNum = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NormalCount : pb::IMessage<NormalCount> {
    private static readonly pb::MessageParser<NormalCount> _parser = new pb::MessageParser<NormalCount>(() => new NormalCount());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NormalCount> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NormalCount() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NormalCount(NormalCount other) : this() {
      count_ = other.count_;
      curTime_ = other.curTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NormalCount Clone() {
      return new NormalCount(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private int count_;
    /// <summary>
    ///普通宣传数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "curTime" field.</summary>
    public const int CurTimeFieldNumber = 2;
    private int curTime_;
    /// <summary>
    ///使用普通宣传时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurTime {
      get { return curTime_; }
      set {
        curTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NormalCount);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NormalCount other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      if (CurTime != other.CurTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0) hash ^= Count.GetHashCode();
      if (CurTime != 0) hash ^= CurTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (CurTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (CurTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NormalCount other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.CurTime != 0) {
        CurTime = other.CurTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
          case 16: {
            CurTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SpeedUpPower : pb::IMessage<SpeedUpPower> {
    private static readonly pb::MessageParser<SpeedUpPower> _parser = new pb::MessageParser<SpeedUpPower>(() => new SpeedUpPower());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpeedUpPower> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpeedUpPower() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpeedUpPower(SpeedUpPower other) : this() {
      power_ = other.power_;
      curTime_ = other.curTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpeedUpPower Clone() {
      return new SpeedUpPower(this);
    }

    /// <summary>Field number for the "power" field.</summary>
    public const int PowerFieldNumber = 1;
    private float power_;
    /// <summary>
    ///加速条
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Power {
      get { return power_; }
      set {
        power_ = value;
      }
    }

    /// <summary>Field number for the "curTime" field.</summary>
    public const int CurTimeFieldNumber = 2;
    private int curTime_;
    /// <summary>
    ///退出加速时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurTime {
      get { return curTime_; }
      set {
        curTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpeedUpPower);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpeedUpPower other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Power, other.Power)) return false;
      if (CurTime != other.CurTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Power != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Power);
      if (CurTime != 0) hash ^= CurTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Power != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Power);
      }
      if (CurTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Power != 0F) {
        size += 1 + 4;
      }
      if (CurTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpeedUpPower other) {
      if (other == null) {
        return;
      }
      if (other.Power != 0F) {
        Power = other.Power;
      }
      if (other.CurTime != 0) {
        CurTime = other.CurTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Power = input.ReadFloat();
            break;
          }
          case 16: {
            CurTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeadID : pb::IMessage<HeadID> {
    private static readonly pb::MessageParser<HeadID> _parser = new pb::MessageParser<HeadID>(() => new HeadID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeadID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeadID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeadID(HeadID other) : this() {
      headID_ = other.headID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeadID Clone() {
      return new HeadID(this);
    }

    /// <summary>Field number for the "headID" field.</summary>
    public const int HeadID_FieldNumber = 1;
    private string headID_ = "";
    /// <summary>
    ///头像id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeadID_ {
      get { return headID_; }
      set {
        headID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeadID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeadID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeadID_ != other.HeadID_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HeadID_.Length != 0) hash ^= HeadID_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HeadID_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HeadID_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HeadID_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HeadID_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeadID other) {
      if (other == null) {
        return;
      }
      if (other.HeadID_.Length != 0) {
        HeadID_ = other.HeadID_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HeadID_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SpUseTime : pb::IMessage<SpUseTime> {
    private static readonly pb::MessageParser<SpUseTime> _parser = new pb::MessageParser<SpUseTime>(() => new SpUseTime());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpUseTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpUseTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpUseTime(SpUseTime other) : this() {
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpUseTime Clone() {
      return new SpUseTime(this);
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 1;
    private int time_;
    /// <summary>
    ///免费抽卡使用时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpUseTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpUseTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Time != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Time != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpUseTime other) {
      if (other == null) {
        return;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Time = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NormalAdsCount : pb::IMessage<NormalAdsCount> {
    private static readonly pb::MessageParser<NormalAdsCount> _parser = new pb::MessageParser<NormalAdsCount>(() => new NormalAdsCount());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NormalAdsCount> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LocalData.LocalDataReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NormalAdsCount() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NormalAdsCount(NormalAdsCount other) : this() {
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NormalAdsCount Clone() {
      return new NormalAdsCount(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private int count_;
    /// <summary>
    ///报纸宣传剩余看广告数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NormalAdsCount);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NormalAdsCount other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NormalAdsCount other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
