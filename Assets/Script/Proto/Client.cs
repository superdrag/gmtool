// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: client.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PClient {

  /// <summary>Holder for reflection information generated from client.proto</summary>
  public static partial class ClientReflection {

    #region Descriptor
    /// <summary>File descriptor for client.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxjbGllbnQucHJvdG8SB1BDbGllbnQaDGNvbW1vbi5wcm90byIgCg1TMkNf",
            "RXJyb3JDb2RlEg8KB2VycmNvZGUYASABKAUiDwoNQzJTX1NvY2tldEhpdCIg",
            "Cg1TMkNfU29ja2V0SGl0Eg8KB2N1cnRpbWUYASABKAUiHwoMUzJDX1NodXRE",
            "d29uEg8KB2xlZnRzZWMYASABKAUiEQoPUzJDX1JlbG9naW5LaWNrIicKE0My",
            "U19QaG9uZUhvbWVPbmxpbmUSEAoIaXNPbmxpbmUYASABKAgiNwoTUzJDX1Bo",
            "b25lSG9tZU9ubGluZRIOCgZ1c2VySWQYASABKAUSEAoIaXNPbmxpbmUYAiAB",
            "KAgidwoJQzJTX0xvZ2luEg4KBm9wZW5pZBgBIAEoCRIPCgd1bmlvbmlkGAIg",
            "ASgJEgwKBG5hbWUYAyABKAkSCwoDcHN3GAQgASgJEg8KB3ZlcnNpb24YBSAB",
            "KAkSEAoIaW1hZ2VVcmwYBiABKAkSCwoDc2V4GAcgASgFIlgKCVMyQ19Mb2dp",
            "bhIPCgdhY2NkYmlkGAEgASgFEgwKBHNpZ24YAiABKAkSEAoIc2VydmVySXAY",
            "AyABKAkSDAoEcG9ydBgEIAEoBRIMCgR0aW1lGAUgASgFIm0KD0MyU19HZXRV",
            "c2VySW5mbxIOCgZvcGVuaWQYASABKAkSDAoEbmFtZRgCIAEoCRIPCgdhY2Nk",
            "YmlkGAMgASgFEgwKBHNpZ24YBCABKAkSDAoEdGltZRgFIAEoBRIPCgd2ZXJz",
            "aW9uGAYgASgJItMBCg9TMkNfR2V0VXNlckluZm8SEAoIdXNlck5hbWUYASAB",
            "KAkSDgoGdXNlcklkGAIgASgFEg4KBnJvbGVJZBgDIAEoBRIKCgJpcBgEIAEo",
            "CRIQCghoZWFkSWNvbhgFIAEoCRILCgNzZXgYBiABKAUSFAoMcmVnaXN0ZXJU",
            "aW1lGAcgASgFEhEKCWxvY2F0aW9uWBgIIAEoAhIRCglsb2NhdGlvblkYCSAB",
            "KAISEwoLcGhvbmVOdW1iZXIYCiABKAkSEgoKZmlyc3RMb2dpbhgLIAEoCCIf",
            "Cg9DMlNfR2V0SXRlbUxpc3QSDAoEdHlwZRgBIAEoBSJCChBTMkNfQmFja0l0",
            "ZW1MaXN0EgwKBHR5cGUYASABKAUSIAoIaXRlbUxpc3QYAiADKAsyDi5QQmFz",
            "ZS5QQl9JdGVtIhIKEEMyU19HZXRFcXVpcExpc3QiNgoRUzJDX0JhY2tFcXVp",
            "cExpc3QSIQoJZXF1aXBMaXN0GAEgAygLMg4uUEJhc2UuUEJfSXRlbSIfCg9D",
            "MlNfR2V0VGFza0xpc3QSDAoEdHlwZRgBIAEoBSJCChBTMkNfQmFja1Rhc2tM",
            "aXN0EgwKBHR5cGUYASABKAUSIAoIdGFza0xpc3QYAiADKAsyDi5QQmFzZS5Q",
            "Ql9UYXNrIhQKEkMyU19HZXRDb3VudGVyTGlzdCI9ChNTMkNfQmFja0NvdW50",
            "ZXJMaXN0EiYKC2NvdW50ZXJMaXN0GAEgAygLMhEuUEJhc2UuUEJfQ291bnRl",
            "ciIdCg9DMlNfQ3JlYXRlRXF1aXASCgoCaWQYASABKAUiMAoNUzJDX0JhY2tF",
            "cXVpcBIOCgZyZXN1bHQYASABKAUSDwoHZXF1aXBJZBgCIAEoBSIcCg5DMlNf",
            "U21lbHRHb29kcxIKCgJpZBgBIAEoBSKLAQoNUzJDX0JhY2tHb29kcxIOCgZy",
            "ZXN1bHQYASABKAUSOAoJZ29vZHNMaXN0GAIgAygLMiUuUENsaWVudC5TMkNf",
            "QmFja0dvb2RzLkdvb2RzTGlzdEVudHJ5GjAKDkdvb2RzTGlzdEVudHJ5EgsK",
            "A2tleRgBIAEoBRINCgV2YWx1ZRgCIAEoBToCOAEiEwoRQzJTX01vZGlmeUVu",
            "dHJpZXMiEQoPUzJDX0JhY2tFbnRyaWVzIhIKEEMyU19FeGNoYW5nZUl0ZW0i",
            "GwoLQzJTX1NvcnRCYWcSDAoEdHlwZRgBIAEoBSJ1Cg1DMlNfU2VsbEl0ZW1z",
            "EjQKB2l0ZW1NYXAYASADKAsyIy5QQ2xpZW50LkMyU19TZWxsSXRlbXMuSXRl",
            "bU1hcEVudHJ5Gi4KDEl0ZW1NYXBFbnRyeRILCgNrZXkYASABKAkSDQoFdmFs",
            "dWUYAiABKAU6AjgBIiQKElMyQ19CYWNrU2VsbFJlc3VsdBIOCgZyZXN1bHQY",
            "ASABKAUiMwoSQzJTX0dldFBsYXllckVxdWlwEgwKBHR5cGUYASABKAUSDwoH",
            "c3ViVHlwZRgCIAEoBSI4ChNTMkNfQmFja1BsYXllckVxdWlwEiEKCWVxdWlw",
            "TGlzdBgBIAMoCzIOLlBCYXNlLlBCX0l0ZW0iQAoWQzJTX1BsYXllckVxdWlw",
            "T3BlcmF0ZRITCgtvcHJlYXRlVHlwZRgBIAEoBRIRCgllcXVpcEd1aWQYAiAB",
            "KAkiOQoPQzJTX0NyZWF0ZVVuaW9uEhEKCXVuaW9uTmFtZRgBIAEoCRITCgt1",
            "bmlvbk5vdGljZRgCIAEoCSKTAQoPUzJDX0NyZWF0ZVVuaW9uEgsKA3JldBgB",
            "IAEoBRIRCgl1bmlvbk5hbWUYAiABKAkSEQoJdW5pb25EYmlkGAMgASgFEg0K",
            "BWxldmVsGAUgASgFEg0KBW1vbmV5GAYgASgFEgsKA2V4cBgHIAEoBRISCgpj",
            "cmVhdGVUaW1lGAggASgFEg4KBm5vdGljZRgJIAEoCSInChJDMlNfQXBwbHlK",
            "b2luVW5pb24SEQoJdW5pb25OYW1lGAEgASgJIjQKElMyQ19BcHBseUpvaW5V",
            "bmlvbhILCgNyZXQYASABKAUSEQoJdW5pb25OYW1lGAIgASgJIhIKEEMyU19H",
            "ZXRVbmlvbkxpc3QiOQoQUzJDX0dldFVuaW9uTGlzdBIlCgl1bmlvbkxpc3QY",
            "ASADKAsyEi5QQmFzZS5QQl9Vbmlvbk9iaiIXChVDMlNfR2V0VW5pb25BcHBs",
            "eUxpc3QiVwoVUzJDX0dldFVuaW9uQXBwbHlMaXN0EhEKCXVuaW9uRGJpZBgB",
            "IAEoBRIrCglhcHBseUxpc3QYAiADKAsyGC5QQmFzZS5QQl9VbmlvbkFwcGx5",
            "SW5mbyI8ChNDMlNfVW5pb25BcHBseVJlcGx5EhEKCWFwcGx5RGJpZBgBIAEo",
            "BRISCgphcHBseVJlcGx5GAIgASgFIjwKE1MyQ19VbmlvbkFwcGx5UmVwbHkS",
            "EQoJYXBwbHlEYmlkGAEgASgFEhIKCmFwcGx5UmVwbHkYAiABKAUiEgoQQzJT",
            "X0dldFVuaW9uSW5mbyJkChBTMkNfR2V0VW5pb25JbmZvEiUKCXVuaW9uSW5m",
            "bxgBIAEoCzISLlBCYXNlLlBCX1VuaW9uT2JqEikKCm1lbWJlckxpc3QYAiAD",
            "KAsyFS5QQmFzZS5QQl9Vbmlvbk1lbWJlciIpChRDMlNfQ2FuY2VsQXBwbHlV",
            "bmlvbhIRCgl1bmlvbk5hbWUYASABKAkiKQoUUzJDX0NhbmNlbEFwcGx5VW5p",
            "b24SEQoJdW5pb25OYW1lGAEgASgJIg8KDUMyU19FeGl0VW5pb24iMgoNUzJD",
            "X0V4aXRVbmlvbhIOCgZyZXN1bHQYASABKAUSEQoJdW5pb25OYW1lGAIgASgJ",
            "IjsKC0MyU19BcHBvaW50EgwKBHR5cGUYASABKAUSEAoIcGFseWVyaWQYAiAB",
            "KAUSDAoEcG9zdBgDIAEoBSIzChNTMkNfUmVzdWx0VG9NYW5hZ2VyEg4KBnJl",
            "c3VsdBgBIAEoBRIMCgRwb3N0GAIgASgFIiIKElMyQ19SZXN1bHRUb01lbWJl",
            "chIMCgRwb3N0GAEgASgFIigKFUMyU19VcGdyYWRlVW5pb25MZXZlbBIPCgd1",
            "bmlvbklkGAEgASgFIksKFVMyQ19CYWNrVXBncmFkZVJlc3VsdBIOCgZyZXN1",
            "bHQYASABKAUSDwoHdW5pb25JZBgCIAEoBRIRCgl1bmlvbk5hbWUYAyABKAki",
            "NwoQQzJTX01vZGlmeU5vdGljZRIPCgd1bmlvbklkGAEgASgFEhIKCm5vdGlj",
            "ZVRleHQYAiABKAkiNAoUUzJDX0JhY2tNb2RpZnlOb3RpY2USDgoGcmVzdWx0",
            "GAEgASgFEgwKBHRleHQYAiABKAkiIAoOQzJTX0RvbmF0ZUl0ZW0SDgoGaXRl",
            "bUlkGAEgASgFIl8KFFMyQ19CYWNrRG9uYXRlUmVzdWx0Eg4KBml0ZW1JZBgB",
            "IAEoBRIPCgd1c2VkTnVtGAIgASgFEhAKCHVuaW9uRVhQGAMgASgFEhQKDGNv",
            "bnRyaWJ1dGlvbhgEIAEoBSIjChBDMlNfR2V0VW5pb25Mb2dzEg8KB3VuaW9u",
            "SWQYASABKAUiTwoRUzJDX0JhY2tVbmlvbkxvZ3MSDwoHdW5pb25JZBgBIAEo",
            "BRIpCgl1bmlvbkxvZ3MYAiADKAsyFi5QQmFzZS5QQl9VbmlvbkxvZ0luZm8i",
            "FwoVQzJTX0dldFBsYXllclByb3BlcnR5IvADChZTMkNfQmFja1BsYXllclBy",
            "b3BlcnR5EhIKCnBsYXllck5hbWUYASABKAkSEgoKc2VydmVyTmFtZRgCIAEo",
            "CRIRCglib2R5TGV2ZWwYAyABKAUSFQoNcHJhY3RpY2VMZXZlbBgEIAEoBRIR",
            "Cgl0cmFpblRpbWUYBSABKAUSFAoMcHJhY3RpY2VUeXBlGAYgASgFEhYKDmN1",
            "cnJlbnRCb2R5RVhQGAcgASgDEhoKEmN1cnJlbnRQcmFjdGljZUVYUBgIIAEo",
            "AxIRCgl1bmlvbk5hbWUYCSABKAkSEQoJdW5pb25Qb3N0GAogASgFEhkKEXVu",
            "aW9uQ29udHJpYnV0aW9uGAsgASgFElMKEmZpZ2h0QXR0cmlidXRlTGlzdBgM",
            "IAMoCzI3LlBDbGllbnQuUzJDX0JhY2tQbGF5ZXJQcm9wZXJ0eS5GaWdodEF0",
            "dHJpYnV0ZUxpc3RFbnRyeRIyChFmaXZlQXR0cmlidXRlTGlzdBgNIAMoCzIX",
            "LlBCYXNlLlBCX0ZpdmVBdHRyaWJ1dGUSIgoJbW9uZXlMaXN0GA4gAygLMg8u",
            "UEJhc2UuUEJfTW9uZXkaOQoXRmlnaHRBdHRyaWJ1dGVMaXN0RW50cnkSCwoD",
            "a2V5GAEgASgFEg0KBXZhbHVlGAIgASgDOgI4ASIeCg5DMlNfQnJlYWtMZXZl",
            "bBIMCgR0eXBlGAEgASgFIjoKE1MyQ19CYWNrQnJlYWtSZXN1bHQSDgoGcmVz",
            "dWx0GAEgASgFEhMKC3ByYWN0aWNlRVhQGAIgASgDIiMKE0MyU19QcmFjdGlj",
            "ZU9wZXJhdGUSDAoEdHlwZRgBIAEoBSJAChNTMkNfQmFja1ByYWN0aWNlRVhQ",
            "EhQKDHByYWN0aWNlVHlwZRgBIAEoBRITCgtwcmFjdGljZUVYUBgCIAEoAyIm",
            "ChZDMlNfQ2hhbmdlUHJhY3RpY2VUeXBlEgwKBHR5cGUYASABKAUiOAoVQzJT",
            "X1N0YXJ0QmF0dGxlU2luZ2xlEhAKCHJlZ2lvbklkGAEgASgFEg0KBW1hcElk",
            "GAIgASgFIpABChVTMkNfU3RhcnRCYXR0bGVTaW5nbGUSEAoIcmVnaW9uSWQY",
            "ASABKAUSFAoMY3VyVHVybkluZGV4GAIgASgFEicKCnBsYXllckxpc3QYCCAD",
            "KAsyEy5QQmFzZS5QQl9CYXR0bGVPYmoSJgoIdHVybkxpc3QYCSADKAsyFC5Q",
            "QmFzZS5QQl9CYXR0bGVUdXJuImQKEEMyU19CYXR0bGVBdHRhY2sSDwoHc2tp",
            "bGxJZBgBIAEoBRIQCghhdHRhY2tJZBgCIAEoBRIRCglkZWZlbnNlSWQYAyAB",
            "KAUSDAoEcG9zeBgEIAEoBRIMCgRwb3N5GAUgASgFIoABChBTMkNfQmF0dGxl",
            "QXR0YWNrEg8KB3NraWxsSWQYASABKAUSEAoIYXR0YWNrSWQYAiABKAUSEQoJ",
            "ZGVmZW5zZUlkGAMgASgFEgwKBHBvc3gYBCABKAUSDAoEcG9zeRgFIAEoBRIO",
            "CgZkYW1hZ2UYBiABKAUSCgoCaHAYByABKAUiKgoSUzJDX0JhdHRsZU5leHRU",
            "dXJuEhQKDGN1clR1cm5JbmRleBgBIAEoBSIUChJTMkNfQmF0dGxlR2FtZU92",
            "ZXIiNQoTUzJDX1VwZGF0ZVVzZXJNb25leRIeCgVtb25leRgBIAMoCzIPLlBC",
            "YXNlLlBCX01vbmV5IjMKEkMyU19VcGxvYWRVc2VySW5mbxIQCghpbWFnZVVy",
            "bBgEIAEoCRILCgNzZXgYBSABKAUiEQoPUzJDX0ZpbmlzaExvZ2luIkwKEkMy",
            "U19VcGxvYWRMb2NhdGlvbhIRCglsb2NhdGlvblgYASABKAISEQoJbG9jYXRp",
            "b25ZGAIgASgCEhAKCGRlc2NyaWJlGAMgASgJIg4KDEMyU19FeGl0Um9vbSIw",
            "CgxTMkNfRXhpdFJvb20SDgoGdXNlcklkGAEgASgFEhAKCGV4aXR0eXBlGAIg",
            "ASgFIh8KDEMyU19TZW5kQ2hhdBIPCgdjb250ZW50GAEgASgJIjMKEFMyQ19Q",
            "dXNoU2VuZENoYXQSDgoGdXNlcklkGAEgASgFEg8KB2NvbnRlbnQYAiABKAki",
            "LgoNQzJTX1NlbmRWb2ljZRIPCgdjb250ZW50GAEgASgMEgwKBGZsYWcYAiAB",
            "KAUiPgoNUzJDX1B1c2hWb2ljZRIOCgZ1c2VySWQYASABKAUSDwoHY29udGVu",
            "dBgCIAEoDBIMCgRmbGFnGAMgASgFIjkKDUMyU19DaGVhdENhcmQSEwoLY2hl",
            "YXRDYXJkczEYASABKAkSEwoLY2hlYXRDYXJkczIYAiABKAkiNQoTQzJTX0dl",
            "dEhhbGxVc2VySW5mbxIOCgZnYW1lSWQYASABKAUSDgoGdXNlcklkGAIgASgF",
            "IhAKDkMyU19Ob3RpY2VJbmZvIksKDlMyQ19Ob3RpY2VJbmZvEhUKDW5vdGlj",
            "ZWNvbnRlbnQYASABKAkSEQoJc3RhcnR0aW1lGAIgASgFEg8KB2VuZHRpbWUY",
            "AyABKAUiJAoNQzJTX0JpbmRQaG9uZRITCgtwaG9uZU51bWJlchgBIAEoCSIk",
            "Cg1TMkNfQmluZFBob25lEhMKC3Bob25lTnVtYmVyGAEgASgJIigKEkMyU19C",
            "aW5kSW52aXRlQ29kZRISCgppbnZpdGVDb2RlGAEgASgFIlIKElMyQ19CaW5k",
            "SW52aXRlQ29kZRISCgppbnZpdGVOYW1lGAEgASgJEhIKCmludml0ZUNvZGUY",
            "AiABKAUSFAoMaW52aXRlVXNlcklkGAMgASgFYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::PBase.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_ErrorCode), global::PClient.S2C_ErrorCode.Parser, new[]{ "Errcode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_SocketHit), global::PClient.C2S_SocketHit.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_SocketHit), global::PClient.S2C_SocketHit.Parser, new[]{ "Curtime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_ShutDwon), global::PClient.S2C_ShutDwon.Parser, new[]{ "Leftsec" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_ReloginKick), global::PClient.S2C_ReloginKick.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_PhoneHomeOnline), global::PClient.C2S_PhoneHomeOnline.Parser, new[]{ "IsOnline" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_PhoneHomeOnline), global::PClient.S2C_PhoneHomeOnline.Parser, new[]{ "UserId", "IsOnline" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_Login), global::PClient.C2S_Login.Parser, new[]{ "Openid", "Unionid", "Name", "Psw", "Version", "ImageUrl", "Sex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_Login), global::PClient.S2C_Login.Parser, new[]{ "Accdbid", "Sign", "ServerIp", "Port", "Time" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_GetUserInfo), global::PClient.C2S_GetUserInfo.Parser, new[]{ "Openid", "Name", "Accdbid", "Sign", "Time", "Version" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_GetUserInfo), global::PClient.S2C_GetUserInfo.Parser, new[]{ "UserName", "UserId", "RoleId", "Ip", "HeadIcon", "Sex", "RegisterTime", "LocationX", "LocationY", "PhoneNumber", "FirstLogin" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_GetItemList), global::PClient.C2S_GetItemList.Parser, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_BackItemList), global::PClient.S2C_BackItemList.Parser, new[]{ "Type", "ItemList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_GetEquipList), global::PClient.C2S_GetEquipList.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_BackEquipList), global::PClient.S2C_BackEquipList.Parser, new[]{ "EquipList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_GetTaskList), global::PClient.C2S_GetTaskList.Parser, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_BackTaskList), global::PClient.S2C_BackTaskList.Parser, new[]{ "Type", "TaskList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_GetCounterList), global::PClient.C2S_GetCounterList.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_BackCounterList), global::PClient.S2C_BackCounterList.Parser, new[]{ "CounterList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_CreateEquip), global::PClient.C2S_CreateEquip.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_BackEquip), global::PClient.S2C_BackEquip.Parser, new[]{ "Result", "EquipId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_SmeltGoods), global::PClient.C2S_SmeltGoods.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_BackGoods), global::PClient.S2C_BackGoods.Parser, new[]{ "Result", "GoodsList" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_ModifyEntries), global::PClient.C2S_ModifyEntries.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_BackEntries), global::PClient.S2C_BackEntries.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_ExchangeItem), global::PClient.C2S_ExchangeItem.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_SortBag), global::PClient.C2S_SortBag.Parser, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_SellItems), global::PClient.C2S_SellItems.Parser, new[]{ "ItemMap" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_BackSellResult), global::PClient.S2C_BackSellResult.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_GetPlayerEquip), global::PClient.C2S_GetPlayerEquip.Parser, new[]{ "Type", "SubType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_BackPlayerEquip), global::PClient.S2C_BackPlayerEquip.Parser, new[]{ "EquipList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_PlayerEquipOperate), global::PClient.C2S_PlayerEquipOperate.Parser, new[]{ "OpreateType", "EquipGuid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_CreateUnion), global::PClient.C2S_CreateUnion.Parser, new[]{ "UnionName", "UnionNotice" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_CreateUnion), global::PClient.S2C_CreateUnion.Parser, new[]{ "Ret", "UnionName", "UnionDbid", "Level", "Money", "Exp", "CreateTime", "Notice" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_ApplyJoinUnion), global::PClient.C2S_ApplyJoinUnion.Parser, new[]{ "UnionName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_ApplyJoinUnion), global::PClient.S2C_ApplyJoinUnion.Parser, new[]{ "Ret", "UnionName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_GetUnionList), global::PClient.C2S_GetUnionList.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_GetUnionList), global::PClient.S2C_GetUnionList.Parser, new[]{ "UnionList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_GetUnionApplyList), global::PClient.C2S_GetUnionApplyList.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_GetUnionApplyList), global::PClient.S2C_GetUnionApplyList.Parser, new[]{ "UnionDbid", "ApplyList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_UnionApplyReply), global::PClient.C2S_UnionApplyReply.Parser, new[]{ "ApplyDbid", "ApplyReply" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_UnionApplyReply), global::PClient.S2C_UnionApplyReply.Parser, new[]{ "ApplyDbid", "ApplyReply" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_GetUnionInfo), global::PClient.C2S_GetUnionInfo.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_GetUnionInfo), global::PClient.S2C_GetUnionInfo.Parser, new[]{ "UnionInfo", "MemberList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_CancelApplyUnion), global::PClient.C2S_CancelApplyUnion.Parser, new[]{ "UnionName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_CancelApplyUnion), global::PClient.S2C_CancelApplyUnion.Parser, new[]{ "UnionName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_ExitUnion), global::PClient.C2S_ExitUnion.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_ExitUnion), global::PClient.S2C_ExitUnion.Parser, new[]{ "Result", "UnionName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_Appoint), global::PClient.C2S_Appoint.Parser, new[]{ "Type", "Palyerid", "Post" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_ResultToManager), global::PClient.S2C_ResultToManager.Parser, new[]{ "Result", "Post" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_ResultToMember), global::PClient.S2C_ResultToMember.Parser, new[]{ "Post" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_UpgradeUnionLevel), global::PClient.C2S_UpgradeUnionLevel.Parser, new[]{ "UnionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_BackUpgradeResult), global::PClient.S2C_BackUpgradeResult.Parser, new[]{ "Result", "UnionId", "UnionName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_ModifyNotice), global::PClient.C2S_ModifyNotice.Parser, new[]{ "UnionId", "NoticeText" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_BackModifyNotice), global::PClient.S2C_BackModifyNotice.Parser, new[]{ "Result", "Text" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_DonateItem), global::PClient.C2S_DonateItem.Parser, new[]{ "ItemId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_BackDonateResult), global::PClient.S2C_BackDonateResult.Parser, new[]{ "ItemId", "UsedNum", "UnionEXP", "Contribution" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_GetUnionLogs), global::PClient.C2S_GetUnionLogs.Parser, new[]{ "UnionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_BackUnionLogs), global::PClient.S2C_BackUnionLogs.Parser, new[]{ "UnionId", "UnionLogs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_GetPlayerProperty), global::PClient.C2S_GetPlayerProperty.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_BackPlayerProperty), global::PClient.S2C_BackPlayerProperty.Parser, new[]{ "PlayerName", "ServerName", "BodyLevel", "PracticeLevel", "TrainTime", "PracticeType", "CurrentBodyEXP", "CurrentPracticeEXP", "UnionName", "UnionPost", "UnionContribution", "FightAttributeList", "FiveAttributeList", "MoneyList" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_BreakLevel), global::PClient.C2S_BreakLevel.Parser, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_BackBreakResult), global::PClient.S2C_BackBreakResult.Parser, new[]{ "Result", "PracticeEXP" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_PracticeOperate), global::PClient.C2S_PracticeOperate.Parser, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_BackPracticeEXP), global::PClient.S2C_BackPracticeEXP.Parser, new[]{ "PracticeType", "PracticeEXP" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_ChangePracticeType), global::PClient.C2S_ChangePracticeType.Parser, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_StartBattleSingle), global::PClient.C2S_StartBattleSingle.Parser, new[]{ "RegionId", "MapId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_StartBattleSingle), global::PClient.S2C_StartBattleSingle.Parser, new[]{ "RegionId", "CurTurnIndex", "PlayerList", "TurnList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_BattleAttack), global::PClient.C2S_BattleAttack.Parser, new[]{ "SkillId", "AttackId", "DefenseId", "Posx", "Posy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_BattleAttack), global::PClient.S2C_BattleAttack.Parser, new[]{ "SkillId", "AttackId", "DefenseId", "Posx", "Posy", "Damage", "Hp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_BattleNextTurn), global::PClient.S2C_BattleNextTurn.Parser, new[]{ "CurTurnIndex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_BattleGameOver), global::PClient.S2C_BattleGameOver.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_UpdateUserMoney), global::PClient.S2C_UpdateUserMoney.Parser, new[]{ "Money" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_UploadUserInfo), global::PClient.C2S_UploadUserInfo.Parser, new[]{ "ImageUrl", "Sex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_FinishLogin), global::PClient.S2C_FinishLogin.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_UploadLocation), global::PClient.C2S_UploadLocation.Parser, new[]{ "LocationX", "LocationY", "Describe" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_ExitRoom), global::PClient.C2S_ExitRoom.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_ExitRoom), global::PClient.S2C_ExitRoom.Parser, new[]{ "UserId", "Exittype" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_SendChat), global::PClient.C2S_SendChat.Parser, new[]{ "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_PushSendChat), global::PClient.S2C_PushSendChat.Parser, new[]{ "UserId", "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_SendVoice), global::PClient.C2S_SendVoice.Parser, new[]{ "Content", "Flag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_PushVoice), global::PClient.S2C_PushVoice.Parser, new[]{ "UserId", "Content", "Flag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_CheatCard), global::PClient.C2S_CheatCard.Parser, new[]{ "CheatCards1", "CheatCards2" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_GetHallUserInfo), global::PClient.C2S_GetHallUserInfo.Parser, new[]{ "GameId", "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_NoticeInfo), global::PClient.C2S_NoticeInfo.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_NoticeInfo), global::PClient.S2C_NoticeInfo.Parser, new[]{ "Noticecontent", "Starttime", "Endtime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_BindPhone), global::PClient.C2S_BindPhone.Parser, new[]{ "PhoneNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_BindPhone), global::PClient.S2C_BindPhone.Parser, new[]{ "PhoneNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.C2S_BindInviteCode), global::PClient.C2S_BindInviteCode.Parser, new[]{ "InviteCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PClient.S2C_BindInviteCode), global::PClient.S2C_BindInviteCode.Parser, new[]{ "InviteName", "InviteCode", "InviteUserId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///错误码 2000
  /// </summary>
  public sealed partial class S2C_ErrorCode : pb::IMessage<S2C_ErrorCode> {
    private static readonly pb::MessageParser<S2C_ErrorCode> _parser = new pb::MessageParser<S2C_ErrorCode>(() => new S2C_ErrorCode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_ErrorCode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ErrorCode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ErrorCode(S2C_ErrorCode other) : this() {
      errcode_ = other.errcode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ErrorCode Clone() {
      return new S2C_ErrorCode(this);
    }

    /// <summary>Field number for the "errcode" field.</summary>
    public const int ErrcodeFieldNumber = 1;
    private int errcode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Errcode {
      get { return errcode_; }
      set {
        errcode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_ErrorCode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_ErrorCode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Errcode != other.Errcode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Errcode != 0) hash ^= Errcode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Errcode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Errcode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Errcode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Errcode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_ErrorCode other) {
      if (other == null) {
        return;
      }
      if (other.Errcode != 0) {
        Errcode = other.Errcode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Errcode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///MSG_CL2GT_SOCKETHIT         1999     //客户端心跳包
  /// </summary>
  public sealed partial class C2S_SocketHit : pb::IMessage<C2S_SocketHit> {
    private static readonly pb::MessageParser<C2S_SocketHit> _parser = new pb::MessageParser<C2S_SocketHit>(() => new C2S_SocketHit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_SocketHit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_SocketHit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_SocketHit(C2S_SocketHit other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_SocketHit Clone() {
      return new C2S_SocketHit(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_SocketHit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_SocketHit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_SocketHit other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///MSG_GT2CL_SOCKETHIT         2999     //客户端心跳包
  /// </summary>
  public sealed partial class S2C_SocketHit : pb::IMessage<S2C_SocketHit> {
    private static readonly pb::MessageParser<S2C_SocketHit> _parser = new pb::MessageParser<S2C_SocketHit>(() => new S2C_SocketHit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_SocketHit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_SocketHit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_SocketHit(S2C_SocketHit other) : this() {
      curtime_ = other.curtime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_SocketHit Clone() {
      return new S2C_SocketHit(this);
    }

    /// <summary>Field number for the "curtime" field.</summary>
    public const int CurtimeFieldNumber = 1;
    private int curtime_;
    /// <summary>
    ///时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Curtime {
      get { return curtime_; }
      set {
        curtime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_SocketHit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_SocketHit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Curtime != other.Curtime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Curtime != 0) hash ^= Curtime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Curtime != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Curtime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Curtime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Curtime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_SocketHit other) {
      if (other == null) {
        return;
      }
      if (other.Curtime != 0) {
        Curtime = other.Curtime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Curtime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///准备关闭服务器
  /// </summary>
  public sealed partial class S2C_ShutDwon : pb::IMessage<S2C_ShutDwon> {
    private static readonly pb::MessageParser<S2C_ShutDwon> _parser = new pb::MessageParser<S2C_ShutDwon>(() => new S2C_ShutDwon());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_ShutDwon> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ShutDwon() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ShutDwon(S2C_ShutDwon other) : this() {
      leftsec_ = other.leftsec_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ShutDwon Clone() {
      return new S2C_ShutDwon(this);
    }

    /// <summary>Field number for the "leftsec" field.</summary>
    public const int LeftsecFieldNumber = 1;
    private int leftsec_;
    /// <summary>
    ///倒计时秒
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Leftsec {
      get { return leftsec_; }
      set {
        leftsec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_ShutDwon);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_ShutDwon other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Leftsec != other.Leftsec) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Leftsec != 0) hash ^= Leftsec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Leftsec != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Leftsec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Leftsec != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leftsec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_ShutDwon other) {
      if (other == null) {
        return;
      }
      if (other.Leftsec != 0) {
        Leftsec = other.Leftsec;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Leftsec = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///你的帐号在另外设备登录，被踢下线
  /// </summary>
  public sealed partial class S2C_ReloginKick : pb::IMessage<S2C_ReloginKick> {
    private static readonly pb::MessageParser<S2C_ReloginKick> _parser = new pb::MessageParser<S2C_ReloginKick>(() => new S2C_ReloginKick());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_ReloginKick> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ReloginKick() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ReloginKick(S2C_ReloginKick other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ReloginKick Clone() {
      return new S2C_ReloginKick(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_ReloginKick);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_ReloginKick other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_ReloginKick other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///玩家在线状态设置home键
  /// </summary>
  public sealed partial class C2S_PhoneHomeOnline : pb::IMessage<C2S_PhoneHomeOnline> {
    private static readonly pb::MessageParser<C2S_PhoneHomeOnline> _parser = new pb::MessageParser<C2S_PhoneHomeOnline>(() => new C2S_PhoneHomeOnline());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_PhoneHomeOnline> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_PhoneHomeOnline() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_PhoneHomeOnline(C2S_PhoneHomeOnline other) : this() {
      isOnline_ = other.isOnline_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_PhoneHomeOnline Clone() {
      return new C2S_PhoneHomeOnline(this);
    }

    /// <summary>Field number for the "isOnline" field.</summary>
    public const int IsOnlineFieldNumber = 1;
    private bool isOnline_;
    /// <summary>
    ///是否在线
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOnline {
      get { return isOnline_; }
      set {
        isOnline_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_PhoneHomeOnline);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_PhoneHomeOnline other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsOnline != other.IsOnline) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsOnline != false) hash ^= IsOnline.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsOnline != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsOnline);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsOnline != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_PhoneHomeOnline other) {
      if (other == null) {
        return;
      }
      if (other.IsOnline != false) {
        IsOnline = other.IsOnline;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsOnline = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///玩家在线状态设置home键
  /// </summary>
  public sealed partial class S2C_PhoneHomeOnline : pb::IMessage<S2C_PhoneHomeOnline> {
    private static readonly pb::MessageParser<S2C_PhoneHomeOnline> _parser = new pb::MessageParser<S2C_PhoneHomeOnline>(() => new S2C_PhoneHomeOnline());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_PhoneHomeOnline> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_PhoneHomeOnline() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_PhoneHomeOnline(S2C_PhoneHomeOnline other) : this() {
      userId_ = other.userId_;
      isOnline_ = other.isOnline_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_PhoneHomeOnline Clone() {
      return new S2C_PhoneHomeOnline(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "isOnline" field.</summary>
    public const int IsOnlineFieldNumber = 2;
    private bool isOnline_;
    /// <summary>
    ///是否在线
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOnline {
      get { return isOnline_; }
      set {
        isOnline_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_PhoneHomeOnline);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_PhoneHomeOnline other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (IsOnline != other.IsOnline) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (IsOnline != false) hash ^= IsOnline.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (IsOnline != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsOnline);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (IsOnline != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_PhoneHomeOnline other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.IsOnline != false) {
        IsOnline = other.IsOnline;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 16: {
            IsOnline = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///MSG_CL2LN_LOGINACCOUNT          = 1011,     //账号登陆
  /// </summary>
  public sealed partial class C2S_Login : pb::IMessage<C2S_Login> {
    private static readonly pb::MessageParser<C2S_Login> _parser = new pb::MessageParser<C2S_Login>(() => new C2S_Login());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_Login> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_Login() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_Login(C2S_Login other) : this() {
      openid_ = other.openid_;
      unionid_ = other.unionid_;
      name_ = other.name_;
      psw_ = other.psw_;
      version_ = other.version_;
      imageUrl_ = other.imageUrl_;
      sex_ = other.sex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_Login Clone() {
      return new C2S_Login(this);
    }

    /// <summary>Field number for the "openid" field.</summary>
    public const int OpenidFieldNumber = 1;
    private string openid_ = "";
    /// <summary>
    ///微信openid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Openid {
      get { return openid_; }
      set {
        openid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unionid" field.</summary>
    public const int UnionidFieldNumber = 2;
    private string unionid_ = "";
    /// <summary>
    ///微信unionid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Unionid {
      get { return unionid_; }
      set {
        unionid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    ///用户名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "psw" field.</summary>
    public const int PswFieldNumber = 4;
    private string psw_ = "";
    /// <summary>
    ///用户密码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Psw {
      get { return psw_; }
      set {
        psw_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 5;
    private string version_ = "";
    /// <summary>
    ///版本号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "imageUrl" field.</summary>
    public const int ImageUrlFieldNumber = 6;
    private string imageUrl_ = "";
    /// <summary>
    ///用户头像Url
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageUrl {
      get { return imageUrl_; }
      set {
        imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sex" field.</summary>
    public const int SexFieldNumber = 7;
    private int sex_;
    /// <summary>
    ///性别 1-男 2-女
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sex {
      get { return sex_; }
      set {
        sex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_Login);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_Login other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Openid != other.Openid) return false;
      if (Unionid != other.Unionid) return false;
      if (Name != other.Name) return false;
      if (Psw != other.Psw) return false;
      if (Version != other.Version) return false;
      if (ImageUrl != other.ImageUrl) return false;
      if (Sex != other.Sex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Openid.Length != 0) hash ^= Openid.GetHashCode();
      if (Unionid.Length != 0) hash ^= Unionid.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Psw.Length != 0) hash ^= Psw.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (ImageUrl.Length != 0) hash ^= ImageUrl.GetHashCode();
      if (Sex != 0) hash ^= Sex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Openid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Openid);
      }
      if (Unionid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Unionid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Psw.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Psw);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Version);
      }
      if (ImageUrl.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ImageUrl);
      }
      if (Sex != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Sex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Openid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Openid);
      }
      if (Unionid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Unionid);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Psw.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Psw);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (ImageUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
      }
      if (Sex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_Login other) {
      if (other == null) {
        return;
      }
      if (other.Openid.Length != 0) {
        Openid = other.Openid;
      }
      if (other.Unionid.Length != 0) {
        Unionid = other.Unionid;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Psw.Length != 0) {
        Psw = other.Psw;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.ImageUrl.Length != 0) {
        ImageUrl = other.ImageUrl;
      }
      if (other.Sex != 0) {
        Sex = other.Sex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Openid = input.ReadString();
            break;
          }
          case 18: {
            Unionid = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Psw = input.ReadString();
            break;
          }
          case 42: {
            Version = input.ReadString();
            break;
          }
          case 50: {
            ImageUrl = input.ReadString();
            break;
          }
          case 56: {
            Sex = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///MSG_LN2CL_GATEIPANDPORT         = 2011,     //成功登陆返回gate链接信息
  /// </summary>
  public sealed partial class S2C_Login : pb::IMessage<S2C_Login> {
    private static readonly pb::MessageParser<S2C_Login> _parser = new pb::MessageParser<S2C_Login>(() => new S2C_Login());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_Login> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_Login() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_Login(S2C_Login other) : this() {
      accdbid_ = other.accdbid_;
      sign_ = other.sign_;
      serverIp_ = other.serverIp_;
      port_ = other.port_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_Login Clone() {
      return new S2C_Login(this);
    }

    /// <summary>Field number for the "accdbid" field.</summary>
    public const int AccdbidFieldNumber = 1;
    private int accdbid_;
    /// <summary>
    ///帐号dbid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Accdbid {
      get { return accdbid_; }
      set {
        accdbid_ = value;
      }
    }

    /// <summary>Field number for the "sign" field.</summary>
    public const int SignFieldNumber = 2;
    private string sign_ = "";
    /// <summary>
    ///签名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sign {
      get { return sign_; }
      set {
        sign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "serverIp" field.</summary>
    public const int ServerIpFieldNumber = 3;
    private string serverIp_ = "";
    /// <summary>
    ///服务器地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerIp {
      get { return serverIp_; }
      set {
        serverIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 4;
    private int port_;
    /// <summary>
    ///服务器端口
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 5;
    private int time_;
    /// <summary>
    ///登录时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_Login);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_Login other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Accdbid != other.Accdbid) return false;
      if (Sign != other.Sign) return false;
      if (ServerIp != other.ServerIp) return false;
      if (Port != other.Port) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Accdbid != 0) hash ^= Accdbid.GetHashCode();
      if (Sign.Length != 0) hash ^= Sign.GetHashCode();
      if (ServerIp.Length != 0) hash ^= ServerIp.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (Time != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Accdbid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Accdbid);
      }
      if (Sign.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Sign);
      }
      if (ServerIp.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ServerIp);
      }
      if (Port != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Port);
      }
      if (Time != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Accdbid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Accdbid);
      }
      if (Sign.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sign);
      }
      if (ServerIp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerIp);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_Login other) {
      if (other == null) {
        return;
      }
      if (other.Accdbid != 0) {
        Accdbid = other.Accdbid;
      }
      if (other.Sign.Length != 0) {
        Sign = other.Sign;
      }
      if (other.ServerIp.Length != 0) {
        ServerIp = other.ServerIp;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Accdbid = input.ReadInt32();
            break;
          }
          case 18: {
            Sign = input.ReadString();
            break;
          }
          case 26: {
            ServerIp = input.ReadString();
            break;
          }
          case 32: {
            Port = input.ReadInt32();
            break;
          }
          case 40: {
            Time = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///MSG_CL2GT_LOGINGATE             = 1012,     //连接gate验证签名
  /// </summary>
  public sealed partial class C2S_GetUserInfo : pb::IMessage<C2S_GetUserInfo> {
    private static readonly pb::MessageParser<C2S_GetUserInfo> _parser = new pb::MessageParser<C2S_GetUserInfo>(() => new C2S_GetUserInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_GetUserInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetUserInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetUserInfo(C2S_GetUserInfo other) : this() {
      openid_ = other.openid_;
      name_ = other.name_;
      accdbid_ = other.accdbid_;
      sign_ = other.sign_;
      time_ = other.time_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetUserInfo Clone() {
      return new C2S_GetUserInfo(this);
    }

    /// <summary>Field number for the "openid" field.</summary>
    public const int OpenidFieldNumber = 1;
    private string openid_ = "";
    /// <summary>
    ///用户唯一标识。手机mac地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Openid {
      get { return openid_; }
      set {
        openid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    ///用户名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "accdbid" field.</summary>
    public const int AccdbidFieldNumber = 3;
    private int accdbid_;
    /// <summary>
    ///账号dbid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Accdbid {
      get { return accdbid_; }
      set {
        accdbid_ = value;
      }
    }

    /// <summary>Field number for the "sign" field.</summary>
    public const int SignFieldNumber = 4;
    private string sign_ = "";
    /// <summary>
    ///签名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sign {
      get { return sign_; }
      set {
        sign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 5;
    private int time_;
    /// <summary>
    ///登录时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 6;
    private string version_ = "";
    /// <summary>
    ///版本号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_GetUserInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_GetUserInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Openid != other.Openid) return false;
      if (Name != other.Name) return false;
      if (Accdbid != other.Accdbid) return false;
      if (Sign != other.Sign) return false;
      if (Time != other.Time) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Openid.Length != 0) hash ^= Openid.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Accdbid != 0) hash ^= Accdbid.GetHashCode();
      if (Sign.Length != 0) hash ^= Sign.GetHashCode();
      if (Time != 0) hash ^= Time.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Openid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Openid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Accdbid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Accdbid);
      }
      if (Sign.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Sign);
      }
      if (Time != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Time);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Openid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Openid);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Accdbid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Accdbid);
      }
      if (Sign.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sign);
      }
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_GetUserInfo other) {
      if (other == null) {
        return;
      }
      if (other.Openid.Length != 0) {
        Openid = other.Openid;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Accdbid != 0) {
        Accdbid = other.Accdbid;
      }
      if (other.Sign.Length != 0) {
        Sign = other.Sign;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Openid = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Accdbid = input.ReadInt32();
            break;
          }
          case 34: {
            Sign = input.ReadString();
            break;
          }
          case 40: {
            Time = input.ReadInt32();
            break;
          }
          case 50: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///MSG_WD2CL_BACKROLEINITDATA      = 2012,     //返回角色基本数据
  /// </summary>
  public sealed partial class S2C_GetUserInfo : pb::IMessage<S2C_GetUserInfo> {
    private static readonly pb::MessageParser<S2C_GetUserInfo> _parser = new pb::MessageParser<S2C_GetUserInfo>(() => new S2C_GetUserInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_GetUserInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_GetUserInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_GetUserInfo(S2C_GetUserInfo other) : this() {
      userName_ = other.userName_;
      userId_ = other.userId_;
      roleId_ = other.roleId_;
      ip_ = other.ip_;
      headIcon_ = other.headIcon_;
      sex_ = other.sex_;
      registerTime_ = other.registerTime_;
      locationX_ = other.locationX_;
      locationY_ = other.locationY_;
      phoneNumber_ = other.phoneNumber_;
      firstLogin_ = other.firstLogin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_GetUserInfo Clone() {
      return new S2C_GetUserInfo(this);
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    /// <summary>
    ///用户名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private int userId_;
    /// <summary>
    ///账号id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "roleId" field.</summary>
    public const int RoleIdFieldNumber = 3;
    private int roleId_;
    /// <summary>
    ///玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoleId {
      get { return roleId_; }
      set {
        roleId_ = value;
      }
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 4;
    private string ip_ = "";
    /// <summary>
    ///ip地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ip {
      get { return ip_; }
      set {
        ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "headIcon" field.</summary>
    public const int HeadIconFieldNumber = 5;
    private string headIcon_ = "";
    /// <summary>
    ///头像Url
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeadIcon {
      get { return headIcon_; }
      set {
        headIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sex" field.</summary>
    public const int SexFieldNumber = 6;
    private int sex_;
    /// <summary>
    ///性别 1-男 2-女
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sex {
      get { return sex_; }
      set {
        sex_ = value;
      }
    }

    /// <summary>Field number for the "registerTime" field.</summary>
    public const int RegisterTimeFieldNumber = 7;
    private int registerTime_;
    /// <summary>
    ///注册时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RegisterTime {
      get { return registerTime_; }
      set {
        registerTime_ = value;
      }
    }

    /// <summary>Field number for the "locationX" field.</summary>
    public const int LocationXFieldNumber = 8;
    private float locationX_;
    /// <summary>
    ///经度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float LocationX {
      get { return locationX_; }
      set {
        locationX_ = value;
      }
    }

    /// <summary>Field number for the "locationY" field.</summary>
    public const int LocationYFieldNumber = 9;
    private float locationY_;
    /// <summary>
    ///纬度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float LocationY {
      get { return locationY_; }
      set {
        locationY_ = value;
      }
    }

    /// <summary>Field number for the "phoneNumber" field.</summary>
    public const int PhoneNumberFieldNumber = 10;
    private string phoneNumber_ = "";
    /// <summary>
    ///手机码 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PhoneNumber {
      get { return phoneNumber_; }
      set {
        phoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "firstLogin" field.</summary>
    public const int FirstLoginFieldNumber = 11;
    private bool firstLogin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FirstLogin {
      get { return firstLogin_; }
      set {
        firstLogin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_GetUserInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_GetUserInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if (UserId != other.UserId) return false;
      if (RoleId != other.RoleId) return false;
      if (Ip != other.Ip) return false;
      if (HeadIcon != other.HeadIcon) return false;
      if (Sex != other.Sex) return false;
      if (RegisterTime != other.RegisterTime) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LocationX, other.LocationX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LocationY, other.LocationY)) return false;
      if (PhoneNumber != other.PhoneNumber) return false;
      if (FirstLogin != other.FirstLogin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (RoleId != 0) hash ^= RoleId.GetHashCode();
      if (Ip.Length != 0) hash ^= Ip.GetHashCode();
      if (HeadIcon.Length != 0) hash ^= HeadIcon.GetHashCode();
      if (Sex != 0) hash ^= Sex.GetHashCode();
      if (RegisterTime != 0) hash ^= RegisterTime.GetHashCode();
      if (LocationX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LocationX);
      if (LocationY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LocationY);
      if (PhoneNumber.Length != 0) hash ^= PhoneNumber.GetHashCode();
      if (FirstLogin != false) hash ^= FirstLogin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (UserId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserId);
      }
      if (RoleId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RoleId);
      }
      if (Ip.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Ip);
      }
      if (HeadIcon.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(HeadIcon);
      }
      if (Sex != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Sex);
      }
      if (RegisterTime != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RegisterTime);
      }
      if (LocationX != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(LocationX);
      }
      if (LocationY != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(LocationY);
      }
      if (PhoneNumber.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(PhoneNumber);
      }
      if (FirstLogin != false) {
        output.WriteRawTag(88);
        output.WriteBool(FirstLogin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (RoleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoleId);
      }
      if (Ip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
      }
      if (HeadIcon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HeadIcon);
      }
      if (Sex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sex);
      }
      if (RegisterTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RegisterTime);
      }
      if (LocationX != 0F) {
        size += 1 + 4;
      }
      if (LocationY != 0F) {
        size += 1 + 4;
      }
      if (PhoneNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNumber);
      }
      if (FirstLogin != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_GetUserInfo other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.RoleId != 0) {
        RoleId = other.RoleId;
      }
      if (other.Ip.Length != 0) {
        Ip = other.Ip;
      }
      if (other.HeadIcon.Length != 0) {
        HeadIcon = other.HeadIcon;
      }
      if (other.Sex != 0) {
        Sex = other.Sex;
      }
      if (other.RegisterTime != 0) {
        RegisterTime = other.RegisterTime;
      }
      if (other.LocationX != 0F) {
        LocationX = other.LocationX;
      }
      if (other.LocationY != 0F) {
        LocationY = other.LocationY;
      }
      if (other.PhoneNumber.Length != 0) {
        PhoneNumber = other.PhoneNumber;
      }
      if (other.FirstLogin != false) {
        FirstLogin = other.FirstLogin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 16: {
            UserId = input.ReadInt32();
            break;
          }
          case 24: {
            RoleId = input.ReadInt32();
            break;
          }
          case 34: {
            Ip = input.ReadString();
            break;
          }
          case 42: {
            HeadIcon = input.ReadString();
            break;
          }
          case 48: {
            Sex = input.ReadInt32();
            break;
          }
          case 56: {
            RegisterTime = input.ReadInt32();
            break;
          }
          case 69: {
            LocationX = input.ReadFloat();
            break;
          }
          case 77: {
            LocationY = input.ReadFloat();
            break;
          }
          case 82: {
            PhoneNumber = input.ReadString();
            break;
          }
          case 88: {
            FirstLogin = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///MSG_CL2LG_GETITEMLIST           = 1511,     //请求物品列表
  /// </summary>
  public sealed partial class C2S_GetItemList : pb::IMessage<C2S_GetItemList> {
    private static readonly pb::MessageParser<C2S_GetItemList> _parser = new pb::MessageParser<C2S_GetItemList>(() => new C2S_GetItemList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_GetItemList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetItemList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetItemList(C2S_GetItemList other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetItemList Clone() {
      return new C2S_GetItemList(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///物品栏类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_GetItemList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_GetItemList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_GetItemList other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///MSG_LG2CL_BACKITEMLIST          = 2511,     //返回物品列表
  /// </summary>
  public sealed partial class S2C_BackItemList : pb::IMessage<S2C_BackItemList> {
    private static readonly pb::MessageParser<S2C_BackItemList> _parser = new pb::MessageParser<S2C_BackItemList>(() => new S2C_BackItemList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BackItemList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackItemList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackItemList(S2C_BackItemList other) : this() {
      type_ = other.type_;
      itemList_ = other.itemList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackItemList Clone() {
      return new S2C_BackItemList(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///物品栏类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "itemList" field.</summary>
    public const int ItemListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::PBase.PB_Item> _repeated_itemList_codec
        = pb::FieldCodec.ForMessage(18, global::PBase.PB_Item.Parser);
    private readonly pbc::RepeatedField<global::PBase.PB_Item> itemList_ = new pbc::RepeatedField<global::PBase.PB_Item>();
    /// <summary>
    ///物品列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PBase.PB_Item> ItemList {
      get { return itemList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BackItemList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BackItemList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!itemList_.Equals(other.itemList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      hash ^= itemList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      itemList_.WriteTo(output, _repeated_itemList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      size += itemList_.CalculateSize(_repeated_itemList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BackItemList other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      itemList_.Add(other.itemList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            itemList_.AddEntriesFrom(input, _repeated_itemList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///MSG_CL2LG_GETEQUIPLIST          = 1512,     //请求装备列表
  /// </summary>
  public sealed partial class C2S_GetEquipList : pb::IMessage<C2S_GetEquipList> {
    private static readonly pb::MessageParser<C2S_GetEquipList> _parser = new pb::MessageParser<C2S_GetEquipList>(() => new C2S_GetEquipList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_GetEquipList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetEquipList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetEquipList(C2S_GetEquipList other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetEquipList Clone() {
      return new C2S_GetEquipList(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_GetEquipList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_GetEquipList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_GetEquipList other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///MSG_LG2CL_BACKEQUIPLIST         = 2512,     //返回装备列表	
  /// </summary>
  public sealed partial class S2C_BackEquipList : pb::IMessage<S2C_BackEquipList> {
    private static readonly pb::MessageParser<S2C_BackEquipList> _parser = new pb::MessageParser<S2C_BackEquipList>(() => new S2C_BackEquipList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BackEquipList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackEquipList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackEquipList(S2C_BackEquipList other) : this() {
      equipList_ = other.equipList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackEquipList Clone() {
      return new S2C_BackEquipList(this);
    }

    /// <summary>Field number for the "equipList" field.</summary>
    public const int EquipListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::PBase.PB_Item> _repeated_equipList_codec
        = pb::FieldCodec.ForMessage(10, global::PBase.PB_Item.Parser);
    private readonly pbc::RepeatedField<global::PBase.PB_Item> equipList_ = new pbc::RepeatedField<global::PBase.PB_Item>();
    /// <summary>
    ///物品列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PBase.PB_Item> EquipList {
      get { return equipList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BackEquipList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BackEquipList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!equipList_.Equals(other.equipList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= equipList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      equipList_.WriteTo(output, _repeated_equipList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += equipList_.CalculateSize(_repeated_equipList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BackEquipList other) {
      if (other == null) {
        return;
      }
      equipList_.Add(other.equipList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            equipList_.AddEntriesFrom(input, _repeated_equipList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///MSG_CL2LG_GETTASKLIST           = 1521,     //请求任务列表
  /// </summary>
  public sealed partial class C2S_GetTaskList : pb::IMessage<C2S_GetTaskList> {
    private static readonly pb::MessageParser<C2S_GetTaskList> _parser = new pb::MessageParser<C2S_GetTaskList>(() => new C2S_GetTaskList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_GetTaskList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetTaskList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetTaskList(C2S_GetTaskList other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetTaskList Clone() {
      return new C2S_GetTaskList(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///任务类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_GetTaskList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_GetTaskList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_GetTaskList other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///MSG_LG2CL_BACKTASLLIST          = 2521,     //返回任务列表
  /// </summary>
  public sealed partial class S2C_BackTaskList : pb::IMessage<S2C_BackTaskList> {
    private static readonly pb::MessageParser<S2C_BackTaskList> _parser = new pb::MessageParser<S2C_BackTaskList>(() => new S2C_BackTaskList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BackTaskList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackTaskList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackTaskList(S2C_BackTaskList other) : this() {
      type_ = other.type_;
      taskList_ = other.taskList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackTaskList Clone() {
      return new S2C_BackTaskList(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///任务类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "taskList" field.</summary>
    public const int TaskListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::PBase.PB_Task> _repeated_taskList_codec
        = pb::FieldCodec.ForMessage(18, global::PBase.PB_Task.Parser);
    private readonly pbc::RepeatedField<global::PBase.PB_Task> taskList_ = new pbc::RepeatedField<global::PBase.PB_Task>();
    /// <summary>
    ///物品列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PBase.PB_Task> TaskList {
      get { return taskList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BackTaskList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BackTaskList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!taskList_.Equals(other.taskList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      hash ^= taskList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      taskList_.WriteTo(output, _repeated_taskList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      size += taskList_.CalculateSize(_repeated_taskList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BackTaskList other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      taskList_.Add(other.taskList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            taskList_.AddEntriesFrom(input, _repeated_taskList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_CL2LG_GETCOUNTERLIST        = 1531,     //请求计数器列表
  /// </summary>
  public sealed partial class C2S_GetCounterList : pb::IMessage<C2S_GetCounterList> {
    private static readonly pb::MessageParser<C2S_GetCounterList> _parser = new pb::MessageParser<C2S_GetCounterList>(() => new C2S_GetCounterList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_GetCounterList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetCounterList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetCounterList(C2S_GetCounterList other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetCounterList Clone() {
      return new C2S_GetCounterList(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_GetCounterList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_GetCounterList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_GetCounterList other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// MSG_LG2CL_BACKCOUNTERLIST       = 2531,     //返回计数器列表
  /// </summary>
  public sealed partial class S2C_BackCounterList : pb::IMessage<S2C_BackCounterList> {
    private static readonly pb::MessageParser<S2C_BackCounterList> _parser = new pb::MessageParser<S2C_BackCounterList>(() => new S2C_BackCounterList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BackCounterList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackCounterList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackCounterList(S2C_BackCounterList other) : this() {
      counterList_ = other.counterList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackCounterList Clone() {
      return new S2C_BackCounterList(this);
    }

    /// <summary>Field number for the "counterList" field.</summary>
    public const int CounterListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::PBase.PB_Counter> _repeated_counterList_codec
        = pb::FieldCodec.ForMessage(10, global::PBase.PB_Counter.Parser);
    private readonly pbc::RepeatedField<global::PBase.PB_Counter> counterList_ = new pbc::RepeatedField<global::PBase.PB_Counter>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PBase.PB_Counter> CounterList {
      get { return counterList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BackCounterList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BackCounterList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!counterList_.Equals(other.counterList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= counterList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      counterList_.WriteTo(output, _repeated_counterList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += counterList_.CalculateSize(_repeated_counterList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BackCounterList other) {
      if (other == null) {
        return;
      }
      counterList_.Add(other.counterList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            counterList_.AddEntriesFrom(input, _repeated_counterList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_CL2LG_CREATEEQUIP           = 1541,     //打造装备
  /// </summary>
  public sealed partial class C2S_CreateEquip : pb::IMessage<C2S_CreateEquip> {
    private static readonly pb::MessageParser<C2S_CreateEquip> _parser = new pb::MessageParser<C2S_CreateEquip>(() => new C2S_CreateEquip());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_CreateEquip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_CreateEquip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_CreateEquip(C2S_CreateEquip other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_CreateEquip Clone() {
      return new C2S_CreateEquip(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///物品ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_CreateEquip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_CreateEquip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_CreateEquip other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_LG2CL_BACKEQUIP             = 2541,     //返回新装备
  /// </summary>
  public sealed partial class S2C_BackEquip : pb::IMessage<S2C_BackEquip> {
    private static readonly pb::MessageParser<S2C_BackEquip> _parser = new pb::MessageParser<S2C_BackEquip>(() => new S2C_BackEquip());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BackEquip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackEquip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackEquip(S2C_BackEquip other) : this() {
      result_ = other.result_;
      equipId_ = other.equipId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackEquip Clone() {
      return new S2C_BackEquip(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    /// <summary>
    ///打造结果(0:成功,非0:失败)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "equipId" field.</summary>
    public const int EquipIdFieldNumber = 2;
    private int equipId_;
    /// <summary>
    ///新装备的ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EquipId {
      get { return equipId_; }
      set {
        equipId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BackEquip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BackEquip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (EquipId != other.EquipId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (EquipId != 0) hash ^= EquipId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (EquipId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EquipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (EquipId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EquipId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BackEquip other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.EquipId != 0) {
        EquipId = other.EquipId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 16: {
            EquipId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_CL2LG_SMELTGOODS            = 1551,     //炼制丹药
  /// </summary>
  public sealed partial class C2S_SmeltGoods : pb::IMessage<C2S_SmeltGoods> {
    private static readonly pb::MessageParser<C2S_SmeltGoods> _parser = new pb::MessageParser<C2S_SmeltGoods>(() => new C2S_SmeltGoods());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_SmeltGoods> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_SmeltGoods() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_SmeltGoods(C2S_SmeltGoods other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_SmeltGoods Clone() {
      return new C2S_SmeltGoods(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///物品id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_SmeltGoods);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_SmeltGoods other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_SmeltGoods other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_LG2CL_BACKEGOODS            = 2551,     //返回丹药
  /// </summary>
  public sealed partial class S2C_BackGoods : pb::IMessage<S2C_BackGoods> {
    private static readonly pb::MessageParser<S2C_BackGoods> _parser = new pb::MessageParser<S2C_BackGoods>(() => new S2C_BackGoods());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BackGoods> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackGoods() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackGoods(S2C_BackGoods other) : this() {
      result_ = other.result_;
      goodsList_ = other.goodsList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackGoods Clone() {
      return new S2C_BackGoods(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    /// <summary>
    ///炼制结果(0:成功,非0:失败)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "goodsList" field.</summary>
    public const int GoodsListFieldNumber = 2;
    private static readonly pbc::MapField<int, int>.Codec _map_goodsList_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 18);
    private readonly pbc::MapField<int, int> goodsList_ = new pbc::MapField<int, int>();
    /// <summary>
    ///物品的信息列表(key:丹药的ID, value:丹药的数量)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> GoodsList {
      get { return goodsList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BackGoods);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BackGoods other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!GoodsList.Equals(other.GoodsList)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      hash ^= GoodsList.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      goodsList_.WriteTo(output, _map_goodsList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      size += goodsList_.CalculateSize(_map_goodsList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BackGoods other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      goodsList_.Add(other.goodsList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 18: {
            goodsList_.AddEntriesFrom(input, _map_goodsList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_CL2LG_MODIFYENTRIES         = 1561,     //洗炼词条
  /// </summary>
  public sealed partial class C2S_ModifyEntries : pb::IMessage<C2S_ModifyEntries> {
    private static readonly pb::MessageParser<C2S_ModifyEntries> _parser = new pb::MessageParser<C2S_ModifyEntries>(() => new C2S_ModifyEntries());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_ModifyEntries> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ModifyEntries() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ModifyEntries(C2S_ModifyEntries other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ModifyEntries Clone() {
      return new C2S_ModifyEntries(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_ModifyEntries);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_ModifyEntries other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_ModifyEntries other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// MSG_LG2CL_BACKENTRIES           = 2561,     //返回词条
  /// </summary>
  public sealed partial class S2C_BackEntries : pb::IMessage<S2C_BackEntries> {
    private static readonly pb::MessageParser<S2C_BackEntries> _parser = new pb::MessageParser<S2C_BackEntries>(() => new S2C_BackEntries());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BackEntries> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackEntries() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackEntries(S2C_BackEntries other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackEntries Clone() {
      return new S2C_BackEntries(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BackEntries);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BackEntries other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BackEntries other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// MSG_CL2LG_EXCHANGEITEM          = 1571,     //交换物品位置
  /// </summary>
  public sealed partial class C2S_ExchangeItem : pb::IMessage<C2S_ExchangeItem> {
    private static readonly pb::MessageParser<C2S_ExchangeItem> _parser = new pb::MessageParser<C2S_ExchangeItem>(() => new C2S_ExchangeItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_ExchangeItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ExchangeItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ExchangeItem(C2S_ExchangeItem other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ExchangeItem Clone() {
      return new C2S_ExchangeItem(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_ExchangeItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_ExchangeItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_ExchangeItem other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// MSG_CL2LG_SORTBAG               = 1581,     //整理背包
  /// </summary>
  public sealed partial class C2S_SortBag : pb::IMessage<C2S_SortBag> {
    private static readonly pb::MessageParser<C2S_SortBag> _parser = new pb::MessageParser<C2S_SortBag>(() => new C2S_SortBag());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_SortBag> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_SortBag() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_SortBag(C2S_SortBag other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_SortBag Clone() {
      return new C2S_SortBag(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///物品类型(装备、符咒、丹药......)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_SortBag);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_SortBag other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_SortBag other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_CL2LG_SELLITEMS             = 1522,     //出售物品
  /// </summary>
  public sealed partial class C2S_SellItems : pb::IMessage<C2S_SellItems> {
    private static readonly pb::MessageParser<C2S_SellItems> _parser = new pb::MessageParser<C2S_SellItems>(() => new C2S_SellItems());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_SellItems> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_SellItems() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_SellItems(C2S_SellItems other) : this() {
      itemMap_ = other.itemMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_SellItems Clone() {
      return new C2S_SellItems(this);
    }

    /// <summary>Field number for the "itemMap" field.</summary>
    public const int ItemMapFieldNumber = 1;
    private static readonly pbc::MapField<string, int>.Codec _map_itemMap_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForInt32(16), 10);
    private readonly pbc::MapField<string, int> itemMap_ = new pbc::MapField<string, int>();
    /// <summary>
    ///物品的信息列表(key:item的guid,  value:item的数量)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, int> ItemMap {
      get { return itemMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_SellItems);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_SellItems other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ItemMap.Equals(other.ItemMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ItemMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      itemMap_.WriteTo(output, _map_itemMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += itemMap_.CalculateSize(_map_itemMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_SellItems other) {
      if (other == null) {
        return;
      }
      itemMap_.Add(other.itemMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            itemMap_.AddEntriesFrom(input, _map_itemMap_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_LG2CL_BACKSELLRESULT        = 2522,     //返回出售结果
  /// </summary>
  public sealed partial class S2C_BackSellResult : pb::IMessage<S2C_BackSellResult> {
    private static readonly pb::MessageParser<S2C_BackSellResult> _parser = new pb::MessageParser<S2C_BackSellResult>(() => new S2C_BackSellResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BackSellResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackSellResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackSellResult(S2C_BackSellResult other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackSellResult Clone() {
      return new S2C_BackSellResult(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BackSellResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BackSellResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BackSellResult other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_CL2LG_GETPLAYEREQUIP        = 1542,     //请求穿戴部位的装备
  /// </summary>
  public sealed partial class C2S_GetPlayerEquip : pb::IMessage<C2S_GetPlayerEquip> {
    private static readonly pb::MessageParser<C2S_GetPlayerEquip> _parser = new pb::MessageParser<C2S_GetPlayerEquip>(() => new C2S_GetPlayerEquip());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_GetPlayerEquip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetPlayerEquip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetPlayerEquip(C2S_GetPlayerEquip other) : this() {
      type_ = other.type_;
      subType_ = other.subType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetPlayerEquip Clone() {
      return new C2S_GetPlayerEquip(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "subType" field.</summary>
    public const int SubTypeFieldNumber = 2;
    private int subType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubType {
      get { return subType_; }
      set {
        subType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_GetPlayerEquip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_GetPlayerEquip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (SubType != other.SubType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (SubType != 0) hash ^= SubType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (SubType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SubType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (SubType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_GetPlayerEquip other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.SubType != 0) {
        SubType = other.SubType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            SubType = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_LG2CL_BACKPLAYEREQUIP       = 2542,     //返回指定部位的装备
  /// </summary>
  public sealed partial class S2C_BackPlayerEquip : pb::IMessage<S2C_BackPlayerEquip> {
    private static readonly pb::MessageParser<S2C_BackPlayerEquip> _parser = new pb::MessageParser<S2C_BackPlayerEquip>(() => new S2C_BackPlayerEquip());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BackPlayerEquip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackPlayerEquip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackPlayerEquip(S2C_BackPlayerEquip other) : this() {
      equipList_ = other.equipList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackPlayerEquip Clone() {
      return new S2C_BackPlayerEquip(this);
    }

    /// <summary>Field number for the "equipList" field.</summary>
    public const int EquipListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::PBase.PB_Item> _repeated_equipList_codec
        = pb::FieldCodec.ForMessage(10, global::PBase.PB_Item.Parser);
    private readonly pbc::RepeatedField<global::PBase.PB_Item> equipList_ = new pbc::RepeatedField<global::PBase.PB_Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PBase.PB_Item> EquipList {
      get { return equipList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BackPlayerEquip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BackPlayerEquip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!equipList_.Equals(other.equipList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= equipList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      equipList_.WriteTo(output, _repeated_equipList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += equipList_.CalculateSize(_repeated_equipList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BackPlayerEquip other) {
      if (other == null) {
        return;
      }
      equipList_.Add(other.equipList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            equipList_.AddEntriesFrom(input, _repeated_equipList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_CL2LG_PLAYEREQUIPOPERATE    = 1552,     //穿戴或卸下装备
  /// </summary>
  public sealed partial class C2S_PlayerEquipOperate : pb::IMessage<C2S_PlayerEquipOperate> {
    private static readonly pb::MessageParser<C2S_PlayerEquipOperate> _parser = new pb::MessageParser<C2S_PlayerEquipOperate>(() => new C2S_PlayerEquipOperate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_PlayerEquipOperate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_PlayerEquipOperate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_PlayerEquipOperate(C2S_PlayerEquipOperate other) : this() {
      opreateType_ = other.opreateType_;
      equipGuid_ = other.equipGuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_PlayerEquipOperate Clone() {
      return new C2S_PlayerEquipOperate(this);
    }

    /// <summary>Field number for the "opreateType" field.</summary>
    public const int OpreateTypeFieldNumber = 1;
    private int opreateType_;
    /// <summary>
    ///操作类型 1:穿戴  2:卸下
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OpreateType {
      get { return opreateType_; }
      set {
        opreateType_ = value;
      }
    }

    /// <summary>Field number for the "equipGuid" field.</summary>
    public const int EquipGuidFieldNumber = 2;
    private string equipGuid_ = "";
    /// <summary>
    ///装备的guid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EquipGuid {
      get { return equipGuid_; }
      set {
        equipGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_PlayerEquipOperate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_PlayerEquipOperate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OpreateType != other.OpreateType) return false;
      if (EquipGuid != other.EquipGuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OpreateType != 0) hash ^= OpreateType.GetHashCode();
      if (EquipGuid.Length != 0) hash ^= EquipGuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OpreateType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(OpreateType);
      }
      if (EquipGuid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EquipGuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OpreateType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OpreateType);
      }
      if (EquipGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EquipGuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_PlayerEquipOperate other) {
      if (other == null) {
        return;
      }
      if (other.OpreateType != 0) {
        OpreateType = other.OpreateType;
      }
      if (other.EquipGuid.Length != 0) {
        EquipGuid = other.EquipGuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OpreateType = input.ReadInt32();
            break;
          }
          case 18: {
            EquipGuid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_CL2WD_CREATEUNION          	= 1601,     //请求创建工会
  /// </summary>
  public sealed partial class C2S_CreateUnion : pb::IMessage<C2S_CreateUnion> {
    private static readonly pb::MessageParser<C2S_CreateUnion> _parser = new pb::MessageParser<C2S_CreateUnion>(() => new C2S_CreateUnion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_CreateUnion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_CreateUnion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_CreateUnion(C2S_CreateUnion other) : this() {
      unionName_ = other.unionName_;
      unionNotice_ = other.unionNotice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_CreateUnion Clone() {
      return new C2S_CreateUnion(this);
    }

    /// <summary>Field number for the "unionName" field.</summary>
    public const int UnionNameFieldNumber = 1;
    private string unionName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnionName {
      get { return unionName_; }
      set {
        unionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unionNotice" field.</summary>
    public const int UnionNoticeFieldNumber = 2;
    private string unionNotice_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnionNotice {
      get { return unionNotice_; }
      set {
        unionNotice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_CreateUnion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_CreateUnion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnionName != other.UnionName) return false;
      if (UnionNotice != other.UnionNotice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnionName.Length != 0) hash ^= UnionName.GetHashCode();
      if (UnionNotice.Length != 0) hash ^= UnionNotice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnionName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UnionName);
      }
      if (UnionNotice.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnionNotice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnionName);
      }
      if (UnionNotice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnionNotice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_CreateUnion other) {
      if (other == null) {
        return;
      }
      if (other.UnionName.Length != 0) {
        UnionName = other.UnionName;
      }
      if (other.UnionNotice.Length != 0) {
        UnionNotice = other.UnionNotice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UnionName = input.ReadString();
            break;
          }
          case 18: {
            UnionNotice = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_WD2CL_CREATEUNION          	= 2601,     //返回创建工会
  /// </summary>
  public sealed partial class S2C_CreateUnion : pb::IMessage<S2C_CreateUnion> {
    private static readonly pb::MessageParser<S2C_CreateUnion> _parser = new pb::MessageParser<S2C_CreateUnion>(() => new S2C_CreateUnion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_CreateUnion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_CreateUnion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_CreateUnion(S2C_CreateUnion other) : this() {
      ret_ = other.ret_;
      unionName_ = other.unionName_;
      unionDbid_ = other.unionDbid_;
      level_ = other.level_;
      money_ = other.money_;
      exp_ = other.exp_;
      createTime_ = other.createTime_;
      notice_ = other.notice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_CreateUnion Clone() {
      return new S2C_CreateUnion(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "unionName" field.</summary>
    public const int UnionNameFieldNumber = 2;
    private string unionName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnionName {
      get { return unionName_; }
      set {
        unionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unionDbid" field.</summary>
    public const int UnionDbidFieldNumber = 3;
    private int unionDbid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnionDbid {
      get { return unionDbid_; }
      set {
        unionDbid_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 5;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "money" field.</summary>
    public const int MoneyFieldNumber = 6;
    private int money_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Money {
      get { return money_; }
      set {
        money_ = value;
      }
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 7;
    private int exp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    /// <summary>Field number for the "createTime" field.</summary>
    public const int CreateTimeFieldNumber = 8;
    private int createTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "notice" field.</summary>
    public const int NoticeFieldNumber = 9;
    private string notice_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Notice {
      get { return notice_; }
      set {
        notice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_CreateUnion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_CreateUnion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (UnionName != other.UnionName) return false;
      if (UnionDbid != other.UnionDbid) return false;
      if (Level != other.Level) return false;
      if (Money != other.Money) return false;
      if (Exp != other.Exp) return false;
      if (CreateTime != other.CreateTime) return false;
      if (Notice != other.Notice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (UnionName.Length != 0) hash ^= UnionName.GetHashCode();
      if (UnionDbid != 0) hash ^= UnionDbid.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Money != 0) hash ^= Money.GetHashCode();
      if (Exp != 0) hash ^= Exp.GetHashCode();
      if (CreateTime != 0) hash ^= CreateTime.GetHashCode();
      if (Notice.Length != 0) hash ^= Notice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ret);
      }
      if (UnionName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnionName);
      }
      if (UnionDbid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnionDbid);
      }
      if (Level != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Level);
      }
      if (Money != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Money);
      }
      if (Exp != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Exp);
      }
      if (CreateTime != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(CreateTime);
      }
      if (Notice.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Notice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ret);
      }
      if (UnionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnionName);
      }
      if (UnionDbid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnionDbid);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (Money != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Money);
      }
      if (Exp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
      }
      if (CreateTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CreateTime);
      }
      if (Notice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Notice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_CreateUnion other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.UnionName.Length != 0) {
        UnionName = other.UnionName;
      }
      if (other.UnionDbid != 0) {
        UnionDbid = other.UnionDbid;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Money != 0) {
        Money = other.Money;
      }
      if (other.Exp != 0) {
        Exp = other.Exp;
      }
      if (other.CreateTime != 0) {
        CreateTime = other.CreateTime;
      }
      if (other.Notice.Length != 0) {
        Notice = other.Notice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ret = input.ReadInt32();
            break;
          }
          case 18: {
            UnionName = input.ReadString();
            break;
          }
          case 24: {
            UnionDbid = input.ReadInt32();
            break;
          }
          case 40: {
            Level = input.ReadInt32();
            break;
          }
          case 48: {
            Money = input.ReadInt32();
            break;
          }
          case 56: {
            Exp = input.ReadInt32();
            break;
          }
          case 64: {
            CreateTime = input.ReadInt32();
            break;
          }
          case 74: {
            Notice = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_CL2WD_APPLYJOINUNION        = 1602,     //请求加入工会
  /// </summary>
  public sealed partial class C2S_ApplyJoinUnion : pb::IMessage<C2S_ApplyJoinUnion> {
    private static readonly pb::MessageParser<C2S_ApplyJoinUnion> _parser = new pb::MessageParser<C2S_ApplyJoinUnion>(() => new C2S_ApplyJoinUnion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_ApplyJoinUnion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ApplyJoinUnion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ApplyJoinUnion(C2S_ApplyJoinUnion other) : this() {
      unionName_ = other.unionName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ApplyJoinUnion Clone() {
      return new C2S_ApplyJoinUnion(this);
    }

    /// <summary>Field number for the "unionName" field.</summary>
    public const int UnionNameFieldNumber = 1;
    private string unionName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnionName {
      get { return unionName_; }
      set {
        unionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_ApplyJoinUnion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_ApplyJoinUnion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnionName != other.UnionName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnionName.Length != 0) hash ^= UnionName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnionName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UnionName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnionName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_ApplyJoinUnion other) {
      if (other == null) {
        return;
      }
      if (other.UnionName.Length != 0) {
        UnionName = other.UnionName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UnionName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_WD2CL_APPLYJOINUNION        = 2602,     //返回加入工会(返回给申请者)
  /// </summary>
  public sealed partial class S2C_ApplyJoinUnion : pb::IMessage<S2C_ApplyJoinUnion> {
    private static readonly pb::MessageParser<S2C_ApplyJoinUnion> _parser = new pb::MessageParser<S2C_ApplyJoinUnion>(() => new S2C_ApplyJoinUnion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_ApplyJoinUnion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ApplyJoinUnion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ApplyJoinUnion(S2C_ApplyJoinUnion other) : this() {
      ret_ = other.ret_;
      unionName_ = other.unionName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ApplyJoinUnion Clone() {
      return new S2C_ApplyJoinUnion(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "unionName" field.</summary>
    public const int UnionNameFieldNumber = 2;
    private string unionName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnionName {
      get { return unionName_; }
      set {
        unionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_ApplyJoinUnion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_ApplyJoinUnion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (UnionName != other.UnionName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (UnionName.Length != 0) hash ^= UnionName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ret);
      }
      if (UnionName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnionName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ret);
      }
      if (UnionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnionName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_ApplyJoinUnion other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.UnionName.Length != 0) {
        UnionName = other.UnionName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ret = input.ReadInt32();
            break;
          }
          case 18: {
            UnionName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_CL2WD_GETUNIONLIST     		= 1603,     //请求工会列表
  /// </summary>
  public sealed partial class C2S_GetUnionList : pb::IMessage<C2S_GetUnionList> {
    private static readonly pb::MessageParser<C2S_GetUnionList> _parser = new pb::MessageParser<C2S_GetUnionList>(() => new C2S_GetUnionList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_GetUnionList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetUnionList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetUnionList(C2S_GetUnionList other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetUnionList Clone() {
      return new C2S_GetUnionList(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_GetUnionList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_GetUnionList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_GetUnionList other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// MSG_WD2CL_GETUNIONLIST     		= 2603,     //请求工会列表
  /// </summary>
  public sealed partial class S2C_GetUnionList : pb::IMessage<S2C_GetUnionList> {
    private static readonly pb::MessageParser<S2C_GetUnionList> _parser = new pb::MessageParser<S2C_GetUnionList>(() => new S2C_GetUnionList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_GetUnionList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_GetUnionList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_GetUnionList(S2C_GetUnionList other) : this() {
      unionList_ = other.unionList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_GetUnionList Clone() {
      return new S2C_GetUnionList(this);
    }

    /// <summary>Field number for the "unionList" field.</summary>
    public const int UnionListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::PBase.PB_UnionObj> _repeated_unionList_codec
        = pb::FieldCodec.ForMessage(10, global::PBase.PB_UnionObj.Parser);
    private readonly pbc::RepeatedField<global::PBase.PB_UnionObj> unionList_ = new pbc::RepeatedField<global::PBase.PB_UnionObj>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PBase.PB_UnionObj> UnionList {
      get { return unionList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_GetUnionList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_GetUnionList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!unionList_.Equals(other.unionList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= unionList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      unionList_.WriteTo(output, _repeated_unionList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += unionList_.CalculateSize(_repeated_unionList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_GetUnionList other) {
      if (other == null) {
        return;
      }
      unionList_.Add(other.unionList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            unionList_.AddEntriesFrom(input, _repeated_unionList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///MSG_CL2WD_GETUNIONAPPLYLIST     = 1604,     //请求申请列表
  /// </summary>
  public sealed partial class C2S_GetUnionApplyList : pb::IMessage<C2S_GetUnionApplyList> {
    private static readonly pb::MessageParser<C2S_GetUnionApplyList> _parser = new pb::MessageParser<C2S_GetUnionApplyList>(() => new C2S_GetUnionApplyList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_GetUnionApplyList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetUnionApplyList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetUnionApplyList(C2S_GetUnionApplyList other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetUnionApplyList Clone() {
      return new C2S_GetUnionApplyList(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_GetUnionApplyList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_GetUnionApplyList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_GetUnionApplyList other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///MSG_WD2CL_GETUNIONAPPLYLIST     = 2604,     //请求申请列表
  /// </summary>
  public sealed partial class S2C_GetUnionApplyList : pb::IMessage<S2C_GetUnionApplyList> {
    private static readonly pb::MessageParser<S2C_GetUnionApplyList> _parser = new pb::MessageParser<S2C_GetUnionApplyList>(() => new S2C_GetUnionApplyList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_GetUnionApplyList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_GetUnionApplyList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_GetUnionApplyList(S2C_GetUnionApplyList other) : this() {
      unionDbid_ = other.unionDbid_;
      applyList_ = other.applyList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_GetUnionApplyList Clone() {
      return new S2C_GetUnionApplyList(this);
    }

    /// <summary>Field number for the "unionDbid" field.</summary>
    public const int UnionDbidFieldNumber = 1;
    private int unionDbid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnionDbid {
      get { return unionDbid_; }
      set {
        unionDbid_ = value;
      }
    }

    /// <summary>Field number for the "applyList" field.</summary>
    public const int ApplyListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::PBase.PB_UnionApplyInfo> _repeated_applyList_codec
        = pb::FieldCodec.ForMessage(18, global::PBase.PB_UnionApplyInfo.Parser);
    private readonly pbc::RepeatedField<global::PBase.PB_UnionApplyInfo> applyList_ = new pbc::RepeatedField<global::PBase.PB_UnionApplyInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PBase.PB_UnionApplyInfo> ApplyList {
      get { return applyList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_GetUnionApplyList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_GetUnionApplyList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnionDbid != other.UnionDbid) return false;
      if(!applyList_.Equals(other.applyList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnionDbid != 0) hash ^= UnionDbid.GetHashCode();
      hash ^= applyList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnionDbid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnionDbid);
      }
      applyList_.WriteTo(output, _repeated_applyList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnionDbid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnionDbid);
      }
      size += applyList_.CalculateSize(_repeated_applyList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_GetUnionApplyList other) {
      if (other == null) {
        return;
      }
      if (other.UnionDbid != 0) {
        UnionDbid = other.UnionDbid;
      }
      applyList_.Add(other.applyList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UnionDbid = input.ReadInt32();
            break;
          }
          case 18: {
            applyList_.AddEntriesFrom(input, _repeated_applyList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_CL2WD_UNIONAPPLYREPLY     	= 1605,     //同意或拒绝申请
  /// </summary>
  public sealed partial class C2S_UnionApplyReply : pb::IMessage<C2S_UnionApplyReply> {
    private static readonly pb::MessageParser<C2S_UnionApplyReply> _parser = new pb::MessageParser<C2S_UnionApplyReply>(() => new C2S_UnionApplyReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_UnionApplyReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_UnionApplyReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_UnionApplyReply(C2S_UnionApplyReply other) : this() {
      applyDbid_ = other.applyDbid_;
      applyReply_ = other.applyReply_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_UnionApplyReply Clone() {
      return new C2S_UnionApplyReply(this);
    }

    /// <summary>Field number for the "applyDbid" field.</summary>
    public const int ApplyDbidFieldNumber = 1;
    private int applyDbid_;
    /// <summary>
    ///申请者的id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplyDbid {
      get { return applyDbid_; }
      set {
        applyDbid_ = value;
      }
    }

    /// <summary>Field number for the "applyReply" field.</summary>
    public const int ApplyReplyFieldNumber = 2;
    private int applyReply_;
    /// <summary>
    ///1同意 2拒绝
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplyReply {
      get { return applyReply_; }
      set {
        applyReply_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_UnionApplyReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_UnionApplyReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplyDbid != other.ApplyDbid) return false;
      if (ApplyReply != other.ApplyReply) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplyDbid != 0) hash ^= ApplyDbid.GetHashCode();
      if (ApplyReply != 0) hash ^= ApplyReply.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ApplyDbid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ApplyDbid);
      }
      if (ApplyReply != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ApplyReply);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApplyDbid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplyDbid);
      }
      if (ApplyReply != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplyReply);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_UnionApplyReply other) {
      if (other == null) {
        return;
      }
      if (other.ApplyDbid != 0) {
        ApplyDbid = other.ApplyDbid;
      }
      if (other.ApplyReply != 0) {
        ApplyReply = other.ApplyReply;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ApplyDbid = input.ReadInt32();
            break;
          }
          case 16: {
            ApplyReply = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_WD2CL_UNIONAPPLYREPLY     	= 2605,     //同意或拒绝申请(返回给管理者)
  /// </summary>
  public sealed partial class S2C_UnionApplyReply : pb::IMessage<S2C_UnionApplyReply> {
    private static readonly pb::MessageParser<S2C_UnionApplyReply> _parser = new pb::MessageParser<S2C_UnionApplyReply>(() => new S2C_UnionApplyReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_UnionApplyReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_UnionApplyReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_UnionApplyReply(S2C_UnionApplyReply other) : this() {
      applyDbid_ = other.applyDbid_;
      applyReply_ = other.applyReply_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_UnionApplyReply Clone() {
      return new S2C_UnionApplyReply(this);
    }

    /// <summary>Field number for the "applyDbid" field.</summary>
    public const int ApplyDbidFieldNumber = 1;
    private int applyDbid_;
    /// <summary>
    ///申请者的id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplyDbid {
      get { return applyDbid_; }
      set {
        applyDbid_ = value;
      }
    }

    /// <summary>Field number for the "applyReply" field.</summary>
    public const int ApplyReplyFieldNumber = 2;
    private int applyReply_;
    /// <summary>
    ///1同意 2拒绝
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplyReply {
      get { return applyReply_; }
      set {
        applyReply_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_UnionApplyReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_UnionApplyReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplyDbid != other.ApplyDbid) return false;
      if (ApplyReply != other.ApplyReply) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplyDbid != 0) hash ^= ApplyDbid.GetHashCode();
      if (ApplyReply != 0) hash ^= ApplyReply.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ApplyDbid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ApplyDbid);
      }
      if (ApplyReply != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ApplyReply);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApplyDbid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplyDbid);
      }
      if (ApplyReply != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplyReply);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_UnionApplyReply other) {
      if (other == null) {
        return;
      }
      if (other.ApplyDbid != 0) {
        ApplyDbid = other.ApplyDbid;
      }
      if (other.ApplyReply != 0) {
        ApplyReply = other.ApplyReply;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ApplyDbid = input.ReadInt32();
            break;
          }
          case 16: {
            ApplyReply = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_CL2WD_GETUNIONINFO     		= 1608,     //请求工会信息
  /// </summary>
  public sealed partial class C2S_GetUnionInfo : pb::IMessage<C2S_GetUnionInfo> {
    private static readonly pb::MessageParser<C2S_GetUnionInfo> _parser = new pb::MessageParser<C2S_GetUnionInfo>(() => new C2S_GetUnionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_GetUnionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetUnionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetUnionInfo(C2S_GetUnionInfo other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetUnionInfo Clone() {
      return new C2S_GetUnionInfo(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_GetUnionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_GetUnionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_GetUnionInfo other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// MSG_WD2CL_GETUNIONINFO     		= 2608,     //返回工会信息
  /// </summary>
  public sealed partial class S2C_GetUnionInfo : pb::IMessage<S2C_GetUnionInfo> {
    private static readonly pb::MessageParser<S2C_GetUnionInfo> _parser = new pb::MessageParser<S2C_GetUnionInfo>(() => new S2C_GetUnionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_GetUnionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_GetUnionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_GetUnionInfo(S2C_GetUnionInfo other) : this() {
      unionInfo_ = other.unionInfo_ != null ? other.unionInfo_.Clone() : null;
      memberList_ = other.memberList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_GetUnionInfo Clone() {
      return new S2C_GetUnionInfo(this);
    }

    /// <summary>Field number for the "unionInfo" field.</summary>
    public const int UnionInfoFieldNumber = 1;
    private global::PBase.PB_UnionObj unionInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PBase.PB_UnionObj UnionInfo {
      get { return unionInfo_; }
      set {
        unionInfo_ = value;
      }
    }

    /// <summary>Field number for the "memberList" field.</summary>
    public const int MemberListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::PBase.PB_UnionMember> _repeated_memberList_codec
        = pb::FieldCodec.ForMessage(18, global::PBase.PB_UnionMember.Parser);
    private readonly pbc::RepeatedField<global::PBase.PB_UnionMember> memberList_ = new pbc::RepeatedField<global::PBase.PB_UnionMember>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PBase.PB_UnionMember> MemberList {
      get { return memberList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_GetUnionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_GetUnionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UnionInfo, other.UnionInfo)) return false;
      if(!memberList_.Equals(other.memberList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (unionInfo_ != null) hash ^= UnionInfo.GetHashCode();
      hash ^= memberList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (unionInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UnionInfo);
      }
      memberList_.WriteTo(output, _repeated_memberList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (unionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnionInfo);
      }
      size += memberList_.CalculateSize(_repeated_memberList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_GetUnionInfo other) {
      if (other == null) {
        return;
      }
      if (other.unionInfo_ != null) {
        if (unionInfo_ == null) {
          unionInfo_ = new global::PBase.PB_UnionObj();
        }
        UnionInfo.MergeFrom(other.UnionInfo);
      }
      memberList_.Add(other.memberList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (unionInfo_ == null) {
              unionInfo_ = new global::PBase.PB_UnionObj();
            }
            input.ReadMessage(unionInfo_);
            break;
          }
          case 18: {
            memberList_.AddEntriesFrom(input, _repeated_memberList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_CL2WD_CANCELAPPLYUNION     	= 1609,     //取消申请公会
  /// </summary>
  public sealed partial class C2S_CancelApplyUnion : pb::IMessage<C2S_CancelApplyUnion> {
    private static readonly pb::MessageParser<C2S_CancelApplyUnion> _parser = new pb::MessageParser<C2S_CancelApplyUnion>(() => new C2S_CancelApplyUnion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_CancelApplyUnion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_CancelApplyUnion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_CancelApplyUnion(C2S_CancelApplyUnion other) : this() {
      unionName_ = other.unionName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_CancelApplyUnion Clone() {
      return new C2S_CancelApplyUnion(this);
    }

    /// <summary>Field number for the "unionName" field.</summary>
    public const int UnionNameFieldNumber = 1;
    private string unionName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnionName {
      get { return unionName_; }
      set {
        unionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_CancelApplyUnion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_CancelApplyUnion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnionName != other.UnionName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnionName.Length != 0) hash ^= UnionName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnionName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UnionName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnionName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_CancelApplyUnion other) {
      if (other == null) {
        return;
      }
      if (other.UnionName.Length != 0) {
        UnionName = other.UnionName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UnionName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_WD2CL_CANCELAPPLYUNION     	= 2609,     //取消申请公会	
  /// </summary>
  public sealed partial class S2C_CancelApplyUnion : pb::IMessage<S2C_CancelApplyUnion> {
    private static readonly pb::MessageParser<S2C_CancelApplyUnion> _parser = new pb::MessageParser<S2C_CancelApplyUnion>(() => new S2C_CancelApplyUnion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_CancelApplyUnion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_CancelApplyUnion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_CancelApplyUnion(S2C_CancelApplyUnion other) : this() {
      unionName_ = other.unionName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_CancelApplyUnion Clone() {
      return new S2C_CancelApplyUnion(this);
    }

    /// <summary>Field number for the "unionName" field.</summary>
    public const int UnionNameFieldNumber = 1;
    private string unionName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnionName {
      get { return unionName_; }
      set {
        unionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_CancelApplyUnion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_CancelApplyUnion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnionName != other.UnionName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnionName.Length != 0) hash ^= UnionName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnionName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UnionName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnionName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_CancelApplyUnion other) {
      if (other == null) {
        return;
      }
      if (other.UnionName.Length != 0) {
        UnionName = other.UnionName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UnionName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_CL2WD_EXITUNION     		= 1610,     //退出公会
  /// </summary>
  public sealed partial class C2S_ExitUnion : pb::IMessage<C2S_ExitUnion> {
    private static readonly pb::MessageParser<C2S_ExitUnion> _parser = new pb::MessageParser<C2S_ExitUnion>(() => new C2S_ExitUnion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_ExitUnion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ExitUnion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ExitUnion(C2S_ExitUnion other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ExitUnion Clone() {
      return new C2S_ExitUnion(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_ExitUnion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_ExitUnion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_ExitUnion other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// MSG_WD2CL_EXITUNION     		= 2610,     //退出公会	
  /// </summary>
  public sealed partial class S2C_ExitUnion : pb::IMessage<S2C_ExitUnion> {
    private static readonly pb::MessageParser<S2C_ExitUnion> _parser = new pb::MessageParser<S2C_ExitUnion>(() => new S2C_ExitUnion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_ExitUnion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ExitUnion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ExitUnion(S2C_ExitUnion other) : this() {
      result_ = other.result_;
      unionName_ = other.unionName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ExitUnion Clone() {
      return new S2C_ExitUnion(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    /// <summary>
    ///退出结果(1:成员、非宗主职位正常退出 2:解散 3:不能退出)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "unionName" field.</summary>
    public const int UnionNameFieldNumber = 2;
    private string unionName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnionName {
      get { return unionName_; }
      set {
        unionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_ExitUnion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_ExitUnion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (UnionName != other.UnionName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (UnionName.Length != 0) hash ^= UnionName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (UnionName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnionName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (UnionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnionName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_ExitUnion other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.UnionName.Length != 0) {
        UnionName = other.UnionName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 18: {
            UnionName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_CL2WD_APPOINT               = 1611,     //任命职位
  /// </summary>
  public sealed partial class C2S_Appoint : pb::IMessage<C2S_Appoint> {
    private static readonly pb::MessageParser<C2S_Appoint> _parser = new pb::MessageParser<C2S_Appoint>(() => new C2S_Appoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_Appoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_Appoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_Appoint(C2S_Appoint other) : this() {
      type_ = other.type_;
      palyerid_ = other.palyerid_;
      post_ = other.post_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_Appoint Clone() {
      return new C2S_Appoint(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///类型(1:任命职位  2:解除职位)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "palyerid" field.</summary>
    public const int PalyeridFieldNumber = 2;
    private int palyerid_;
    /// <summary>
    ///被任命的玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Palyerid {
      get { return palyerid_; }
      set {
        palyerid_ = value;
      }
    }

    /// <summary>Field number for the "post" field.</summary>
    public const int PostFieldNumber = 3;
    private int post_;
    /// <summary>
    ///被任命的职位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Post {
      get { return post_; }
      set {
        post_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_Appoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_Appoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Palyerid != other.Palyerid) return false;
      if (Post != other.Post) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Palyerid != 0) hash ^= Palyerid.GetHashCode();
      if (Post != 0) hash ^= Post.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Palyerid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Palyerid);
      }
      if (Post != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Post);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Palyerid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Palyerid);
      }
      if (Post != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Post);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_Appoint other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Palyerid != 0) {
        Palyerid = other.Palyerid;
      }
      if (other.Post != 0) {
        Post = other.Post;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Palyerid = input.ReadInt32();
            break;
          }
          case 24: {
            Post = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_WD2CL_RESULTTOMANAGER       = 2611,     //返回任命结果(返回给管理者)
  /// </summary>
  public sealed partial class S2C_ResultToManager : pb::IMessage<S2C_ResultToManager> {
    private static readonly pb::MessageParser<S2C_ResultToManager> _parser = new pb::MessageParser<S2C_ResultToManager>(() => new S2C_ResultToManager());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_ResultToManager> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ResultToManager() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ResultToManager(S2C_ResultToManager other) : this() {
      result_ = other.result_;
      post_ = other.post_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ResultToManager Clone() {
      return new S2C_ResultToManager(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    /// <summary>
    ///任命结果(0:失败 1:成功)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "post" field.</summary>
    public const int PostFieldNumber = 2;
    private int post_;
    /// <summary>
    ///被任命者的职位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Post {
      get { return post_; }
      set {
        post_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_ResultToManager);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_ResultToManager other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Post != other.Post) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (Post != 0) hash ^= Post.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (Post != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Post);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (Post != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Post);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_ResultToManager other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.Post != 0) {
        Post = other.Post;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 16: {
            Post = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_WD2CL_RESULTTOMEMBER        = 2612,     //返回任命结果(返回给被任命者)
  /// </summary>
  public sealed partial class S2C_ResultToMember : pb::IMessage<S2C_ResultToMember> {
    private static readonly pb::MessageParser<S2C_ResultToMember> _parser = new pb::MessageParser<S2C_ResultToMember>(() => new S2C_ResultToMember());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_ResultToMember> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ResultToMember() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ResultToMember(S2C_ResultToMember other) : this() {
      post_ = other.post_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ResultToMember Clone() {
      return new S2C_ResultToMember(this);
    }

    /// <summary>Field number for the "post" field.</summary>
    public const int PostFieldNumber = 1;
    private int post_;
    /// <summary>
    ///被任命的职位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Post {
      get { return post_; }
      set {
        post_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_ResultToMember);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_ResultToMember other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Post != other.Post) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Post != 0) hash ^= Post.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Post != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Post);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Post != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Post);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_ResultToMember other) {
      if (other == null) {
        return;
      }
      if (other.Post != 0) {
        Post = other.Post;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Post = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_CL2WD_UPGRADEUNIONLEVEL     = 1613,     //升级公会
  /// </summary>
  public sealed partial class C2S_UpgradeUnionLevel : pb::IMessage<C2S_UpgradeUnionLevel> {
    private static readonly pb::MessageParser<C2S_UpgradeUnionLevel> _parser = new pb::MessageParser<C2S_UpgradeUnionLevel>(() => new C2S_UpgradeUnionLevel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_UpgradeUnionLevel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_UpgradeUnionLevel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_UpgradeUnionLevel(C2S_UpgradeUnionLevel other) : this() {
      unionId_ = other.unionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_UpgradeUnionLevel Clone() {
      return new C2S_UpgradeUnionLevel(this);
    }

    /// <summary>Field number for the "unionId" field.</summary>
    public const int UnionIdFieldNumber = 1;
    private int unionId_;
    /// <summary>
    ///工会id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnionId {
      get { return unionId_; }
      set {
        unionId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_UpgradeUnionLevel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_UpgradeUnionLevel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnionId != other.UnionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnionId != 0) hash ^= UnionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_UpgradeUnionLevel other) {
      if (other == null) {
        return;
      }
      if (other.UnionId != 0) {
        UnionId = other.UnionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UnionId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_WD2CL_BACKUPGRADERESULT     = 2613,     //返回升级结果
  /// </summary>
  public sealed partial class S2C_BackUpgradeResult : pb::IMessage<S2C_BackUpgradeResult> {
    private static readonly pb::MessageParser<S2C_BackUpgradeResult> _parser = new pb::MessageParser<S2C_BackUpgradeResult>(() => new S2C_BackUpgradeResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BackUpgradeResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackUpgradeResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackUpgradeResult(S2C_BackUpgradeResult other) : this() {
      result_ = other.result_;
      unionId_ = other.unionId_;
      unionName_ = other.unionName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackUpgradeResult Clone() {
      return new S2C_BackUpgradeResult(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    /// <summary>
    ///结果(0:失败  1:成功)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "unionId" field.</summary>
    public const int UnionIdFieldNumber = 2;
    private int unionId_;
    /// <summary>
    ///工会id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnionId {
      get { return unionId_; }
      set {
        unionId_ = value;
      }
    }

    /// <summary>Field number for the "unionName" field.</summary>
    public const int UnionNameFieldNumber = 3;
    private string unionName_ = "";
    /// <summary>
    ///工会名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnionName {
      get { return unionName_; }
      set {
        unionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BackUpgradeResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BackUpgradeResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (UnionId != other.UnionId) return false;
      if (UnionName != other.UnionName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (UnionId != 0) hash ^= UnionId.GetHashCode();
      if (UnionName.Length != 0) hash ^= UnionName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (UnionId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnionId);
      }
      if (UnionName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UnionName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (UnionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnionId);
      }
      if (UnionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnionName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BackUpgradeResult other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.UnionId != 0) {
        UnionId = other.UnionId;
      }
      if (other.UnionName.Length != 0) {
        UnionName = other.UnionName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 16: {
            UnionId = input.ReadInt32();
            break;
          }
          case 26: {
            UnionName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_CL2WD_MODIFYNOTICE          = 1614,     //修改工会公告信息
  /// </summary>
  public sealed partial class C2S_ModifyNotice : pb::IMessage<C2S_ModifyNotice> {
    private static readonly pb::MessageParser<C2S_ModifyNotice> _parser = new pb::MessageParser<C2S_ModifyNotice>(() => new C2S_ModifyNotice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_ModifyNotice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ModifyNotice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ModifyNotice(C2S_ModifyNotice other) : this() {
      unionId_ = other.unionId_;
      noticeText_ = other.noticeText_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ModifyNotice Clone() {
      return new C2S_ModifyNotice(this);
    }

    /// <summary>Field number for the "unionId" field.</summary>
    public const int UnionIdFieldNumber = 1;
    private int unionId_;
    /// <summary>
    ///工会id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnionId {
      get { return unionId_; }
      set {
        unionId_ = value;
      }
    }

    /// <summary>Field number for the "noticeText" field.</summary>
    public const int NoticeTextFieldNumber = 2;
    private string noticeText_ = "";
    /// <summary>
    ///公告信息文本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoticeText {
      get { return noticeText_; }
      set {
        noticeText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_ModifyNotice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_ModifyNotice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnionId != other.UnionId) return false;
      if (NoticeText != other.NoticeText) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnionId != 0) hash ^= UnionId.GetHashCode();
      if (NoticeText.Length != 0) hash ^= NoticeText.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnionId);
      }
      if (NoticeText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NoticeText);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnionId);
      }
      if (NoticeText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoticeText);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_ModifyNotice other) {
      if (other == null) {
        return;
      }
      if (other.UnionId != 0) {
        UnionId = other.UnionId;
      }
      if (other.NoticeText.Length != 0) {
        NoticeText = other.NoticeText;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UnionId = input.ReadInt32();
            break;
          }
          case 18: {
            NoticeText = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_WD2CL_BACKMODIFYNOTICE      = 2614,     //返回公告修改结果
  /// </summary>
  public sealed partial class S2C_BackModifyNotice : pb::IMessage<S2C_BackModifyNotice> {
    private static readonly pb::MessageParser<S2C_BackModifyNotice> _parser = new pb::MessageParser<S2C_BackModifyNotice>(() => new S2C_BackModifyNotice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BackModifyNotice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackModifyNotice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackModifyNotice(S2C_BackModifyNotice other) : this() {
      result_ = other.result_;
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackModifyNotice Clone() {
      return new S2C_BackModifyNotice(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    /// <summary>
    ///结果(0:失败  1:成功)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private string text_ = "";
    /// <summary>
    ///描述文本(成功时:text为修改后的公告信息  失败时:text为错误信息)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BackModifyNotice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BackModifyNotice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BackModifyNotice other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_CL2WD_DONATEITEMS           = 1615,     //工会捐赠物资
  /// </summary>
  public sealed partial class C2S_DonateItem : pb::IMessage<C2S_DonateItem> {
    private static readonly pb::MessageParser<C2S_DonateItem> _parser = new pb::MessageParser<C2S_DonateItem>(() => new C2S_DonateItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_DonateItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_DonateItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_DonateItem(C2S_DonateItem other) : this() {
      itemId_ = other.itemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_DonateItem Clone() {
      return new C2S_DonateItem(this);
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private int itemId_;
    /// <summary>
    ///捐赠物品的id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_DonateItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_DonateItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_DonateItem other) {
      if (other == null) {
        return;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_WD2CL_BACKDONATERESULT      = 2615,     //返回捐赠结果
  /// </summary>
  public sealed partial class S2C_BackDonateResult : pb::IMessage<S2C_BackDonateResult> {
    private static readonly pb::MessageParser<S2C_BackDonateResult> _parser = new pb::MessageParser<S2C_BackDonateResult>(() => new S2C_BackDonateResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BackDonateResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackDonateResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackDonateResult(S2C_BackDonateResult other) : this() {
      itemId_ = other.itemId_;
      usedNum_ = other.usedNum_;
      unionEXP_ = other.unionEXP_;
      contribution_ = other.contribution_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackDonateResult Clone() {
      return new S2C_BackDonateResult(this);
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private int itemId_;
    /// <summary>
    ///消耗物品的名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "usedNum" field.</summary>
    public const int UsedNumFieldNumber = 2;
    private int usedNum_;
    /// <summary>
    ///物品使用数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UsedNum {
      get { return usedNum_; }
      set {
        usedNum_ = value;
      }
    }

    /// <summary>Field number for the "unionEXP" field.</summary>
    public const int UnionEXPFieldNumber = 3;
    private int unionEXP_;
    /// <summary>
    ///工会增加经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnionEXP {
      get { return unionEXP_; }
      set {
        unionEXP_ = value;
      }
    }

    /// <summary>Field number for the "contribution" field.</summary>
    public const int ContributionFieldNumber = 4;
    private int contribution_;
    /// <summary>
    ///个人获得贡献值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Contribution {
      get { return contribution_; }
      set {
        contribution_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BackDonateResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BackDonateResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (UsedNum != other.UsedNum) return false;
      if (UnionEXP != other.UnionEXP) return false;
      if (Contribution != other.Contribution) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (UsedNum != 0) hash ^= UsedNum.GetHashCode();
      if (UnionEXP != 0) hash ^= UnionEXP.GetHashCode();
      if (Contribution != 0) hash ^= Contribution.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemId);
      }
      if (UsedNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UsedNum);
      }
      if (UnionEXP != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnionEXP);
      }
      if (Contribution != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Contribution);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (UsedNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UsedNum);
      }
      if (UnionEXP != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnionEXP);
      }
      if (Contribution != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Contribution);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BackDonateResult other) {
      if (other == null) {
        return;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.UsedNum != 0) {
        UsedNum = other.UsedNum;
      }
      if (other.UnionEXP != 0) {
        UnionEXP = other.UnionEXP;
      }
      if (other.Contribution != 0) {
        Contribution = other.Contribution;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadInt32();
            break;
          }
          case 16: {
            UsedNum = input.ReadInt32();
            break;
          }
          case 24: {
            UnionEXP = input.ReadInt32();
            break;
          }
          case 32: {
            Contribution = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///MSG_CL2WD_GETUNIONLOGS          = 1616,     //请求工会日志
  /// </summary>
  public sealed partial class C2S_GetUnionLogs : pb::IMessage<C2S_GetUnionLogs> {
    private static readonly pb::MessageParser<C2S_GetUnionLogs> _parser = new pb::MessageParser<C2S_GetUnionLogs>(() => new C2S_GetUnionLogs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_GetUnionLogs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetUnionLogs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetUnionLogs(C2S_GetUnionLogs other) : this() {
      unionId_ = other.unionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetUnionLogs Clone() {
      return new C2S_GetUnionLogs(this);
    }

    /// <summary>Field number for the "unionId" field.</summary>
    public const int UnionIdFieldNumber = 1;
    private int unionId_;
    /// <summary>
    ///工会id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnionId {
      get { return unionId_; }
      set {
        unionId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_GetUnionLogs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_GetUnionLogs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnionId != other.UnionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnionId != 0) hash ^= UnionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_GetUnionLogs other) {
      if (other == null) {
        return;
      }
      if (other.UnionId != 0) {
        UnionId = other.UnionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UnionId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///MSG_WD2CL_BACKUNIONLOGS         = 2616,     //返回工会日志
  /// </summary>
  public sealed partial class S2C_BackUnionLogs : pb::IMessage<S2C_BackUnionLogs> {
    private static readonly pb::MessageParser<S2C_BackUnionLogs> _parser = new pb::MessageParser<S2C_BackUnionLogs>(() => new S2C_BackUnionLogs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BackUnionLogs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackUnionLogs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackUnionLogs(S2C_BackUnionLogs other) : this() {
      unionId_ = other.unionId_;
      unionLogs_ = other.unionLogs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackUnionLogs Clone() {
      return new S2C_BackUnionLogs(this);
    }

    /// <summary>Field number for the "unionId" field.</summary>
    public const int UnionIdFieldNumber = 1;
    private int unionId_;
    /// <summary>
    ///工会id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnionId {
      get { return unionId_; }
      set {
        unionId_ = value;
      }
    }

    /// <summary>Field number for the "unionLogs" field.</summary>
    public const int UnionLogsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::PBase.PB_UnionLogInfo> _repeated_unionLogs_codec
        = pb::FieldCodec.ForMessage(18, global::PBase.PB_UnionLogInfo.Parser);
    private readonly pbc::RepeatedField<global::PBase.PB_UnionLogInfo> unionLogs_ = new pbc::RepeatedField<global::PBase.PB_UnionLogInfo>();
    /// <summary>
    ///工会日志信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PBase.PB_UnionLogInfo> UnionLogs {
      get { return unionLogs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BackUnionLogs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BackUnionLogs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnionId != other.UnionId) return false;
      if(!unionLogs_.Equals(other.unionLogs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnionId != 0) hash ^= UnionId.GetHashCode();
      hash ^= unionLogs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnionId);
      }
      unionLogs_.WriteTo(output, _repeated_unionLogs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnionId);
      }
      size += unionLogs_.CalculateSize(_repeated_unionLogs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BackUnionLogs other) {
      if (other == null) {
        return;
      }
      if (other.UnionId != 0) {
        UnionId = other.UnionId;
      }
      unionLogs_.Add(other.unionLogs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UnionId = input.ReadInt32();
            break;
          }
          case 18: {
            unionLogs_.AddEntriesFrom(input, _repeated_unionLogs_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///MSG_CL2LG_GETPLAYERPROPERTY     = 1701,     //请求玩家属性
  /// </summary>
  public sealed partial class C2S_GetPlayerProperty : pb::IMessage<C2S_GetPlayerProperty> {
    private static readonly pb::MessageParser<C2S_GetPlayerProperty> _parser = new pb::MessageParser<C2S_GetPlayerProperty>(() => new C2S_GetPlayerProperty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_GetPlayerProperty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetPlayerProperty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetPlayerProperty(C2S_GetPlayerProperty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetPlayerProperty Clone() {
      return new C2S_GetPlayerProperty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_GetPlayerProperty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_GetPlayerProperty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_GetPlayerProperty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///MSG_LG2CL_BACKPLAYERPROPERTY    = 2701,     //返回玩家属性
  /// </summary>
  public sealed partial class S2C_BackPlayerProperty : pb::IMessage<S2C_BackPlayerProperty> {
    private static readonly pb::MessageParser<S2C_BackPlayerProperty> _parser = new pb::MessageParser<S2C_BackPlayerProperty>(() => new S2C_BackPlayerProperty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BackPlayerProperty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackPlayerProperty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackPlayerProperty(S2C_BackPlayerProperty other) : this() {
      playerName_ = other.playerName_;
      serverName_ = other.serverName_;
      bodyLevel_ = other.bodyLevel_;
      practiceLevel_ = other.practiceLevel_;
      trainTime_ = other.trainTime_;
      practiceType_ = other.practiceType_;
      currentBodyEXP_ = other.currentBodyEXP_;
      currentPracticeEXP_ = other.currentPracticeEXP_;
      unionName_ = other.unionName_;
      unionPost_ = other.unionPost_;
      unionContribution_ = other.unionContribution_;
      fightAttributeList_ = other.fightAttributeList_.Clone();
      fiveAttributeList_ = other.fiveAttributeList_.Clone();
      moneyList_ = other.moneyList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackPlayerProperty Clone() {
      return new S2C_BackPlayerProperty(this);
    }

    /// <summary>Field number for the "playerName" field.</summary>
    public const int PlayerNameFieldNumber = 1;
    private string playerName_ = "";
    /// <summary>
    ///人物基础属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "serverName" field.</summary>
    public const int ServerNameFieldNumber = 2;
    private string serverName_ = "";
    /// <summary>
    ///所属服务器名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerName {
      get { return serverName_; }
      set {
        serverName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bodyLevel" field.</summary>
    public const int BodyLevelFieldNumber = 3;
    private int bodyLevel_;
    /// <summary>
    ///肉身等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BodyLevel {
      get { return bodyLevel_; }
      set {
        bodyLevel_ = value;
      }
    }

    /// <summary>Field number for the "practiceLevel" field.</summary>
    public const int PracticeLevelFieldNumber = 4;
    private int practiceLevel_;
    /// <summary>
    ///境界等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PracticeLevel {
      get { return practiceLevel_; }
      set {
        practiceLevel_ = value;
      }
    }

    /// <summary>Field number for the "trainTime" field.</summary>
    public const int TrainTimeFieldNumber = 5;
    private int trainTime_;
    /// <summary>
    ///修炼时长
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TrainTime {
      get { return trainTime_; }
      set {
        trainTime_ = value;
      }
    }

    /// <summary>Field number for the "practiceType" field.</summary>
    public const int PracticeTypeFieldNumber = 6;
    private int practiceType_;
    /// <summary>
    ///当前修行类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PracticeType {
      get { return practiceType_; }
      set {
        practiceType_ = value;
      }
    }

    /// <summary>Field number for the "currentBodyEXP" field.</summary>
    public const int CurrentBodyEXPFieldNumber = 7;
    private long currentBodyEXP_;
    /// <summary>
    ///当前肉身经验值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CurrentBodyEXP {
      get { return currentBodyEXP_; }
      set {
        currentBodyEXP_ = value;
      }
    }

    /// <summary>Field number for the "currentPracticeEXP" field.</summary>
    public const int CurrentPracticeEXPFieldNumber = 8;
    private long currentPracticeEXP_;
    /// <summary>
    ///当前境界修为值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CurrentPracticeEXP {
      get { return currentPracticeEXP_; }
      set {
        currentPracticeEXP_ = value;
      }
    }

    /// <summary>Field number for the "unionName" field.</summary>
    public const int UnionNameFieldNumber = 9;
    private string unionName_ = "";
    /// <summary>
    ///所属公会名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnionName {
      get { return unionName_; }
      set {
        unionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unionPost" field.</summary>
    public const int UnionPostFieldNumber = 10;
    private int unionPost_;
    /// <summary>
    ///工会职务
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnionPost {
      get { return unionPost_; }
      set {
        unionPost_ = value;
      }
    }

    /// <summary>Field number for the "unionContribution" field.</summary>
    public const int UnionContributionFieldNumber = 11;
    private int unionContribution_;
    /// <summary>
    ///工会贡献值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnionContribution {
      get { return unionContribution_; }
      set {
        unionContribution_ = value;
      }
    }

    /// <summary>Field number for the "fightAttributeList" field.</summary>
    public const int FightAttributeListFieldNumber = 12;
    private static readonly pbc::MapField<int, long>.Codec _map_fightAttributeList_codec
        = new pbc::MapField<int, long>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt64(16), 98);
    private readonly pbc::MapField<int, long> fightAttributeList_ = new pbc::MapField<int, long>();
    /// <summary>
    ///战斗属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, long> FightAttributeList {
      get { return fightAttributeList_; }
    }

    /// <summary>Field number for the "fiveAttributeList" field.</summary>
    public const int FiveAttributeListFieldNumber = 13;
    private static readonly pb::FieldCodec<global::PBase.PB_FiveAttribute> _repeated_fiveAttributeList_codec
        = pb::FieldCodec.ForMessage(106, global::PBase.PB_FiveAttribute.Parser);
    private readonly pbc::RepeatedField<global::PBase.PB_FiveAttribute> fiveAttributeList_ = new pbc::RepeatedField<global::PBase.PB_FiveAttribute>();
    /// <summary>
    ///五行属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PBase.PB_FiveAttribute> FiveAttributeList {
      get { return fiveAttributeList_; }
    }

    /// <summary>Field number for the "moneyList" field.</summary>
    public const int MoneyListFieldNumber = 14;
    private static readonly pb::FieldCodec<global::PBase.PB_Money> _repeated_moneyList_codec
        = pb::FieldCodec.ForMessage(114, global::PBase.PB_Money.Parser);
    private readonly pbc::RepeatedField<global::PBase.PB_Money> moneyList_ = new pbc::RepeatedField<global::PBase.PB_Money>();
    /// <summary>
    ///货币属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PBase.PB_Money> MoneyList {
      get { return moneyList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BackPlayerProperty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BackPlayerProperty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerName != other.PlayerName) return false;
      if (ServerName != other.ServerName) return false;
      if (BodyLevel != other.BodyLevel) return false;
      if (PracticeLevel != other.PracticeLevel) return false;
      if (TrainTime != other.TrainTime) return false;
      if (PracticeType != other.PracticeType) return false;
      if (CurrentBodyEXP != other.CurrentBodyEXP) return false;
      if (CurrentPracticeEXP != other.CurrentPracticeEXP) return false;
      if (UnionName != other.UnionName) return false;
      if (UnionPost != other.UnionPost) return false;
      if (UnionContribution != other.UnionContribution) return false;
      if (!FightAttributeList.Equals(other.FightAttributeList)) return false;
      if(!fiveAttributeList_.Equals(other.fiveAttributeList_)) return false;
      if(!moneyList_.Equals(other.moneyList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (ServerName.Length != 0) hash ^= ServerName.GetHashCode();
      if (BodyLevel != 0) hash ^= BodyLevel.GetHashCode();
      if (PracticeLevel != 0) hash ^= PracticeLevel.GetHashCode();
      if (TrainTime != 0) hash ^= TrainTime.GetHashCode();
      if (PracticeType != 0) hash ^= PracticeType.GetHashCode();
      if (CurrentBodyEXP != 0L) hash ^= CurrentBodyEXP.GetHashCode();
      if (CurrentPracticeEXP != 0L) hash ^= CurrentPracticeEXP.GetHashCode();
      if (UnionName.Length != 0) hash ^= UnionName.GetHashCode();
      if (UnionPost != 0) hash ^= UnionPost.GetHashCode();
      if (UnionContribution != 0) hash ^= UnionContribution.GetHashCode();
      hash ^= FightAttributeList.GetHashCode();
      hash ^= fiveAttributeList_.GetHashCode();
      hash ^= moneyList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerName);
      }
      if (ServerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServerName);
      }
      if (BodyLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BodyLevel);
      }
      if (PracticeLevel != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PracticeLevel);
      }
      if (TrainTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TrainTime);
      }
      if (PracticeType != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PracticeType);
      }
      if (CurrentBodyEXP != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(CurrentBodyEXP);
      }
      if (CurrentPracticeEXP != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(CurrentPracticeEXP);
      }
      if (UnionName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(UnionName);
      }
      if (UnionPost != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(UnionPost);
      }
      if (UnionContribution != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(UnionContribution);
      }
      fightAttributeList_.WriteTo(output, _map_fightAttributeList_codec);
      fiveAttributeList_.WriteTo(output, _repeated_fiveAttributeList_codec);
      moneyList_.WriteTo(output, _repeated_moneyList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (ServerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerName);
      }
      if (BodyLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BodyLevel);
      }
      if (PracticeLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PracticeLevel);
      }
      if (TrainTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TrainTime);
      }
      if (PracticeType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PracticeType);
      }
      if (CurrentBodyEXP != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrentBodyEXP);
      }
      if (CurrentPracticeEXP != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrentPracticeEXP);
      }
      if (UnionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnionName);
      }
      if (UnionPost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnionPost);
      }
      if (UnionContribution != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnionContribution);
      }
      size += fightAttributeList_.CalculateSize(_map_fightAttributeList_codec);
      size += fiveAttributeList_.CalculateSize(_repeated_fiveAttributeList_codec);
      size += moneyList_.CalculateSize(_repeated_moneyList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BackPlayerProperty other) {
      if (other == null) {
        return;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.ServerName.Length != 0) {
        ServerName = other.ServerName;
      }
      if (other.BodyLevel != 0) {
        BodyLevel = other.BodyLevel;
      }
      if (other.PracticeLevel != 0) {
        PracticeLevel = other.PracticeLevel;
      }
      if (other.TrainTime != 0) {
        TrainTime = other.TrainTime;
      }
      if (other.PracticeType != 0) {
        PracticeType = other.PracticeType;
      }
      if (other.CurrentBodyEXP != 0L) {
        CurrentBodyEXP = other.CurrentBodyEXP;
      }
      if (other.CurrentPracticeEXP != 0L) {
        CurrentPracticeEXP = other.CurrentPracticeEXP;
      }
      if (other.UnionName.Length != 0) {
        UnionName = other.UnionName;
      }
      if (other.UnionPost != 0) {
        UnionPost = other.UnionPost;
      }
      if (other.UnionContribution != 0) {
        UnionContribution = other.UnionContribution;
      }
      fightAttributeList_.Add(other.fightAttributeList_);
      fiveAttributeList_.Add(other.fiveAttributeList_);
      moneyList_.Add(other.moneyList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerName = input.ReadString();
            break;
          }
          case 18: {
            ServerName = input.ReadString();
            break;
          }
          case 24: {
            BodyLevel = input.ReadInt32();
            break;
          }
          case 32: {
            PracticeLevel = input.ReadInt32();
            break;
          }
          case 40: {
            TrainTime = input.ReadInt32();
            break;
          }
          case 48: {
            PracticeType = input.ReadInt32();
            break;
          }
          case 56: {
            CurrentBodyEXP = input.ReadInt64();
            break;
          }
          case 64: {
            CurrentPracticeEXP = input.ReadInt64();
            break;
          }
          case 74: {
            UnionName = input.ReadString();
            break;
          }
          case 80: {
            UnionPost = input.ReadInt32();
            break;
          }
          case 88: {
            UnionContribution = input.ReadInt32();
            break;
          }
          case 98: {
            fightAttributeList_.AddEntriesFrom(input, _map_fightAttributeList_codec);
            break;
          }
          case 106: {
            fiveAttributeList_.AddEntriesFrom(input, _repeated_fiveAttributeList_codec);
            break;
          }
          case 114: {
            moneyList_.AddEntriesFrom(input, _repeated_moneyList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///MSG_CL2LG_BREAKLEVEL            = 1702,     //突破修为
  /// </summary>
  public sealed partial class C2S_BreakLevel : pb::IMessage<C2S_BreakLevel> {
    private static readonly pb::MessageParser<C2S_BreakLevel> _parser = new pb::MessageParser<C2S_BreakLevel>(() => new C2S_BreakLevel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_BreakLevel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_BreakLevel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_BreakLevel(C2S_BreakLevel other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_BreakLevel Clone() {
      return new C2S_BreakLevel(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///突破类型(1:修体突破  2:修法突破)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_BreakLevel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_BreakLevel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_BreakLevel other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///MSG_LG2CL_BACKBREAKRESULT       = 2702，    //返回突破结果
  /// </summary>
  public sealed partial class S2C_BackBreakResult : pb::IMessage<S2C_BackBreakResult> {
    private static readonly pb::MessageParser<S2C_BackBreakResult> _parser = new pb::MessageParser<S2C_BackBreakResult>(() => new S2C_BackBreakResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BackBreakResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackBreakResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackBreakResult(S2C_BackBreakResult other) : this() {
      result_ = other.result_;
      practiceEXP_ = other.practiceEXP_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackBreakResult Clone() {
      return new S2C_BackBreakResult(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    /// <summary>
    ///结果(0:失败 1:成功)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "practiceEXP" field.</summary>
    public const int PracticeEXPFieldNumber = 2;
    private long practiceEXP_;
    /// <summary>
    ///当前境界修为值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PracticeEXP {
      get { return practiceEXP_; }
      set {
        practiceEXP_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BackBreakResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BackBreakResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (PracticeEXP != other.PracticeEXP) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (PracticeEXP != 0L) hash ^= PracticeEXP.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (PracticeEXP != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PracticeEXP);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (PracticeEXP != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PracticeEXP);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BackBreakResult other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.PracticeEXP != 0L) {
        PracticeEXP = other.PracticeEXP;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 16: {
            PracticeEXP = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///MSG_CL2LG_PRACTICE              = 1703,     //修行操作
  /// </summary>
  public sealed partial class C2S_PracticeOperate : pb::IMessage<C2S_PracticeOperate> {
    private static readonly pb::MessageParser<C2S_PracticeOperate> _parser = new pb::MessageParser<C2S_PracticeOperate>(() => new C2S_PracticeOperate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_PracticeOperate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_PracticeOperate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_PracticeOperate(C2S_PracticeOperate other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_PracticeOperate Clone() {
      return new C2S_PracticeOperate(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///请求类型(1:进入修行界面 0:退出修行界面)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_PracticeOperate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_PracticeOperate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_PracticeOperate other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///MSG_LG2CL_BACKPRACTICEEXP       = 2703,     //返回当前修为值
  /// </summary>
  public sealed partial class S2C_BackPracticeEXP : pb::IMessage<S2C_BackPracticeEXP> {
    private static readonly pb::MessageParser<S2C_BackPracticeEXP> _parser = new pb::MessageParser<S2C_BackPracticeEXP>(() => new S2C_BackPracticeEXP());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BackPracticeEXP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackPracticeEXP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackPracticeEXP(S2C_BackPracticeEXP other) : this() {
      practiceType_ = other.practiceType_;
      practiceEXP_ = other.practiceEXP_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BackPracticeEXP Clone() {
      return new S2C_BackPracticeEXP(this);
    }

    /// <summary>Field number for the "practiceType" field.</summary>
    public const int PracticeTypeFieldNumber = 1;
    private int practiceType_;
    /// <summary>
    ///当前修行类型(0:无效值,不做处理 1:修体  2:修法)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PracticeType {
      get { return practiceType_; }
      set {
        practiceType_ = value;
      }
    }

    /// <summary>Field number for the "practiceEXP" field.</summary>
    public const int PracticeEXPFieldNumber = 2;
    private long practiceEXP_;
    /// <summary>
    ///当前修为值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PracticeEXP {
      get { return practiceEXP_; }
      set {
        practiceEXP_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BackPracticeEXP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BackPracticeEXP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PracticeType != other.PracticeType) return false;
      if (PracticeEXP != other.PracticeEXP) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PracticeType != 0) hash ^= PracticeType.GetHashCode();
      if (PracticeEXP != 0L) hash ^= PracticeEXP.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PracticeType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PracticeType);
      }
      if (PracticeEXP != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PracticeEXP);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PracticeType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PracticeType);
      }
      if (PracticeEXP != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PracticeEXP);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BackPracticeEXP other) {
      if (other == null) {
        return;
      }
      if (other.PracticeType != 0) {
        PracticeType = other.PracticeType;
      }
      if (other.PracticeEXP != 0L) {
        PracticeEXP = other.PracticeEXP;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PracticeType = input.ReadInt32();
            break;
          }
          case 16: {
            PracticeEXP = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///MSG_CL2LG_CHANGEPRACTICETYPE    = 1704,     //改变修行类型
  /// </summary>
  public sealed partial class C2S_ChangePracticeType : pb::IMessage<C2S_ChangePracticeType> {
    private static readonly pb::MessageParser<C2S_ChangePracticeType> _parser = new pb::MessageParser<C2S_ChangePracticeType>(() => new C2S_ChangePracticeType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_ChangePracticeType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ChangePracticeType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ChangePracticeType(C2S_ChangePracticeType other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ChangePracticeType Clone() {
      return new C2S_ChangePracticeType(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///修行类型(1:修体  2:修法)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_ChangePracticeType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_ChangePracticeType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_ChangePracticeType other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_CL2LG_STARTBATTLESINGLE    	= 1901,     //开始战斗单人
  /// </summary>
  public sealed partial class C2S_StartBattleSingle : pb::IMessage<C2S_StartBattleSingle> {
    private static readonly pb::MessageParser<C2S_StartBattleSingle> _parser = new pb::MessageParser<C2S_StartBattleSingle>(() => new C2S_StartBattleSingle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_StartBattleSingle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_StartBattleSingle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_StartBattleSingle(C2S_StartBattleSingle other) : this() {
      regionId_ = other.regionId_;
      mapId_ = other.mapId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_StartBattleSingle Clone() {
      return new C2S_StartBattleSingle(this);
    }

    /// <summary>Field number for the "regionId" field.</summary>
    public const int RegionIdFieldNumber = 1;
    private int regionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RegionId {
      get { return regionId_; }
      set {
        regionId_ = value;
      }
    }

    /// <summary>Field number for the "mapId" field.</summary>
    public const int MapIdFieldNumber = 2;
    private int mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_StartBattleSingle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_StartBattleSingle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RegionId != other.RegionId) return false;
      if (MapId != other.MapId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RegionId != 0) hash ^= RegionId.GetHashCode();
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RegionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RegionId);
      }
      if (MapId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MapId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RegionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RegionId);
      }
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_StartBattleSingle other) {
      if (other == null) {
        return;
      }
      if (other.RegionId != 0) {
        RegionId = other.RegionId;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RegionId = input.ReadInt32();
            break;
          }
          case 16: {
            MapId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2C_StartBattleSingle : pb::IMessage<S2C_StartBattleSingle> {
    private static readonly pb::MessageParser<S2C_StartBattleSingle> _parser = new pb::MessageParser<S2C_StartBattleSingle>(() => new S2C_StartBattleSingle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_StartBattleSingle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_StartBattleSingle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_StartBattleSingle(S2C_StartBattleSingle other) : this() {
      regionId_ = other.regionId_;
      curTurnIndex_ = other.curTurnIndex_;
      playerList_ = other.playerList_.Clone();
      turnList_ = other.turnList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_StartBattleSingle Clone() {
      return new S2C_StartBattleSingle(this);
    }

    /// <summary>Field number for the "regionId" field.</summary>
    public const int RegionIdFieldNumber = 1;
    private int regionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RegionId {
      get { return regionId_; }
      set {
        regionId_ = value;
      }
    }

    /// <summary>Field number for the "curTurnIndex" field.</summary>
    public const int CurTurnIndexFieldNumber = 2;
    private int curTurnIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurTurnIndex {
      get { return curTurnIndex_; }
      set {
        curTurnIndex_ = value;
      }
    }

    /// <summary>Field number for the "playerList" field.</summary>
    public const int PlayerListFieldNumber = 8;
    private static readonly pb::FieldCodec<global::PBase.PB_BattleObj> _repeated_playerList_codec
        = pb::FieldCodec.ForMessage(66, global::PBase.PB_BattleObj.Parser);
    private readonly pbc::RepeatedField<global::PBase.PB_BattleObj> playerList_ = new pbc::RepeatedField<global::PBase.PB_BattleObj>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PBase.PB_BattleObj> PlayerList {
      get { return playerList_; }
    }

    /// <summary>Field number for the "turnList" field.</summary>
    public const int TurnListFieldNumber = 9;
    private static readonly pb::FieldCodec<global::PBase.PB_BattleTurn> _repeated_turnList_codec
        = pb::FieldCodec.ForMessage(74, global::PBase.PB_BattleTurn.Parser);
    private readonly pbc::RepeatedField<global::PBase.PB_BattleTurn> turnList_ = new pbc::RepeatedField<global::PBase.PB_BattleTurn>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PBase.PB_BattleTurn> TurnList {
      get { return turnList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_StartBattleSingle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_StartBattleSingle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RegionId != other.RegionId) return false;
      if (CurTurnIndex != other.CurTurnIndex) return false;
      if(!playerList_.Equals(other.playerList_)) return false;
      if(!turnList_.Equals(other.turnList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RegionId != 0) hash ^= RegionId.GetHashCode();
      if (CurTurnIndex != 0) hash ^= CurTurnIndex.GetHashCode();
      hash ^= playerList_.GetHashCode();
      hash ^= turnList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RegionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RegionId);
      }
      if (CurTurnIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurTurnIndex);
      }
      playerList_.WriteTo(output, _repeated_playerList_codec);
      turnList_.WriteTo(output, _repeated_turnList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RegionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RegionId);
      }
      if (CurTurnIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurTurnIndex);
      }
      size += playerList_.CalculateSize(_repeated_playerList_codec);
      size += turnList_.CalculateSize(_repeated_turnList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_StartBattleSingle other) {
      if (other == null) {
        return;
      }
      if (other.RegionId != 0) {
        RegionId = other.RegionId;
      }
      if (other.CurTurnIndex != 0) {
        CurTurnIndex = other.CurTurnIndex;
      }
      playerList_.Add(other.playerList_);
      turnList_.Add(other.turnList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RegionId = input.ReadInt32();
            break;
          }
          case 16: {
            CurTurnIndex = input.ReadInt32();
            break;
          }
          case 66: {
            playerList_.AddEntriesFrom(input, _repeated_playerList_codec);
            break;
          }
          case 74: {
            turnList_.AddEntriesFrom(input, _repeated_turnList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_CL2LG_BATTLEATTCK    		= 1902,     //攻击
  /// </summary>
  public sealed partial class C2S_BattleAttack : pb::IMessage<C2S_BattleAttack> {
    private static readonly pb::MessageParser<C2S_BattleAttack> _parser = new pb::MessageParser<C2S_BattleAttack>(() => new C2S_BattleAttack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_BattleAttack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_BattleAttack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_BattleAttack(C2S_BattleAttack other) : this() {
      skillId_ = other.skillId_;
      attackId_ = other.attackId_;
      defenseId_ = other.defenseId_;
      posx_ = other.posx_;
      posy_ = other.posy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_BattleAttack Clone() {
      return new C2S_BattleAttack(this);
    }

    /// <summary>Field number for the "skillId" field.</summary>
    public const int SkillIdFieldNumber = 1;
    private int skillId_;
    /// <summary>
    ///技能id    
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkillId {
      get { return skillId_; }
      set {
        skillId_ = value;
      }
    }

    /// <summary>Field number for the "attackId" field.</summary>
    public const int AttackIdFieldNumber = 2;
    private int attackId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttackId {
      get { return attackId_; }
      set {
        attackId_ = value;
      }
    }

    /// <summary>Field number for the "defenseId" field.</summary>
    public const int DefenseIdFieldNumber = 3;
    private int defenseId_;
    /// <summary>
    ///被攻击id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DefenseId {
      get { return defenseId_; }
      set {
        defenseId_ = value;
      }
    }

    /// <summary>Field number for the "posx" field.</summary>
    public const int PosxFieldNumber = 4;
    private int posx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Posx {
      get { return posx_; }
      set {
        posx_ = value;
      }
    }

    /// <summary>Field number for the "posy" field.</summary>
    public const int PosyFieldNumber = 5;
    private int posy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Posy {
      get { return posy_; }
      set {
        posy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_BattleAttack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_BattleAttack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SkillId != other.SkillId) return false;
      if (AttackId != other.AttackId) return false;
      if (DefenseId != other.DefenseId) return false;
      if (Posx != other.Posx) return false;
      if (Posy != other.Posy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SkillId != 0) hash ^= SkillId.GetHashCode();
      if (AttackId != 0) hash ^= AttackId.GetHashCode();
      if (DefenseId != 0) hash ^= DefenseId.GetHashCode();
      if (Posx != 0) hash ^= Posx.GetHashCode();
      if (Posy != 0) hash ^= Posy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SkillId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SkillId);
      }
      if (AttackId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AttackId);
      }
      if (DefenseId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DefenseId);
      }
      if (Posx != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Posx);
      }
      if (Posy != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Posy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillId);
      }
      if (AttackId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackId);
      }
      if (DefenseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefenseId);
      }
      if (Posx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Posx);
      }
      if (Posy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Posy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_BattleAttack other) {
      if (other == null) {
        return;
      }
      if (other.SkillId != 0) {
        SkillId = other.SkillId;
      }
      if (other.AttackId != 0) {
        AttackId = other.AttackId;
      }
      if (other.DefenseId != 0) {
        DefenseId = other.DefenseId;
      }
      if (other.Posx != 0) {
        Posx = other.Posx;
      }
      if (other.Posy != 0) {
        Posy = other.Posy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SkillId = input.ReadInt32();
            break;
          }
          case 16: {
            AttackId = input.ReadInt32();
            break;
          }
          case 24: {
            DefenseId = input.ReadInt32();
            break;
          }
          case 32: {
            Posx = input.ReadInt32();
            break;
          }
          case 40: {
            Posy = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_LG2LC_BATTLEATTCK    		= 2902,     //攻击	
  /// </summary>
  public sealed partial class S2C_BattleAttack : pb::IMessage<S2C_BattleAttack> {
    private static readonly pb::MessageParser<S2C_BattleAttack> _parser = new pb::MessageParser<S2C_BattleAttack>(() => new S2C_BattleAttack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BattleAttack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BattleAttack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BattleAttack(S2C_BattleAttack other) : this() {
      skillId_ = other.skillId_;
      attackId_ = other.attackId_;
      defenseId_ = other.defenseId_;
      posx_ = other.posx_;
      posy_ = other.posy_;
      damage_ = other.damage_;
      hp_ = other.hp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BattleAttack Clone() {
      return new S2C_BattleAttack(this);
    }

    /// <summary>Field number for the "skillId" field.</summary>
    public const int SkillIdFieldNumber = 1;
    private int skillId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkillId {
      get { return skillId_; }
      set {
        skillId_ = value;
      }
    }

    /// <summary>Field number for the "attackId" field.</summary>
    public const int AttackIdFieldNumber = 2;
    private int attackId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttackId {
      get { return attackId_; }
      set {
        attackId_ = value;
      }
    }

    /// <summary>Field number for the "defenseId" field.</summary>
    public const int DefenseIdFieldNumber = 3;
    private int defenseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DefenseId {
      get { return defenseId_; }
      set {
        defenseId_ = value;
      }
    }

    /// <summary>Field number for the "posx" field.</summary>
    public const int PosxFieldNumber = 4;
    private int posx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Posx {
      get { return posx_; }
      set {
        posx_ = value;
      }
    }

    /// <summary>Field number for the "posy" field.</summary>
    public const int PosyFieldNumber = 5;
    private int posy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Posy {
      get { return posy_; }
      set {
        posy_ = value;
      }
    }

    /// <summary>Field number for the "damage" field.</summary>
    public const int DamageFieldNumber = 6;
    private int damage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Damage {
      get { return damage_; }
      set {
        damage_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 7;
    private int hp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BattleAttack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BattleAttack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SkillId != other.SkillId) return false;
      if (AttackId != other.AttackId) return false;
      if (DefenseId != other.DefenseId) return false;
      if (Posx != other.Posx) return false;
      if (Posy != other.Posy) return false;
      if (Damage != other.Damage) return false;
      if (Hp != other.Hp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SkillId != 0) hash ^= SkillId.GetHashCode();
      if (AttackId != 0) hash ^= AttackId.GetHashCode();
      if (DefenseId != 0) hash ^= DefenseId.GetHashCode();
      if (Posx != 0) hash ^= Posx.GetHashCode();
      if (Posy != 0) hash ^= Posy.GetHashCode();
      if (Damage != 0) hash ^= Damage.GetHashCode();
      if (Hp != 0) hash ^= Hp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SkillId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SkillId);
      }
      if (AttackId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AttackId);
      }
      if (DefenseId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DefenseId);
      }
      if (Posx != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Posx);
      }
      if (Posy != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Posy);
      }
      if (Damage != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Damage);
      }
      if (Hp != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Hp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillId);
      }
      if (AttackId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackId);
      }
      if (DefenseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefenseId);
      }
      if (Posx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Posx);
      }
      if (Posy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Posy);
      }
      if (Damage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Damage);
      }
      if (Hp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BattleAttack other) {
      if (other == null) {
        return;
      }
      if (other.SkillId != 0) {
        SkillId = other.SkillId;
      }
      if (other.AttackId != 0) {
        AttackId = other.AttackId;
      }
      if (other.DefenseId != 0) {
        DefenseId = other.DefenseId;
      }
      if (other.Posx != 0) {
        Posx = other.Posx;
      }
      if (other.Posy != 0) {
        Posy = other.Posy;
      }
      if (other.Damage != 0) {
        Damage = other.Damage;
      }
      if (other.Hp != 0) {
        Hp = other.Hp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SkillId = input.ReadInt32();
            break;
          }
          case 16: {
            AttackId = input.ReadInt32();
            break;
          }
          case 24: {
            DefenseId = input.ReadInt32();
            break;
          }
          case 32: {
            Posx = input.ReadInt32();
            break;
          }
          case 40: {
            Posy = input.ReadInt32();
            break;
          }
          case 48: {
            Damage = input.ReadInt32();
            break;
          }
          case 56: {
            Hp = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_LG2LC_BATTLENEXTTURN    	= 2903,     //下一波信息
  /// </summary>
  public sealed partial class S2C_BattleNextTurn : pb::IMessage<S2C_BattleNextTurn> {
    private static readonly pb::MessageParser<S2C_BattleNextTurn> _parser = new pb::MessageParser<S2C_BattleNextTurn>(() => new S2C_BattleNextTurn());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BattleNextTurn> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BattleNextTurn() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BattleNextTurn(S2C_BattleNextTurn other) : this() {
      curTurnIndex_ = other.curTurnIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BattleNextTurn Clone() {
      return new S2C_BattleNextTurn(this);
    }

    /// <summary>Field number for the "curTurnIndex" field.</summary>
    public const int CurTurnIndexFieldNumber = 1;
    private int curTurnIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurTurnIndex {
      get { return curTurnIndex_; }
      set {
        curTurnIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BattleNextTurn);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BattleNextTurn other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurTurnIndex != other.CurTurnIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurTurnIndex != 0) hash ^= CurTurnIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CurTurnIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurTurnIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurTurnIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurTurnIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BattleNextTurn other) {
      if (other == null) {
        return;
      }
      if (other.CurTurnIndex != 0) {
        CurTurnIndex = other.CurTurnIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurTurnIndex = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MSG_LG2LC_BATTLEGAMEOVER    	= 2905,     //战斗结束
  /// </summary>
  public sealed partial class S2C_BattleGameOver : pb::IMessage<S2C_BattleGameOver> {
    private static readonly pb::MessageParser<S2C_BattleGameOver> _parser = new pb::MessageParser<S2C_BattleGameOver>(() => new S2C_BattleGameOver());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BattleGameOver> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BattleGameOver() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BattleGameOver(S2C_BattleGameOver other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BattleGameOver Clone() {
      return new S2C_BattleGameOver(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BattleGameOver);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BattleGameOver other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BattleGameOver other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///更新玩家货币信息
  /// </summary>
  public sealed partial class S2C_UpdateUserMoney : pb::IMessage<S2C_UpdateUserMoney> {
    private static readonly pb::MessageParser<S2C_UpdateUserMoney> _parser = new pb::MessageParser<S2C_UpdateUserMoney>(() => new S2C_UpdateUserMoney());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_UpdateUserMoney> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_UpdateUserMoney() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_UpdateUserMoney(S2C_UpdateUserMoney other) : this() {
      money_ = other.money_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_UpdateUserMoney Clone() {
      return new S2C_UpdateUserMoney(this);
    }

    /// <summary>Field number for the "money" field.</summary>
    public const int MoneyFieldNumber = 1;
    private static readonly pb::FieldCodec<global::PBase.PB_Money> _repeated_money_codec
        = pb::FieldCodec.ForMessage(10, global::PBase.PB_Money.Parser);
    private readonly pbc::RepeatedField<global::PBase.PB_Money> money_ = new pbc::RepeatedField<global::PBase.PB_Money>();
    /// <summary>
    ///房卡数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PBase.PB_Money> Money {
      get { return money_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_UpdateUserMoney);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_UpdateUserMoney other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!money_.Equals(other.money_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= money_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      money_.WriteTo(output, _repeated_money_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += money_.CalculateSize(_repeated_money_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_UpdateUserMoney other) {
      if (other == null) {
        return;
      }
      money_.Add(other.money_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            money_.AddEntriesFrom(input, _repeated_money_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///上传用户信息()
  /// </summary>
  public sealed partial class C2S_UploadUserInfo : pb::IMessage<C2S_UploadUserInfo> {
    private static readonly pb::MessageParser<C2S_UploadUserInfo> _parser = new pb::MessageParser<C2S_UploadUserInfo>(() => new C2S_UploadUserInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_UploadUserInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_UploadUserInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_UploadUserInfo(C2S_UploadUserInfo other) : this() {
      imageUrl_ = other.imageUrl_;
      sex_ = other.sex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_UploadUserInfo Clone() {
      return new C2S_UploadUserInfo(this);
    }

    /// <summary>Field number for the "imageUrl" field.</summary>
    public const int ImageUrlFieldNumber = 4;
    private string imageUrl_ = "";
    /// <summary>
    ///用户头像Url
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageUrl {
      get { return imageUrl_; }
      set {
        imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sex" field.</summary>
    public const int SexFieldNumber = 5;
    private int sex_;
    /// <summary>
    ///性别 0-女 1-男
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sex {
      get { return sex_; }
      set {
        sex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_UploadUserInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_UploadUserInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ImageUrl != other.ImageUrl) return false;
      if (Sex != other.Sex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ImageUrl.Length != 0) hash ^= ImageUrl.GetHashCode();
      if (Sex != 0) hash ^= Sex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ImageUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ImageUrl);
      }
      if (Sex != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Sex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ImageUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
      }
      if (Sex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_UploadUserInfo other) {
      if (other == null) {
        return;
      }
      if (other.ImageUrl.Length != 0) {
        ImageUrl = other.ImageUrl;
      }
      if (other.Sex != 0) {
        Sex = other.Sex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 34: {
            ImageUrl = input.ReadString();
            break;
          }
          case 40: {
            Sex = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///完成登录过程（）
  /// </summary>
  public sealed partial class S2C_FinishLogin : pb::IMessage<S2C_FinishLogin> {
    private static readonly pb::MessageParser<S2C_FinishLogin> _parser = new pb::MessageParser<S2C_FinishLogin>(() => new S2C_FinishLogin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_FinishLogin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_FinishLogin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_FinishLogin(S2C_FinishLogin other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_FinishLogin Clone() {
      return new S2C_FinishLogin(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_FinishLogin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_FinishLogin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_FinishLogin other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///地理位置信息上传()
  /// </summary>
  public sealed partial class C2S_UploadLocation : pb::IMessage<C2S_UploadLocation> {
    private static readonly pb::MessageParser<C2S_UploadLocation> _parser = new pb::MessageParser<C2S_UploadLocation>(() => new C2S_UploadLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_UploadLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_UploadLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_UploadLocation(C2S_UploadLocation other) : this() {
      locationX_ = other.locationX_;
      locationY_ = other.locationY_;
      describe_ = other.describe_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_UploadLocation Clone() {
      return new C2S_UploadLocation(this);
    }

    /// <summary>Field number for the "locationX" field.</summary>
    public const int LocationXFieldNumber = 1;
    private float locationX_;
    /// <summary>
    ///经度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float LocationX {
      get { return locationX_; }
      set {
        locationX_ = value;
      }
    }

    /// <summary>Field number for the "locationY" field.</summary>
    public const int LocationYFieldNumber = 2;
    private float locationY_;
    /// <summary>
    ///纬度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float LocationY {
      get { return locationY_; }
      set {
        locationY_ = value;
      }
    }

    /// <summary>Field number for the "describe" field.</summary>
    public const int DescribeFieldNumber = 3;
    private string describe_ = "";
    /// <summary>
    ///描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Describe {
      get { return describe_; }
      set {
        describe_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_UploadLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_UploadLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LocationX, other.LocationX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LocationY, other.LocationY)) return false;
      if (Describe != other.Describe) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LocationX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LocationX);
      if (LocationY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LocationY);
      if (Describe.Length != 0) hash ^= Describe.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LocationX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(LocationX);
      }
      if (LocationY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(LocationY);
      }
      if (Describe.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Describe);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LocationX != 0F) {
        size += 1 + 4;
      }
      if (LocationY != 0F) {
        size += 1 + 4;
      }
      if (Describe.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Describe);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_UploadLocation other) {
      if (other == null) {
        return;
      }
      if (other.LocationX != 0F) {
        LocationX = other.LocationX;
      }
      if (other.LocationY != 0F) {
        LocationY = other.LocationY;
      }
      if (other.Describe.Length != 0) {
        Describe = other.Describe;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            LocationX = input.ReadFloat();
            break;
          }
          case 21: {
            LocationY = input.ReadFloat();
            break;
          }
          case 26: {
            Describe = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///退出房间
  /// </summary>
  public sealed partial class C2S_ExitRoom : pb::IMessage<C2S_ExitRoom> {
    private static readonly pb::MessageParser<C2S_ExitRoom> _parser = new pb::MessageParser<C2S_ExitRoom>(() => new C2S_ExitRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_ExitRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ExitRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ExitRoom(C2S_ExitRoom other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ExitRoom Clone() {
      return new C2S_ExitRoom(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_ExitRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_ExitRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_ExitRoom other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///退出房间 广播
  /// </summary>
  public sealed partial class S2C_ExitRoom : pb::IMessage<S2C_ExitRoom> {
    private static readonly pb::MessageParser<S2C_ExitRoom> _parser = new pb::MessageParser<S2C_ExitRoom>(() => new S2C_ExitRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_ExitRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ExitRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ExitRoom(S2C_ExitRoom other) : this() {
      userId_ = other.userId_;
      exittype_ = other.exittype_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ExitRoom Clone() {
      return new S2C_ExitRoom(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    /// <summary>
    ///哪一个玩家退出了房间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "exittype" field.</summary>
    public const int ExittypeFieldNumber = 2;
    private int exittype_;
    /// <summary>
    ///退出方式  1为正常 2金币场扣钱退出 3金币场没准备
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Exittype {
      get { return exittype_; }
      set {
        exittype_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_ExitRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_ExitRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Exittype != other.Exittype) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (Exittype != 0) hash ^= Exittype.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (Exittype != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Exittype);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (Exittype != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exittype);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_ExitRoom other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.Exittype != 0) {
        Exittype = other.Exittype;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 16: {
            Exittype = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///发送文字聊天
  /// </summary>
  public sealed partial class C2S_SendChat : pb::IMessage<C2S_SendChat> {
    private static readonly pb::MessageParser<C2S_SendChat> _parser = new pb::MessageParser<C2S_SendChat>(() => new C2S_SendChat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_SendChat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_SendChat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_SendChat(C2S_SendChat other) : this() {
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_SendChat Clone() {
      return new C2S_SendChat(this);
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 1;
    private string content_ = "";
    /// <summary>
    ///聊天消息内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_SendChat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_SendChat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Content.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_SendChat other) {
      if (other == null) {
        return;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// </summary>
  public sealed partial class S2C_PushSendChat : pb::IMessage<S2C_PushSendChat> {
    private static readonly pb::MessageParser<S2C_PushSendChat> _parser = new pb::MessageParser<S2C_PushSendChat>(() => new S2C_PushSendChat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_PushSendChat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_PushSendChat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_PushSendChat(S2C_PushSendChat other) : this() {
      userId_ = other.userId_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_PushSendChat Clone() {
      return new S2C_PushSendChat(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    /// <summary>
    ///发送方id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    private string content_ = "";
    /// <summary>
    ///收到的聊天消息内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_PushSendChat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_PushSendChat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_PushSendChat other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///发送语音
  /// </summary>
  public sealed partial class C2S_SendVoice : pb::IMessage<C2S_SendVoice> {
    private static readonly pb::MessageParser<C2S_SendVoice> _parser = new pb::MessageParser<C2S_SendVoice>(() => new C2S_SendVoice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_SendVoice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_SendVoice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_SendVoice(C2S_SendVoice other) : this() {
      content_ = other.content_;
      flag_ = other.flag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_SendVoice Clone() {
      return new C2S_SendVoice(this);
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 1;
    private pb::ByteString content_ = pb::ByteString.Empty;
    /// <summary>
    ///语音消息内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "flag" field.</summary>
    public const int FlagFieldNumber = 2;
    private int flag_;
    /// <summary>
    ///当前状态 0空闲  1接收数据中  2接收数据完成
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Flag {
      get { return flag_; }
      set {
        flag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_SendVoice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_SendVoice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Content != other.Content) return false;
      if (Flag != other.Flag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (Flag != 0) hash ^= Flag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Content.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Content);
      }
      if (Flag != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Flag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      if (Flag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Flag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_SendVoice other) {
      if (other == null) {
        return;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.Flag != 0) {
        Flag = other.Flag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Content = input.ReadBytes();
            break;
          }
          case 16: {
            Flag = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///发送语音
  /// </summary>
  public sealed partial class S2C_PushVoice : pb::IMessage<S2C_PushVoice> {
    private static readonly pb::MessageParser<S2C_PushVoice> _parser = new pb::MessageParser<S2C_PushVoice>(() => new S2C_PushVoice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_PushVoice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_PushVoice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_PushVoice(S2C_PushVoice other) : this() {
      userId_ = other.userId_;
      content_ = other.content_;
      flag_ = other.flag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_PushVoice Clone() {
      return new S2C_PushVoice(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    /// <summary>
    ///发送方id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    private pb::ByteString content_ = pb::ByteString.Empty;
    /// <summary>
    ///收到的语音消息内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "flag" field.</summary>
    public const int FlagFieldNumber = 3;
    private int flag_;
    /// <summary>
    ///当前状态 0空闲  1接收数据中  2接收数据完成
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Flag {
      get { return flag_; }
      set {
        flag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_PushVoice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_PushVoice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Content != other.Content) return false;
      if (Flag != other.Flag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (Flag != 0) hash ^= Flag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Content);
      }
      if (Flag != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Flag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      if (Flag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Flag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_PushVoice other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.Flag != 0) {
        Flag = other.Flag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 18: {
            Content = input.ReadBytes();
            break;
          }
          case 24: {
            Flag = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///做测试牌型
  /// </summary>
  public sealed partial class C2S_CheatCard : pb::IMessage<C2S_CheatCard> {
    private static readonly pb::MessageParser<C2S_CheatCard> _parser = new pb::MessageParser<C2S_CheatCard>(() => new C2S_CheatCard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_CheatCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_CheatCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_CheatCard(C2S_CheatCard other) : this() {
      cheatCards1_ = other.cheatCards1_;
      cheatCards2_ = other.cheatCards2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_CheatCard Clone() {
      return new C2S_CheatCard(this);
    }

    /// <summary>Field number for the "cheatCards1" field.</summary>
    public const int CheatCards1FieldNumber = 1;
    private string cheatCards1_ = "";
    /// <summary>
    ///测试牌1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CheatCards1 {
      get { return cheatCards1_; }
      set {
        cheatCards1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cheatCards2" field.</summary>
    public const int CheatCards2FieldNumber = 2;
    private string cheatCards2_ = "";
    /// <summary>
    ///测试牌2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CheatCards2 {
      get { return cheatCards2_; }
      set {
        cheatCards2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_CheatCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_CheatCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CheatCards1 != other.CheatCards1) return false;
      if (CheatCards2 != other.CheatCards2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CheatCards1.Length != 0) hash ^= CheatCards1.GetHashCode();
      if (CheatCards2.Length != 0) hash ^= CheatCards2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CheatCards1.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CheatCards1);
      }
      if (CheatCards2.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CheatCards2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CheatCards1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CheatCards1);
      }
      if (CheatCards2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CheatCards2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_CheatCard other) {
      if (other == null) {
        return;
      }
      if (other.CheatCards1.Length != 0) {
        CheatCards1 = other.CheatCards1;
      }
      if (other.CheatCards2.Length != 0) {
        CheatCards2 = other.CheatCards2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CheatCards1 = input.ReadString();
            break;
          }
          case 18: {
            CheatCards2 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///大厅查询玩家信息
  /// </summary>
  public sealed partial class C2S_GetHallUserInfo : pb::IMessage<C2S_GetHallUserInfo> {
    private static readonly pb::MessageParser<C2S_GetHallUserInfo> _parser = new pb::MessageParser<C2S_GetHallUserInfo>(() => new C2S_GetHallUserInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_GetHallUserInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetHallUserInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetHallUserInfo(C2S_GetHallUserInfo other) : this() {
      gameId_ = other.gameId_;
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_GetHallUserInfo Clone() {
      return new C2S_GetHallUserInfo(this);
    }

    /// <summary>Field number for the "gameId" field.</summary>
    public const int GameIdFieldNumber = 1;
    private int gameId_;
    /// <summary>
    ///游戏id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameId {
      get { return gameId_; }
      set {
        gameId_ = value;
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private int userId_;
    /// <summary>
    ///用户ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_GetHallUserInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_GetHallUserInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameId != 0) hash ^= GameId.GetHashCode();
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GameId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GameId);
      }
      if (UserId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameId);
      }
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_GetHallUserInfo other) {
      if (other == null) {
        return;
      }
      if (other.GameId != 0) {
        GameId = other.GameId;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameId = input.ReadInt32();
            break;
          }
          case 16: {
            UserId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///公告
  /// </summary>
  public sealed partial class C2S_NoticeInfo : pb::IMessage<C2S_NoticeInfo> {
    private static readonly pb::MessageParser<C2S_NoticeInfo> _parser = new pb::MessageParser<C2S_NoticeInfo>(() => new C2S_NoticeInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_NoticeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_NoticeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_NoticeInfo(C2S_NoticeInfo other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_NoticeInfo Clone() {
      return new C2S_NoticeInfo(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_NoticeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_NoticeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_NoticeInfo other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// </summary>
  public sealed partial class S2C_NoticeInfo : pb::IMessage<S2C_NoticeInfo> {
    private static readonly pb::MessageParser<S2C_NoticeInfo> _parser = new pb::MessageParser<S2C_NoticeInfo>(() => new S2C_NoticeInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_NoticeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_NoticeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_NoticeInfo(S2C_NoticeInfo other) : this() {
      noticecontent_ = other.noticecontent_;
      starttime_ = other.starttime_;
      endtime_ = other.endtime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_NoticeInfo Clone() {
      return new S2C_NoticeInfo(this);
    }

    /// <summary>Field number for the "noticecontent" field.</summary>
    public const int NoticecontentFieldNumber = 1;
    private string noticecontent_ = "";
    /// <summary>
    ///公告内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Noticecontent {
      get { return noticecontent_; }
      set {
        noticecontent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "starttime" field.</summary>
    public const int StarttimeFieldNumber = 2;
    private int starttime_;
    /// <summary>
    ///开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Starttime {
      get { return starttime_; }
      set {
        starttime_ = value;
      }
    }

    /// <summary>Field number for the "endtime" field.</summary>
    public const int EndtimeFieldNumber = 3;
    private int endtime_;
    /// <summary>
    ///结束时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Endtime {
      get { return endtime_; }
      set {
        endtime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_NoticeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_NoticeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Noticecontent != other.Noticecontent) return false;
      if (Starttime != other.Starttime) return false;
      if (Endtime != other.Endtime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Noticecontent.Length != 0) hash ^= Noticecontent.GetHashCode();
      if (Starttime != 0) hash ^= Starttime.GetHashCode();
      if (Endtime != 0) hash ^= Endtime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Noticecontent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Noticecontent);
      }
      if (Starttime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Starttime);
      }
      if (Endtime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Endtime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Noticecontent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Noticecontent);
      }
      if (Starttime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Starttime);
      }
      if (Endtime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Endtime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_NoticeInfo other) {
      if (other == null) {
        return;
      }
      if (other.Noticecontent.Length != 0) {
        Noticecontent = other.Noticecontent;
      }
      if (other.Starttime != 0) {
        Starttime = other.Starttime;
      }
      if (other.Endtime != 0) {
        Endtime = other.Endtime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Noticecontent = input.ReadString();
            break;
          }
          case 16: {
            Starttime = input.ReadInt32();
            break;
          }
          case 24: {
            Endtime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///绑定手机
  /// </summary>
  public sealed partial class C2S_BindPhone : pb::IMessage<C2S_BindPhone> {
    private static readonly pb::MessageParser<C2S_BindPhone> _parser = new pb::MessageParser<C2S_BindPhone>(() => new C2S_BindPhone());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_BindPhone> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_BindPhone() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_BindPhone(C2S_BindPhone other) : this() {
      phoneNumber_ = other.phoneNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_BindPhone Clone() {
      return new C2S_BindPhone(this);
    }

    /// <summary>Field number for the "phoneNumber" field.</summary>
    public const int PhoneNumberFieldNumber = 1;
    private string phoneNumber_ = "";
    /// <summary>
    ///手机号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PhoneNumber {
      get { return phoneNumber_; }
      set {
        phoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_BindPhone);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_BindPhone other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PhoneNumber != other.PhoneNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PhoneNumber.Length != 0) hash ^= PhoneNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PhoneNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PhoneNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PhoneNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_BindPhone other) {
      if (other == null) {
        return;
      }
      if (other.PhoneNumber.Length != 0) {
        PhoneNumber = other.PhoneNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PhoneNumber = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///绑定手机
  /// </summary>
  public sealed partial class S2C_BindPhone : pb::IMessage<S2C_BindPhone> {
    private static readonly pb::MessageParser<S2C_BindPhone> _parser = new pb::MessageParser<S2C_BindPhone>(() => new S2C_BindPhone());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BindPhone> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BindPhone() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BindPhone(S2C_BindPhone other) : this() {
      phoneNumber_ = other.phoneNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BindPhone Clone() {
      return new S2C_BindPhone(this);
    }

    /// <summary>Field number for the "phoneNumber" field.</summary>
    public const int PhoneNumberFieldNumber = 1;
    private string phoneNumber_ = "";
    /// <summary>
    ///手机号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PhoneNumber {
      get { return phoneNumber_; }
      set {
        phoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BindPhone);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BindPhone other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PhoneNumber != other.PhoneNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PhoneNumber.Length != 0) hash ^= PhoneNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PhoneNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PhoneNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PhoneNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BindPhone other) {
      if (other == null) {
        return;
      }
      if (other.PhoneNumber.Length != 0) {
        PhoneNumber = other.PhoneNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PhoneNumber = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///绑定邀请码
  /// </summary>
  public sealed partial class C2S_BindInviteCode : pb::IMessage<C2S_BindInviteCode> {
    private static readonly pb::MessageParser<C2S_BindInviteCode> _parser = new pb::MessageParser<C2S_BindInviteCode>(() => new C2S_BindInviteCode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_BindInviteCode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_BindInviteCode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_BindInviteCode(C2S_BindInviteCode other) : this() {
      inviteCode_ = other.inviteCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_BindInviteCode Clone() {
      return new C2S_BindInviteCode(this);
    }

    /// <summary>Field number for the "inviteCode" field.</summary>
    public const int InviteCodeFieldNumber = 1;
    private int inviteCode_;
    /// <summary>
    ///邀请码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InviteCode {
      get { return inviteCode_; }
      set {
        inviteCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_BindInviteCode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_BindInviteCode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InviteCode != other.InviteCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InviteCode != 0) hash ^= InviteCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InviteCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InviteCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InviteCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InviteCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_BindInviteCode other) {
      if (other == null) {
        return;
      }
      if (other.InviteCode != 0) {
        InviteCode = other.InviteCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InviteCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///绑定邀请码
  /// </summary>
  public sealed partial class S2C_BindInviteCode : pb::IMessage<S2C_BindInviteCode> {
    private static readonly pb::MessageParser<S2C_BindInviteCode> _parser = new pb::MessageParser<S2C_BindInviteCode>(() => new S2C_BindInviteCode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BindInviteCode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PClient.ClientReflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BindInviteCode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BindInviteCode(S2C_BindInviteCode other) : this() {
      inviteName_ = other.inviteName_;
      inviteCode_ = other.inviteCode_;
      inviteUserId_ = other.inviteUserId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BindInviteCode Clone() {
      return new S2C_BindInviteCode(this);
    }

    /// <summary>Field number for the "inviteName" field.</summary>
    public const int InviteNameFieldNumber = 1;
    private string inviteName_ = "";
    /// <summary>
    ///邀请人名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviteName {
      get { return inviteName_; }
      set {
        inviteName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inviteCode" field.</summary>
    public const int InviteCodeFieldNumber = 2;
    private int inviteCode_;
    /// <summary>
    ///邀请码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InviteCode {
      get { return inviteCode_; }
      set {
        inviteCode_ = value;
      }
    }

    /// <summary>Field number for the "inviteUserId" field.</summary>
    public const int InviteUserIdFieldNumber = 3;
    private int inviteUserId_;
    /// <summary>
    ///邀请码对应的用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InviteUserId {
      get { return inviteUserId_; }
      set {
        inviteUserId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BindInviteCode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BindInviteCode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InviteName != other.InviteName) return false;
      if (InviteCode != other.InviteCode) return false;
      if (InviteUserId != other.InviteUserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InviteName.Length != 0) hash ^= InviteName.GetHashCode();
      if (InviteCode != 0) hash ^= InviteCode.GetHashCode();
      if (InviteUserId != 0) hash ^= InviteUserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InviteName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InviteName);
      }
      if (InviteCode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(InviteCode);
      }
      if (InviteUserId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(InviteUserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InviteName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteName);
      }
      if (InviteCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InviteCode);
      }
      if (InviteUserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InviteUserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BindInviteCode other) {
      if (other == null) {
        return;
      }
      if (other.InviteName.Length != 0) {
        InviteName = other.InviteName;
      }
      if (other.InviteCode != 0) {
        InviteCode = other.InviteCode;
      }
      if (other.InviteUserId != 0) {
        InviteUserId = other.InviteUserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InviteName = input.ReadString();
            break;
          }
          case 16: {
            InviteCode = input.ReadInt32();
            break;
          }
          case 24: {
            InviteUserId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
